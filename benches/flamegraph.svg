<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="678" onload="init(evt)" viewBox="0 0 1200 678" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:monospace; font-size:12px; fill:rgb(0,0,0); }
#title { text-anchor:middle; font-size:17px; }
#matched { text-anchor:end; }
#search { text-anchor:end; opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = true;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames, known_font_width;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    known_font_width = get_monospace_width(frames);
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
            svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            update_text_for_elements(frames.children);

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad;
            matchedtxt.attributes.x.value = svgWidth - xpad;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function get_monospace_width(frames) {
    // Given the id="frames" element, return the width of text characters if
    // this is a monospace font, otherwise return 0.
    text = find_child(frames.children[0], "text");
    originalContent = text.textContent;
    text.textContent = "!";
    bangWidth = text.getComputedTextLength();
    text.textContent = "W";
    wWidth = text.getComputedTextLength();
    text.textContent = originalContent;
    if (bangWidth === wWidth) {
        return bangWidth;
    } else {
        return 0;
    }
}
function update_text_for_elements(elements) {
    // In order to render quickly in the browser, you want to do one pass of
    // reading attributes, and one pass of mutating attributes. See
    // https://web.dev/avoid-large-complex-layouts-and-layout-thrashing/ for details.

    // Fall back to inefficient calculation, if we're variable-width font.
    // TODO This should be optimized somehow too.
    if (known_font_width === 0) {
        for (var i = 0; i < elements.length; i++) {
            update_text(elements[i]);
        }
        return;
    }

    var textElemNewAttributes = [];
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var r = find_child(e, "rect");
        var t = find_child(e, "text");
        var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
        var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
        var newX = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

        // Smaller than this size won't fit anything
        if (w < 2 * known_font_width) {
            textElemNewAttributes.push([newX, ""]);
            continue;
        }

        // Fit in full text width
        if (txt.length * known_font_width < w) {
            textElemNewAttributes.push([newX, txt]);
            continue;
        }

        var substringLength = Math.floor(w / known_font_width) - 2;
        if (truncate_text_right) {
            // Truncate the right side of the text.
            textElemNewAttributes.push([newX, txt.substring(0, substringLength) + ".."]);
            continue;
        } else {
            // Truncate the left side of the text.
            textElemNewAttributes.push([newX, ".." + txt.substring(txt.length - substringLength, txt.length)]);
            continue;
        }
    }

    console.assert(textElemNewAttributes.length === elements.length, "Resize failed, please file a bug at https://github.com/jonhoo/inferno/");

    // Now that we know new textContent, set it all in one go so we don't refresh a bazillion times.
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var values = textElemNewAttributes[i];
        var t = find_child(e, "text");
        t.attributes.x.value = values[0];
        t.textContent = values[1];
    }
}

function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    var to_update_text = [];
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                to_update_text.push(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                to_update_text.push(e);
            }
        }
    }
    update_text_for_elements(to_update_text);
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
    }
    update_text_for_elements(el);
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="678" fill="url(#background)"/><text id="title" x="50.0000%" y="24.00">Flame Graph</text><text id="details" x="10" y="661.00"> </text><text id="unzoom" class="hide" x="10" y="24.00">Reset Zoom</text><text id="search" x="1190" y="24.00">Search</text><text id="matched" x="1190" y="661.00"> </text><svg id="frames" x="10" width="1180" total_samples="182929"><g><title>libsystem_malloc.dylib`0x7ff814766e2b (23 samples, 0.01%)</title><rect x="0.0016%" y="469" width="0.0126%" height="15" fill="rgb(227,0,7)" fg:x="3" fg:w="23"/><text x="0.2516%" y="479.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff814766e3a (29 samples, 0.02%)</title><rect x="0.0175%" y="469" width="0.0159%" height="15" fill="rgb(217,0,24)" fg:x="32" fg:w="29"/><text x="0.2675%" y="479.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff814766e45 (29 samples, 0.02%)</title><rect x="0.0350%" y="469" width="0.0159%" height="15" fill="rgb(221,193,54)" fg:x="64" fg:w="29"/><text x="0.2850%" y="479.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff814766e57 (32 samples, 0.02%)</title><rect x="0.0519%" y="469" width="0.0175%" height="15" fill="rgb(248,212,6)" fg:x="95" fg:w="32"/><text x="0.3019%" y="479.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff814766e60 (29 samples, 0.02%)</title><rect x="0.0700%" y="469" width="0.0159%" height="15" fill="rgb(208,68,35)" fg:x="128" fg:w="29"/><text x="0.3200%" y="479.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff814766e70 (25 samples, 0.01%)</title><rect x="0.0858%" y="469" width="0.0137%" height="15" fill="rgb(232,128,0)" fg:x="157" fg:w="25"/><text x="0.3358%" y="479.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff8147806f8 (23 samples, 0.01%)</title><rect x="0.1022%" y="469" width="0.0126%" height="15" fill="rgb(207,160,47)" fg:x="187" fg:w="23"/><text x="0.3522%" y="479.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff814780a47 (24 samples, 0.01%)</title><rect x="0.1153%" y="469" width="0.0131%" height="15" fill="rgb(228,23,34)" fg:x="211" fg:w="24"/><text x="0.3653%" y="479.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff814780a48 (30 samples, 0.02%)</title><rect x="0.1285%" y="469" width="0.0164%" height="15" fill="rgb(218,30,26)" fg:x="235" fg:w="30"/><text x="0.3785%" y="479.50"></text></g><g><title>libsystem_platform.dylib`DYLD-STUB$$_platform_memmove (125 samples, 0.07%)</title><rect x="0.1449%" y="469" width="0.0683%" height="15" fill="rgb(220,122,19)" fg:x="265" fg:w="125"/><text x="0.3949%" y="479.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (211 samples, 0.12%)</title><rect x="0.2132%" y="469" width="0.1153%" height="15" fill="rgb(250,228,42)" fg:x="390" fg:w="211"/><text x="0.4632%" y="479.50"></text></g><g><title>simple_producer`&lt;&amp;mut S as futures_sink::Sink&lt;Item&gt;&gt;::start_send (66 samples, 0.04%)</title><rect x="0.3285%" y="469" width="0.0361%" height="15" fill="rgb(240,193,28)" fg:x="601" fg:w="66"/><text x="0.5785%" y="479.50"></text></g><g><title>simple_producer`DYLD-STUB$$memcpy (40 samples, 0.02%)</title><rect x="0.3663%" y="469" width="0.0219%" height="15" fill="rgb(216,20,37)" fg:x="670" fg:w="40"/><text x="0.6163%" y="479.50"></text></g><g><title>simple_producer`__rdl_dealloc (60 samples, 0.03%)</title><rect x="0.3881%" y="469" width="0.0328%" height="15" fill="rgb(206,188,39)" fg:x="710" fg:w="60"/><text x="0.6381%" y="479.50"></text></g><g><title>simple_producer`alloc::fmt::format::format_inner (40 samples, 0.02%)</title><rect x="0.4215%" y="469" width="0.0219%" height="15" fill="rgb(217,207,13)" fg:x="771" fg:w="40"/><text x="0.6715%" y="479.50"></text></g><g><title>simple_producer`bytes::bytes::Bytes::copy_from_slice (67 samples, 0.04%)</title><rect x="0.4433%" y="469" width="0.0366%" height="15" fill="rgb(231,73,38)" fg:x="811" fg:w="67"/><text x="0.6933%" y="479.50"></text></g><g><title>simple_producer`core::ptr::drop_in_place&lt;kafkas::producer::Producer&lt;kafkas::executor::TokioExecutor&gt;::send&lt;simple_producer::TestData&gt;::{{closure}}&gt; (35 samples, 0.02%)</title><rect x="0.4800%" y="469" width="0.0191%" height="15" fill="rgb(225,20,46)" fg:x="878" fg:w="35"/><text x="0.7300%" y="479.50"></text></g><g><title>simple_producer`dashmap::DashMap&lt;K,V,S&gt;::get (30 samples, 0.02%)</title><rect x="0.4991%" y="469" width="0.0164%" height="15" fill="rgb(210,31,41)" fg:x="913" fg:w="30"/><text x="0.7491%" y="479.50"></text></g><g><title>simple_producer`futures_channel::mpsc::decode_state (22 samples, 0.01%)</title><rect x="0.5155%" y="469" width="0.0120%" height="15" fill="rgb(221,200,47)" fg:x="943" fg:w="22"/><text x="0.7655%" y="479.50"></text></g><g><title>simple_producer`kafkas::producer::TopicProducer&lt;Exe&gt;::try_push::_{{closure}} (46 samples, 0.03%)</title><rect x="0.5275%" y="469" width="0.0251%" height="15" fill="rgb(226,26,5)" fg:x="965" fg:w="46"/><text x="0.7775%" y="479.50"></text></g><g><title>libdyld.dylib`0x7ff81491b9f1 (41 samples, 0.02%)</title><rect x="2.5228%" y="453" width="0.0224%" height="15" fill="rgb(249,33,26)" fg:x="4615" fg:w="41"/><text x="2.7728%" y="463.50"></text></g><g><title>libdyld.dylib`0x7ff81491ba03 (23 samples, 0.01%)</title><rect x="2.5638%" y="453" width="0.0126%" height="15" fill="rgb(235,183,28)" fg:x="4690" fg:w="23"/><text x="2.8138%" y="463.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff814766350 (93 samples, 0.05%)</title><rect x="2.5764%" y="453" width="0.0508%" height="15" fill="rgb(221,5,38)" fg:x="4713" fg:w="93"/><text x="2.8264%" y="463.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff8147665b5 (73 samples, 0.04%)</title><rect x="2.6344%" y="453" width="0.0399%" height="15" fill="rgb(247,18,42)" fg:x="4819" fg:w="73"/><text x="2.8844%" y="463.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff8147806fe (25 samples, 0.01%)</title><rect x="2.6764%" y="453" width="0.0137%" height="15" fill="rgb(241,131,45)" fg:x="4896" fg:w="25"/><text x="2.9264%" y="463.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff814780705 (25 samples, 0.01%)</title><rect x="2.6907%" y="453" width="0.0137%" height="15" fill="rgb(249,31,29)" fg:x="4922" fg:w="25"/><text x="2.9407%" y="463.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81478070f (28 samples, 0.02%)</title><rect x="2.7049%" y="453" width="0.0153%" height="15" fill="rgb(225,111,53)" fg:x="4948" fg:w="28"/><text x="2.9549%" y="463.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81478072f (25 samples, 0.01%)</title><rect x="2.7213%" y="453" width="0.0137%" height="15" fill="rgb(238,160,17)" fg:x="4978" fg:w="25"/><text x="2.9713%" y="463.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81478074f (26 samples, 0.01%)</title><rect x="2.7399%" y="453" width="0.0142%" height="15" fill="rgb(214,148,48)" fg:x="5012" fg:w="26"/><text x="2.9899%" y="463.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff8147807e0 (29 samples, 0.02%)</title><rect x="2.7563%" y="453" width="0.0159%" height="15" fill="rgb(232,36,49)" fg:x="5042" fg:w="29"/><text x="3.0063%" y="463.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff8147807f2 (23 samples, 0.01%)</title><rect x="2.7727%" y="453" width="0.0126%" height="15" fill="rgb(209,103,24)" fg:x="5072" fg:w="23"/><text x="3.0227%" y="463.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff814780802 (21 samples, 0.01%)</title><rect x="2.7918%" y="453" width="0.0115%" height="15" fill="rgb(229,88,8)" fg:x="5107" fg:w="21"/><text x="3.0418%" y="463.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff814780816 (23 samples, 0.01%)</title><rect x="2.8049%" y="453" width="0.0126%" height="15" fill="rgb(213,181,19)" fg:x="5131" fg:w="23"/><text x="3.0549%" y="463.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff814780826 (30 samples, 0.02%)</title><rect x="2.8191%" y="453" width="0.0164%" height="15" fill="rgb(254,191,54)" fg:x="5157" fg:w="30"/><text x="3.0691%" y="463.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff814780835 (26 samples, 0.01%)</title><rect x="2.8437%" y="453" width="0.0142%" height="15" fill="rgb(241,83,37)" fg:x="5202" fg:w="26"/><text x="3.0937%" y="463.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff814780851 (26 samples, 0.01%)</title><rect x="2.8596%" y="453" width="0.0142%" height="15" fill="rgb(233,36,39)" fg:x="5231" fg:w="26"/><text x="3.1096%" y="463.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81478086d (23 samples, 0.01%)</title><rect x="2.8754%" y="453" width="0.0126%" height="15" fill="rgb(226,3,54)" fg:x="5260" fg:w="23"/><text x="3.1254%" y="463.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff814780879 (24 samples, 0.01%)</title><rect x="2.8929%" y="453" width="0.0131%" height="15" fill="rgb(245,192,40)" fg:x="5292" fg:w="24"/><text x="3.1429%" y="463.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff814780887 (23 samples, 0.01%)</title><rect x="2.9088%" y="453" width="0.0126%" height="15" fill="rgb(238,167,29)" fg:x="5321" fg:w="23"/><text x="3.1588%" y="463.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff814780891 (354 samples, 0.19%)</title><rect x="2.9230%" y="453" width="0.1935%" height="15" fill="rgb(232,182,51)" fg:x="5347" fg:w="354"/><text x="3.1730%" y="463.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff8147808c2 (20 samples, 0.01%)</title><rect x="3.1165%" y="453" width="0.0109%" height="15" fill="rgb(231,60,39)" fg:x="5701" fg:w="20"/><text x="3.3665%" y="463.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff8147808d5 (25 samples, 0.01%)</title><rect x="3.1291%" y="453" width="0.0137%" height="15" fill="rgb(208,69,12)" fg:x="5724" fg:w="25"/><text x="3.3791%" y="463.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff8147808e5 (20 samples, 0.01%)</title><rect x="3.1449%" y="453" width="0.0109%" height="15" fill="rgb(235,93,37)" fg:x="5753" fg:w="20"/><text x="3.3949%" y="463.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff814780901 (178 samples, 0.10%)</title><rect x="3.1657%" y="453" width="0.0973%" height="15" fill="rgb(213,116,39)" fg:x="5791" fg:w="178"/><text x="3.4157%" y="463.50"></text></g><g><title>libsystem_platform.dylib`_platform_bzero$VARIANT$Haswell (147 samples, 0.08%)</title><rect x="3.1827%" y="437" width="0.0804%" height="15" fill="rgb(222,207,29)" fg:x="5822" fg:w="147"/><text x="3.4327%" y="447.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff814780912 (32 samples, 0.02%)</title><rect x="3.2668%" y="453" width="0.0175%" height="15" fill="rgb(206,96,30)" fg:x="5976" fg:w="32"/><text x="3.5168%" y="463.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff814780934 (28 samples, 0.02%)</title><rect x="3.2975%" y="453" width="0.0153%" height="15" fill="rgb(218,138,4)" fg:x="6032" fg:w="28"/><text x="3.5475%" y="463.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff814780947 (25 samples, 0.01%)</title><rect x="3.3149%" y="453" width="0.0137%" height="15" fill="rgb(250,191,14)" fg:x="6064" fg:w="25"/><text x="3.5649%" y="463.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81478095b (27 samples, 0.01%)</title><rect x="3.3292%" y="453" width="0.0148%" height="15" fill="rgb(239,60,40)" fg:x="6090" fg:w="27"/><text x="3.5792%" y="463.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81478096c (27 samples, 0.01%)</title><rect x="3.3439%" y="453" width="0.0148%" height="15" fill="rgb(206,27,48)" fg:x="6117" fg:w="27"/><text x="3.5939%" y="463.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81478099b (29 samples, 0.02%)</title><rect x="3.3592%" y="453" width="0.0159%" height="15" fill="rgb(225,35,8)" fg:x="6145" fg:w="29"/><text x="3.6092%" y="463.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81478099e (228 samples, 0.12%)</title><rect x="3.3751%" y="453" width="0.1246%" height="15" fill="rgb(250,213,24)" fg:x="6174" fg:w="228"/><text x="3.6251%" y="463.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff8147809aa (23 samples, 0.01%)</title><rect x="3.5172%" y="453" width="0.0126%" height="15" fill="rgb(247,123,22)" fg:x="6434" fg:w="23"/><text x="3.7672%" y="463.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff8147809b7 (547 samples, 0.30%)</title><rect x="3.5342%" y="453" width="0.2990%" height="15" fill="rgb(231,138,38)" fg:x="6465" fg:w="547"/><text x="3.7842%" y="463.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff814780a39 (28 samples, 0.02%)</title><rect x="3.8386%" y="453" width="0.0153%" height="15" fill="rgb(231,145,46)" fg:x="7022" fg:w="28"/><text x="4.0886%" y="463.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff814782cdd (97 samples, 0.05%)</title><rect x="3.8638%" y="453" width="0.0530%" height="15" fill="rgb(251,118,11)" fg:x="7068" fg:w="97"/><text x="4.1138%" y="463.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff814782cf1 (88 samples, 0.05%)</title><rect x="3.9185%" y="453" width="0.0481%" height="15" fill="rgb(217,147,25)" fg:x="7168" fg:w="88"/><text x="4.1685%" y="463.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff814782cfd (29 samples, 0.02%)</title><rect x="3.9709%" y="453" width="0.0159%" height="15" fill="rgb(247,81,37)" fg:x="7264" fg:w="29"/><text x="4.2209%" y="463.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff814782d04 (73 samples, 0.04%)</title><rect x="3.9868%" y="453" width="0.0399%" height="15" fill="rgb(209,12,38)" fg:x="7293" fg:w="73"/><text x="4.2368%" y="463.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff814782d0d (88 samples, 0.05%)</title><rect x="4.0283%" y="453" width="0.0481%" height="15" fill="rgb(227,1,9)" fg:x="7369" fg:w="88"/><text x="4.2783%" y="463.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff814782d19 (75 samples, 0.04%)</title><rect x="4.0819%" y="453" width="0.0410%" height="15" fill="rgb(248,47,43)" fg:x="7467" fg:w="75"/><text x="4.3319%" y="463.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff814782d1d (29 samples, 0.02%)</title><rect x="4.1229%" y="453" width="0.0159%" height="15" fill="rgb(221,10,30)" fg:x="7542" fg:w="29"/><text x="4.3729%" y="463.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff814782d28 (72 samples, 0.04%)</title><rect x="4.1492%" y="453" width="0.0394%" height="15" fill="rgb(210,229,1)" fg:x="7590" fg:w="72"/><text x="4.3992%" y="463.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff814789472 (25 samples, 0.01%)</title><rect x="4.1951%" y="453" width="0.0137%" height="15" fill="rgb(222,148,37)" fg:x="7674" fg:w="25"/><text x="4.4451%" y="463.50"></text></g><g><title>libsystem_platform.dylib`DYLD-STUB$$_platform_bzero (45 samples, 0.02%)</title><rect x="4.2087%" y="453" width="0.0246%" height="15" fill="rgb(234,67,33)" fg:x="7699" fg:w="45"/><text x="4.4587%" y="463.50"></text></g><g><title>libsystem_platform.dylib`DYLD-STUB$$_platform_memmove (80 samples, 0.04%)</title><rect x="4.2333%" y="453" width="0.0437%" height="15" fill="rgb(247,98,35)" fg:x="7744" fg:w="80"/><text x="4.4833%" y="463.50"></text></g><g><title>libsystem_platform.dylib`_platform_bzero$VARIANT$Haswell (52 samples, 0.03%)</title><rect x="4.2771%" y="453" width="0.0284%" height="15" fill="rgb(247,138,52)" fg:x="7824" fg:w="52"/><text x="4.5271%" y="463.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (1,809 samples, 0.99%)</title><rect x="4.3055%" y="453" width="0.9889%" height="15" fill="rgb(213,79,30)" fg:x="7876" fg:w="1809"/><text x="4.5555%" y="463.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff814766393 (21 samples, 0.01%)</title><rect x="6.8852%" y="437" width="0.0115%" height="15" fill="rgb(246,177,23)" fg:x="12595" fg:w="21"/><text x="7.1352%" y="447.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff814766399 (28 samples, 0.02%)</title><rect x="6.8994%" y="437" width="0.0153%" height="15" fill="rgb(230,62,27)" fg:x="12621" fg:w="28"/><text x="7.1494%" y="447.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff8147663a0 (19 samples, 0.01%)</title><rect x="6.9147%" y="437" width="0.0104%" height="15" fill="rgb(216,154,8)" fg:x="12649" fg:w="19"/><text x="7.1647%" y="447.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff8147663ca (37 samples, 0.02%)</title><rect x="6.9366%" y="437" width="0.0202%" height="15" fill="rgb(244,35,45)" fg:x="12689" fg:w="37"/><text x="7.1866%" y="447.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff8147663d9 (30 samples, 0.02%)</title><rect x="6.9584%" y="437" width="0.0164%" height="15" fill="rgb(251,115,12)" fg:x="12729" fg:w="30"/><text x="7.2084%" y="447.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff8147663dd (75 samples, 0.04%)</title><rect x="6.9748%" y="437" width="0.0410%" height="15" fill="rgb(240,54,50)" fg:x="12759" fg:w="75"/><text x="7.2248%" y="447.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff8147663e7 (420 samples, 0.23%)</title><rect x="7.0164%" y="437" width="0.2296%" height="15" fill="rgb(233,84,52)" fg:x="12835" fg:w="420"/><text x="7.2664%" y="447.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff8147663eb (34 samples, 0.02%)</title><rect x="7.2460%" y="437" width="0.0186%" height="15" fill="rgb(207,117,47)" fg:x="13255" fg:w="34"/><text x="7.4960%" y="447.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff8147663f8 (40 samples, 0.02%)</title><rect x="7.2646%" y="437" width="0.0219%" height="15" fill="rgb(249,43,39)" fg:x="13289" fg:w="40"/><text x="7.5146%" y="447.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff814766407 (386 samples, 0.21%)</title><rect x="7.2864%" y="437" width="0.2110%" height="15" fill="rgb(209,38,44)" fg:x="13329" fg:w="386"/><text x="7.5364%" y="447.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81476640a (36 samples, 0.02%)</title><rect x="7.4974%" y="437" width="0.0197%" height="15" fill="rgb(236,212,23)" fg:x="13715" fg:w="36"/><text x="7.7474%" y="447.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff814766414 (31 samples, 0.02%)</title><rect x="7.5171%" y="437" width="0.0169%" height="15" fill="rgb(242,79,21)" fg:x="13751" fg:w="31"/><text x="7.7671%" y="447.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81476641b (392 samples, 0.21%)</title><rect x="7.5346%" y="437" width="0.2143%" height="15" fill="rgb(211,96,35)" fg:x="13783" fg:w="392"/><text x="7.7846%" y="447.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81476642b (33 samples, 0.02%)</title><rect x="7.7527%" y="437" width="0.0180%" height="15" fill="rgb(253,215,40)" fg:x="14182" fg:w="33"/><text x="8.0027%" y="447.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff814766439 (33 samples, 0.02%)</title><rect x="7.7719%" y="437" width="0.0180%" height="15" fill="rgb(211,81,21)" fg:x="14217" fg:w="33"/><text x="8.0219%" y="447.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff814766445 (33 samples, 0.02%)</title><rect x="7.7905%" y="437" width="0.0180%" height="15" fill="rgb(208,190,38)" fg:x="14251" fg:w="33"/><text x="8.0405%" y="447.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff814766452 (30 samples, 0.02%)</title><rect x="7.8090%" y="437" width="0.0164%" height="15" fill="rgb(235,213,38)" fg:x="14285" fg:w="30"/><text x="8.0590%" y="447.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff814766467 (29 samples, 0.02%)</title><rect x="7.8254%" y="437" width="0.0159%" height="15" fill="rgb(237,122,38)" fg:x="14315" fg:w="29"/><text x="8.0754%" y="447.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff814766484 (27 samples, 0.01%)</title><rect x="7.8424%" y="437" width="0.0148%" height="15" fill="rgb(244,218,35)" fg:x="14346" fg:w="27"/><text x="8.0924%" y="447.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff814766493 (25 samples, 0.01%)</title><rect x="7.8588%" y="437" width="0.0137%" height="15" fill="rgb(240,68,47)" fg:x="14376" fg:w="25"/><text x="8.1088%" y="447.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff8147664a4 (27 samples, 0.01%)</title><rect x="7.8730%" y="437" width="0.0148%" height="15" fill="rgb(210,16,53)" fg:x="14402" fg:w="27"/><text x="8.1230%" y="447.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff8147664ce (193 samples, 0.11%)</title><rect x="7.8927%" y="437" width="0.1055%" height="15" fill="rgb(235,124,12)" fg:x="14438" fg:w="193"/><text x="8.1427%" y="447.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff8147664d9 (21 samples, 0.01%)</title><rect x="8.0004%" y="437" width="0.0115%" height="15" fill="rgb(224,169,11)" fg:x="14635" fg:w="21"/><text x="8.2504%" y="447.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff8147664e7 (20 samples, 0.01%)</title><rect x="8.0157%" y="437" width="0.0109%" height="15" fill="rgb(250,166,2)" fg:x="14663" fg:w="20"/><text x="8.2657%" y="447.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff8147664ef (789 samples, 0.43%)</title><rect x="8.0266%" y="437" width="0.4313%" height="15" fill="rgb(242,216,29)" fg:x="14683" fg:w="789"/><text x="8.2766%" y="447.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff814766509 (356 samples, 0.19%)</title><rect x="8.4809%" y="437" width="0.1946%" height="15" fill="rgb(230,116,27)" fg:x="15514" fg:w="356"/><text x="8.7309%" y="447.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff814780669 (27 samples, 0.01%)</title><rect x="8.6957%" y="421" width="0.0148%" height="15" fill="rgb(228,99,48)" fg:x="15907" fg:w="27"/><text x="8.9457%" y="431.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81476659d (41 samples, 0.02%)</title><rect x="8.6935%" y="437" width="0.0224%" height="15" fill="rgb(253,11,6)" fg:x="15903" fg:w="41"/><text x="8.9435%" y="447.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff8147665a4 (34 samples, 0.02%)</title><rect x="8.7159%" y="437" width="0.0186%" height="15" fill="rgb(247,143,39)" fg:x="15944" fg:w="34"/><text x="8.9659%" y="447.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff8147665ae (24 samples, 0.01%)</title><rect x="8.7378%" y="437" width="0.0131%" height="15" fill="rgb(236,97,10)" fg:x="15984" fg:w="24"/><text x="8.9878%" y="447.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff8147665d8 (23 samples, 0.01%)</title><rect x="8.7755%" y="437" width="0.0126%" height="15" fill="rgb(233,208,19)" fg:x="16053" fg:w="23"/><text x="9.0255%" y="447.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff8147665e4 (38 samples, 0.02%)</title><rect x="8.7887%" y="437" width="0.0208%" height="15" fill="rgb(216,164,2)" fg:x="16077" fg:w="38"/><text x="9.0387%" y="447.50"></text></g><g><title>simple_producer`futures_channel::mpsc::decode_state (62 samples, 0.03%)</title><rect x="8.8165%" y="437" width="0.0339%" height="15" fill="rgb(220,129,5)" fg:x="16128" fg:w="62"/><text x="9.0665%" y="447.50"></text></g><g><title>simple_producer`futures_channel::mpsc::encode_state (67 samples, 0.04%)</title><rect x="8.8504%" y="437" width="0.0366%" height="15" fill="rgb(242,17,10)" fg:x="16190" fg:w="67"/><text x="9.1004%" y="447.50"></text></g><g><title>simple_producer`&lt;&amp;mut S as futures_sink::Sink&lt;Item&gt;&gt;::start_send (8,286 samples, 4.53%)</title><rect x="5.2950%" y="453" width="4.5296%" height="15" fill="rgb(242,107,0)" fg:x="9686" fg:w="8286"/><text x="5.5450%" y="463.50">simpl..</text></g><g><title>simple_producer`futures_core::task::__internal::atomic_waker::AtomicWaker::wake (1,715 samples, 0.94%)</title><rect x="8.8871%" y="437" width="0.9375%" height="15" fill="rgb(251,28,31)" fg:x="16257" fg:w="1715"/><text x="9.1371%" y="447.50"></text></g><g><title>simple_producer`&lt;bytes::bytes::Bytes as core::cmp::PartialEq&gt;::eq (38 samples, 0.02%)</title><rect x="9.8246%" y="453" width="0.0208%" height="15" fill="rgb(233,223,10)" fg:x="17972" fg:w="38"/><text x="10.0746%" y="463.50"></text></g><g><title>simple_producer`&lt;bytes::bytes::Bytes as core::convert::From&lt;alloc::vec::Vec&lt;u8&gt;&gt;&gt;::from (24 samples, 0.01%)</title><rect x="9.8453%" y="453" width="0.0131%" height="15" fill="rgb(215,21,27)" fg:x="18010" fg:w="24"/><text x="10.0953%" y="463.50"></text></g><g><title>simple_producer`&lt;kafkas::producer::partitioner::PartitionerSelector as kafkas::producer::partitioner::PartitionSelector&gt;::select (27 samples, 0.01%)</title><rect x="9.8590%" y="453" width="0.0148%" height="15" fill="rgb(232,23,21)" fg:x="18035" fg:w="27"/><text x="10.1090%" y="463.50"></text></g><g><title>simple_producer`&lt;string::String&lt;T&gt; as core::hash::Hash&gt;::hash (93 samples, 0.05%)</title><rect x="9.8738%" y="453" width="0.0508%" height="15" fill="rgb(244,5,23)" fg:x="18062" fg:w="93"/><text x="10.1238%" y="463.50"></text></g><g><title>simple_producer`DYLD-STUB$$memcpy (33 samples, 0.02%)</title><rect x="9.9263%" y="453" width="0.0180%" height="15" fill="rgb(226,81,46)" fg:x="18158" fg:w="33"/><text x="10.1763%" y="463.50"></text></g><g><title>simple_producer`__rdl_alloc (176 samples, 0.10%)</title><rect x="9.9443%" y="453" width="0.0962%" height="15" fill="rgb(247,70,30)" fg:x="18191" fg:w="176"/><text x="10.1943%" y="463.50"></text></g><g><title>simple_producer`__rust_alloc (59 samples, 0.03%)</title><rect x="10.0405%" y="453" width="0.0323%" height="15" fill="rgb(212,68,19)" fg:x="18367" fg:w="59"/><text x="10.2905%" y="463.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff814766393 (22 samples, 0.01%)</title><rect x="10.3860%" y="437" width="0.0120%" height="15" fill="rgb(240,187,13)" fg:x="18999" fg:w="22"/><text x="10.6360%" y="447.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff814766399 (34 samples, 0.02%)</title><rect x="10.4008%" y="437" width="0.0186%" height="15" fill="rgb(223,113,26)" fg:x="19026" fg:w="34"/><text x="10.6508%" y="447.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff8147663a0 (26 samples, 0.01%)</title><rect x="10.4210%" y="437" width="0.0142%" height="15" fill="rgb(206,192,2)" fg:x="19063" fg:w="26"/><text x="10.6710%" y="447.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff8147663b2 (20 samples, 0.01%)</title><rect x="10.4368%" y="437" width="0.0109%" height="15" fill="rgb(241,108,4)" fg:x="19092" fg:w="20"/><text x="10.6868%" y="447.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff8147663ca (32 samples, 0.02%)</title><rect x="10.4500%" y="437" width="0.0175%" height="15" fill="rgb(247,173,49)" fg:x="19116" fg:w="32"/><text x="10.7000%" y="447.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff8147663d9 (23 samples, 0.01%)</title><rect x="10.4691%" y="437" width="0.0126%" height="15" fill="rgb(224,114,35)" fg:x="19151" fg:w="23"/><text x="10.7191%" y="447.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff8147663dd (85 samples, 0.05%)</title><rect x="10.4817%" y="437" width="0.0465%" height="15" fill="rgb(245,159,27)" fg:x="19174" fg:w="85"/><text x="10.7317%" y="447.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff8147663e7 (462 samples, 0.25%)</title><rect x="10.5287%" y="437" width="0.2526%" height="15" fill="rgb(245,172,44)" fg:x="19260" fg:w="462"/><text x="10.7787%" y="447.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff8147663eb (28 samples, 0.02%)</title><rect x="10.7812%" y="437" width="0.0153%" height="15" fill="rgb(236,23,11)" fg:x="19722" fg:w="28"/><text x="11.0312%" y="447.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff814766407 (116 samples, 0.06%)</title><rect x="10.8064%" y="437" width="0.0634%" height="15" fill="rgb(205,117,38)" fg:x="19768" fg:w="116"/><text x="11.0564%" y="447.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81476640a (30 samples, 0.02%)</title><rect x="10.8698%" y="437" width="0.0164%" height="15" fill="rgb(237,72,25)" fg:x="19884" fg:w="30"/><text x="11.1198%" y="447.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff814766414 (21 samples, 0.01%)</title><rect x="10.8862%" y="437" width="0.0115%" height="15" fill="rgb(244,70,9)" fg:x="19914" fg:w="21"/><text x="11.1362%" y="447.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81476641b (193 samples, 0.11%)</title><rect x="10.8977%" y="437" width="0.1055%" height="15" fill="rgb(217,125,39)" fg:x="19935" fg:w="193"/><text x="11.1477%" y="447.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81476642b (31 samples, 0.02%)</title><rect x="11.0037%" y="437" width="0.0169%" height="15" fill="rgb(235,36,10)" fg:x="20129" fg:w="31"/><text x="11.2537%" y="447.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff814766439 (31 samples, 0.02%)</title><rect x="11.0212%" y="437" width="0.0169%" height="15" fill="rgb(251,123,47)" fg:x="20161" fg:w="31"/><text x="11.2712%" y="447.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff814766445 (29 samples, 0.02%)</title><rect x="11.0436%" y="437" width="0.0159%" height="15" fill="rgb(221,13,13)" fg:x="20202" fg:w="29"/><text x="11.2936%" y="447.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff814766452 (42 samples, 0.02%)</title><rect x="11.0595%" y="437" width="0.0230%" height="15" fill="rgb(238,131,9)" fg:x="20231" fg:w="42"/><text x="11.3095%" y="447.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff814766467 (26 samples, 0.01%)</title><rect x="11.0824%" y="437" width="0.0142%" height="15" fill="rgb(211,50,8)" fg:x="20273" fg:w="26"/><text x="11.3324%" y="447.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff814766484 (28 samples, 0.02%)</title><rect x="11.0972%" y="437" width="0.0153%" height="15" fill="rgb(245,182,24)" fg:x="20300" fg:w="28"/><text x="11.3472%" y="447.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff814766493 (26 samples, 0.01%)</title><rect x="11.1136%" y="437" width="0.0142%" height="15" fill="rgb(242,14,37)" fg:x="20330" fg:w="26"/><text x="11.3636%" y="447.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff8147664a4 (21 samples, 0.01%)</title><rect x="11.1278%" y="437" width="0.0115%" height="15" fill="rgb(246,228,12)" fg:x="20356" fg:w="21"/><text x="11.3778%" y="447.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff8147664d9 (25 samples, 0.01%)</title><rect x="11.1415%" y="437" width="0.0137%" height="15" fill="rgb(213,55,15)" fg:x="20381" fg:w="25"/><text x="11.3915%" y="447.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff8147664e7 (23 samples, 0.01%)</title><rect x="11.1579%" y="437" width="0.0126%" height="15" fill="rgb(209,9,3)" fg:x="20411" fg:w="23"/><text x="11.4079%" y="447.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff8147664ef (390 samples, 0.21%)</title><rect x="11.1705%" y="437" width="0.2132%" height="15" fill="rgb(230,59,30)" fg:x="20434" fg:w="390"/><text x="11.4205%" y="447.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff8147664fc (29 samples, 0.02%)</title><rect x="11.3853%" y="437" width="0.0159%" height="15" fill="rgb(209,121,21)" fg:x="20827" fg:w="29"/><text x="11.6353%" y="447.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff8147664fe (22 samples, 0.01%)</title><rect x="11.4011%" y="437" width="0.0120%" height="15" fill="rgb(220,109,13)" fg:x="20856" fg:w="22"/><text x="11.6511%" y="447.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff814766504 (49 samples, 0.03%)</title><rect x="11.4132%" y="437" width="0.0268%" height="15" fill="rgb(232,18,1)" fg:x="20878" fg:w="49"/><text x="11.6632%" y="447.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff814766509 (543 samples, 0.30%)</title><rect x="11.4400%" y="437" width="0.2968%" height="15" fill="rgb(215,41,42)" fg:x="20927" fg:w="543"/><text x="11.6900%" y="447.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff814780669 (28 samples, 0.02%)</title><rect x="11.7379%" y="421" width="0.0153%" height="15" fill="rgb(224,123,36)" fg:x="21472" fg:w="28"/><text x="11.9879%" y="431.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81476659d (33 samples, 0.02%)</title><rect x="11.7373%" y="437" width="0.0180%" height="15" fill="rgb(240,125,3)" fg:x="21471" fg:w="33"/><text x="11.9873%" y="447.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff8147665ae (32 samples, 0.02%)</title><rect x="11.7680%" y="437" width="0.0175%" height="15" fill="rgb(205,98,50)" fg:x="21527" fg:w="32"/><text x="12.0180%" y="447.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff8147665b9 (27 samples, 0.01%)</title><rect x="11.7931%" y="437" width="0.0148%" height="15" fill="rgb(205,185,37)" fg:x="21573" fg:w="27"/><text x="12.0431%" y="447.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff8147665c6 (28 samples, 0.02%)</title><rect x="11.8095%" y="437" width="0.0153%" height="15" fill="rgb(238,207,15)" fg:x="21603" fg:w="28"/><text x="12.0595%" y="447.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff8147665d8 (24 samples, 0.01%)</title><rect x="11.8292%" y="437" width="0.0131%" height="15" fill="rgb(213,199,42)" fg:x="21639" fg:w="24"/><text x="12.0792%" y="447.50"></text></g><g><title>simple_producer`&lt;&amp;mut W as core::fmt::Write&gt;::write_str (55 samples, 0.03%)</title><rect x="11.8450%" y="437" width="0.0301%" height="15" fill="rgb(235,201,11)" fg:x="21668" fg:w="55"/><text x="12.0950%" y="447.50"></text></g><g><title>simple_producer`core::fmt::num::imp::_&lt;impl core::fmt::Display for i32&gt;::fmt (177 samples, 0.10%)</title><rect x="11.8751%" y="437" width="0.0968%" height="15" fill="rgb(207,46,11)" fg:x="21723" fg:w="177"/><text x="12.1251%" y="447.50"></text></g><g><title>libsystem_platform.dylib`DYLD-STUB$$_platform_memmove (30 samples, 0.02%)</title><rect x="12.2151%" y="421" width="0.0164%" height="15" fill="rgb(241,35,35)" fg:x="22345" fg:w="30"/><text x="12.4651%" y="431.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (35 samples, 0.02%)</title><rect x="12.2315%" y="421" width="0.0191%" height="15" fill="rgb(243,32,47)" fg:x="22375" fg:w="35"/><text x="12.4815%" y="431.50"></text></g><g><title>simple_producer`&lt;&amp;mut W as core::fmt::Write&gt;::write_str (443 samples, 0.24%)</title><rect x="12.2507%" y="421" width="0.2422%" height="15" fill="rgb(247,202,23)" fg:x="22410" fg:w="443"/><text x="12.5007%" y="431.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (163 samples, 0.09%)</title><rect x="12.4037%" y="405" width="0.0891%" height="15" fill="rgb(219,102,11)" fg:x="22690" fg:w="163"/><text x="12.6537%" y="415.50"></text></g><g><title>simple_producer`core::fmt::Formatter::pad_integral (31 samples, 0.02%)</title><rect x="12.4939%" y="421" width="0.0169%" height="15" fill="rgb(243,110,44)" fg:x="22855" fg:w="31"/><text x="12.7439%" y="431.50"></text></g><g><title>libsystem_platform.dylib`DYLD-STUB$$_platform_memmove (22 samples, 0.01%)</title><rect x="12.9017%" y="405" width="0.0120%" height="15" fill="rgb(222,74,54)" fg:x="23601" fg:w="22"/><text x="13.1517%" y="415.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (33 samples, 0.02%)</title><rect x="12.9138%" y="405" width="0.0180%" height="15" fill="rgb(216,99,12)" fg:x="23623" fg:w="33"/><text x="13.1638%" y="415.50"></text></g><g><title>simple_producer`&lt;&amp;mut W as core::fmt::Write&gt;::write_str (364 samples, 0.20%)</title><rect x="12.9318%" y="405" width="0.1990%" height="15" fill="rgb(226,22,26)" fg:x="23656" fg:w="364"/><text x="13.1818%" y="415.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (137 samples, 0.07%)</title><rect x="13.0559%" y="389" width="0.0749%" height="15" fill="rgb(217,163,10)" fg:x="23883" fg:w="137"/><text x="13.3059%" y="399.50"></text></g><g><title>simple_producer`core::fmt::Formatter::pad_integral (413 samples, 0.23%)</title><rect x="13.1324%" y="405" width="0.2258%" height="15" fill="rgb(213,25,53)" fg:x="24023" fg:w="413"/><text x="13.3824%" y="415.50"></text></g><g><title>simple_producer`core::fmt::Formatter::pad_integral::write_prefix (81 samples, 0.04%)</title><rect x="13.3582%" y="405" width="0.0443%" height="15" fill="rgb(252,105,26)" fg:x="24436" fg:w="81"/><text x="13.6082%" y="415.50"></text></g><g><title>simple_producer`alloc::fmt::format::format_inner (6,265 samples, 3.42%)</title><rect x="10.0728%" y="453" width="3.4248%" height="15" fill="rgb(220,39,43)" fg:x="18426" fg:w="6265"/><text x="10.3228%" y="463.50">sim..</text></g><g><title>simple_producer`core::fmt::write (2,791 samples, 1.53%)</title><rect x="11.9719%" y="437" width="1.5257%" height="15" fill="rgb(229,68,48)" fg:x="21900" fg:w="2791"/><text x="12.2219%" y="447.50"></text></g><g><title>simple_producer`core::fmt::num::imp::_&lt;impl core::fmt::Display for i32&gt;::fmt (1,805 samples, 0.99%)</title><rect x="12.5109%" y="421" width="0.9867%" height="15" fill="rgb(252,8,32)" fg:x="22886" fg:w="1805"/><text x="12.7609%" y="431.50"></text></g><g><title>simple_producer`core::fmt::Formatter::pad_integral (174 samples, 0.10%)</title><rect x="13.4025%" y="405" width="0.0951%" height="15" fill="rgb(223,20,43)" fg:x="24517" fg:w="174"/><text x="13.6525%" y="415.50"></text></g><g><title>simple_producer`core::fmt::Formatter::pad_integral::write_prefix (174 samples, 0.10%)</title><rect x="13.4025%" y="389" width="0.0951%" height="15" fill="rgb(229,81,49)" fg:x="24517" fg:w="174"/><text x="13.6525%" y="399.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff814766393 (23 samples, 0.01%)</title><rect x="13.6556%" y="437" width="0.0126%" height="15" fill="rgb(236,28,36)" fg:x="24980" fg:w="23"/><text x="13.9056%" y="447.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff814766399 (26 samples, 0.01%)</title><rect x="13.6758%" y="437" width="0.0142%" height="15" fill="rgb(249,185,26)" fg:x="25017" fg:w="26"/><text x="13.9258%" y="447.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff8147663a0 (22 samples, 0.01%)</title><rect x="13.6938%" y="437" width="0.0120%" height="15" fill="rgb(249,174,33)" fg:x="25050" fg:w="22"/><text x="13.9438%" y="447.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff8147663b2 (19 samples, 0.01%)</title><rect x="13.7081%" y="437" width="0.0104%" height="15" fill="rgb(233,201,37)" fg:x="25076" fg:w="19"/><text x="13.9581%" y="447.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff8147663d9 (22 samples, 0.01%)</title><rect x="13.7343%" y="437" width="0.0120%" height="15" fill="rgb(221,78,26)" fg:x="25124" fg:w="22"/><text x="13.9843%" y="447.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff8147663dd (118 samples, 0.06%)</title><rect x="13.7463%" y="437" width="0.0645%" height="15" fill="rgb(250,127,30)" fg:x="25146" fg:w="118"/><text x="13.9963%" y="447.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff8147663e7 (440 samples, 0.24%)</title><rect x="13.8108%" y="437" width="0.2405%" height="15" fill="rgb(230,49,44)" fg:x="25264" fg:w="440"/><text x="14.0608%" y="447.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff8147663eb (24 samples, 0.01%)</title><rect x="14.0514%" y="437" width="0.0131%" height="15" fill="rgb(229,67,23)" fg:x="25704" fg:w="24"/><text x="14.3014%" y="447.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff8147663f8 (43 samples, 0.02%)</title><rect x="14.0645%" y="437" width="0.0235%" height="15" fill="rgb(249,83,47)" fg:x="25728" fg:w="43"/><text x="14.3145%" y="447.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff814766407 (119 samples, 0.07%)</title><rect x="14.0880%" y="437" width="0.0651%" height="15" fill="rgb(215,43,3)" fg:x="25771" fg:w="119"/><text x="14.3380%" y="447.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81476640a (30 samples, 0.02%)</title><rect x="14.1530%" y="437" width="0.0164%" height="15" fill="rgb(238,154,13)" fg:x="25890" fg:w="30"/><text x="14.4030%" y="447.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff814766414 (25 samples, 0.01%)</title><rect x="14.1694%" y="437" width="0.0137%" height="15" fill="rgb(219,56,2)" fg:x="25920" fg:w="25"/><text x="14.4194%" y="447.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81476641b (72 samples, 0.04%)</title><rect x="14.1831%" y="437" width="0.0394%" height="15" fill="rgb(233,0,4)" fg:x="25945" fg:w="72"/><text x="14.4331%" y="447.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81476642b (30 samples, 0.02%)</title><rect x="14.2230%" y="437" width="0.0164%" height="15" fill="rgb(235,30,7)" fg:x="26018" fg:w="30"/><text x="14.4730%" y="447.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff814766439 (31 samples, 0.02%)</title><rect x="14.2394%" y="437" width="0.0169%" height="15" fill="rgb(250,79,13)" fg:x="26048" fg:w="31"/><text x="14.4894%" y="447.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff814766445 (30 samples, 0.02%)</title><rect x="14.2635%" y="437" width="0.0164%" height="15" fill="rgb(211,146,34)" fg:x="26092" fg:w="30"/><text x="14.5135%" y="447.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff814766452 (24 samples, 0.01%)</title><rect x="14.2799%" y="437" width="0.0131%" height="15" fill="rgb(228,22,38)" fg:x="26122" fg:w="24"/><text x="14.5299%" y="447.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff814766467 (25 samples, 0.01%)</title><rect x="14.2935%" y="437" width="0.0137%" height="15" fill="rgb(235,168,5)" fg:x="26147" fg:w="25"/><text x="14.5435%" y="447.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff814766484 (29 samples, 0.02%)</title><rect x="14.3083%" y="437" width="0.0159%" height="15" fill="rgb(221,155,16)" fg:x="26174" fg:w="29"/><text x="14.5583%" y="447.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff814766493 (21 samples, 0.01%)</title><rect x="14.3247%" y="437" width="0.0115%" height="15" fill="rgb(215,215,53)" fg:x="26204" fg:w="21"/><text x="14.5747%" y="447.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff8147664a4 (33 samples, 0.02%)</title><rect x="14.3389%" y="437" width="0.0180%" height="15" fill="rgb(223,4,10)" fg:x="26230" fg:w="33"/><text x="14.5889%" y="447.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff8147664c1 (23 samples, 0.01%)</title><rect x="14.3580%" y="437" width="0.0126%" height="15" fill="rgb(234,103,6)" fg:x="26265" fg:w="23"/><text x="14.6080%" y="447.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff8147664ce (294 samples, 0.16%)</title><rect x="14.3722%" y="437" width="0.1607%" height="15" fill="rgb(227,97,0)" fg:x="26291" fg:w="294"/><text x="14.6222%" y="447.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff8147664ef (518 samples, 0.28%)</title><rect x="14.5499%" y="437" width="0.2832%" height="15" fill="rgb(234,150,53)" fg:x="26616" fg:w="518"/><text x="14.7999%" y="447.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff814766509 (227 samples, 0.12%)</title><rect x="14.8544%" y="437" width="0.1241%" height="15" fill="rgb(228,201,54)" fg:x="27173" fg:w="227"/><text x="15.1044%" y="447.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81476654a (19 samples, 0.01%)</title><rect x="14.9785%" y="437" width="0.0104%" height="15" fill="rgb(222,22,37)" fg:x="27400" fg:w="19"/><text x="15.2285%" y="447.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81476655a (20 samples, 0.01%)</title><rect x="14.9889%" y="437" width="0.0109%" height="15" fill="rgb(237,53,32)" fg:x="27419" fg:w="20"/><text x="15.2389%" y="447.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81476678d (21 samples, 0.01%)</title><rect x="15.0189%" y="405" width="0.0115%" height="15" fill="rgb(233,25,53)" fg:x="27474" fg:w="21"/><text x="15.2689%" y="415.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff814780669 (87 samples, 0.05%)</title><rect x="15.0129%" y="421" width="0.0476%" height="15" fill="rgb(210,40,34)" fg:x="27463" fg:w="87"/><text x="15.2629%" y="431.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81476659d (115 samples, 0.06%)</title><rect x="15.0091%" y="437" width="0.0629%" height="15" fill="rgb(241,220,44)" fg:x="27456" fg:w="115"/><text x="15.2591%" y="447.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff8147665a4 (26 samples, 0.01%)</title><rect x="15.0720%" y="437" width="0.0142%" height="15" fill="rgb(235,28,35)" fg:x="27571" fg:w="26"/><text x="15.3220%" y="447.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff8147665ae (30 samples, 0.02%)</title><rect x="15.0878%" y="437" width="0.0164%" height="15" fill="rgb(210,56,17)" fg:x="27600" fg:w="30"/><text x="15.3378%" y="447.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff8147665e4 (70 samples, 0.04%)</title><rect x="15.1272%" y="437" width="0.0383%" height="15" fill="rgb(224,130,29)" fg:x="27672" fg:w="70"/><text x="15.3772%" y="447.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (162 samples, 0.09%)</title><rect x="15.1682%" y="437" width="0.0886%" height="15" fill="rgb(235,212,8)" fg:x="27747" fg:w="162"/><text x="15.4182%" y="447.50"></text></g><g><title>simple_producer`&lt;bytes::bytes::Bytes as core::convert::From&lt;alloc::vec::Vec&lt;u8&gt;&gt;&gt;::from (448 samples, 0.24%)</title><rect x="15.2567%" y="437" width="0.2449%" height="15" fill="rgb(223,33,50)" fg:x="27909" fg:w="448"/><text x="15.5067%" y="447.50"></text></g><g><title>simple_producer`alloc::vec::Vec&lt;T,A&gt;::into_boxed_slice (132 samples, 0.07%)</title><rect x="15.4295%" y="421" width="0.0722%" height="15" fill="rgb(219,149,13)" fg:x="28225" fg:w="132"/><text x="15.6795%" y="431.50"></text></g><g><title>simple_producer`bytes::bytes::Bytes::copy_from_slice (3,720 samples, 2.03%)</title><rect x="13.4976%" y="453" width="2.0336%" height="15" fill="rgb(250,156,29)" fg:x="24691" fg:w="3720"/><text x="13.7476%" y="463.50">s..</text></g><g><title>simple_producer`alloc::vec::Vec&lt;T,A&gt;::into_boxed_slice (54 samples, 0.03%)</title><rect x="15.5016%" y="437" width="0.0295%" height="15" fill="rgb(216,193,19)" fg:x="28357" fg:w="54"/><text x="15.7516%" y="447.50"></text></g><g><title>simple_producer`core::fmt::write (38 samples, 0.02%)</title><rect x="15.5317%" y="453" width="0.0208%" height="15" fill="rgb(216,135,14)" fg:x="28412" fg:w="38"/><text x="15.7817%" y="463.50"></text></g><g><title>simple_producer`core::ptr::drop_in_place&lt;kafkas::producer::Producer&lt;kafkas::executor::TokioExecutor&gt;::send&lt;simple_producer::TestData&gt;::{{closure}}&gt; (98 samples, 0.05%)</title><rect x="15.5612%" y="453" width="0.0536%" height="15" fill="rgb(241,47,5)" fg:x="28466" fg:w="98"/><text x="15.8112%" y="463.50"></text></g><g><title>libsystem_platform.dylib`DYLD-STUB$$_platform_memcmp (25 samples, 0.01%)</title><rect x="16.6442%" y="437" width="0.0137%" height="15" fill="rgb(233,42,35)" fg:x="30447" fg:w="25"/><text x="16.8942%" y="447.50"></text></g><g><title>libsystem_platform.dylib`_platform_memcmp$VARIANT$Base (29 samples, 0.02%)</title><rect x="16.6578%" y="437" width="0.0159%" height="15" fill="rgb(231,13,6)" fg:x="30472" fg:w="29"/><text x="16.9078%" y="447.50"></text></g><g><title>libsystem_pthread.dylib`cthread_yield (36 samples, 0.02%)</title><rect x="16.6737%" y="437" width="0.0197%" height="15" fill="rgb(207,181,40)" fg:x="30501" fg:w="36"/><text x="16.9237%" y="447.50"></text></g><g><title>simple_producer`&lt;bytes::bytes::Bytes as core::cmp::PartialEq&gt;::eq (353 samples, 0.19%)</title><rect x="16.6988%" y="437" width="0.1930%" height="15" fill="rgb(254,173,49)" fg:x="30547" fg:w="353"/><text x="16.9488%" y="447.50"></text></g><g><title>libsystem_platform.dylib`_platform_memcmp$VARIANT$Base (210 samples, 0.11%)</title><rect x="16.7770%" y="421" width="0.1148%" height="15" fill="rgb(221,1,38)" fg:x="30690" fg:w="210"/><text x="17.0270%" y="431.50"></text></g><g><title>simple_producer`&lt;string::String&lt;T&gt; as core::hash::Hash&gt;::hash (496 samples, 0.27%)</title><rect x="16.8918%" y="437" width="0.2711%" height="15" fill="rgb(206,124,46)" fg:x="30900" fg:w="496"/><text x="17.1418%" y="447.50"></text></g><g><title>simple_producer`DYLD-STUB$$memcmp (29 samples, 0.02%)</title><rect x="17.1629%" y="437" width="0.0159%" height="15" fill="rgb(249,21,11)" fg:x="31396" fg:w="29"/><text x="17.4129%" y="447.50"></text></g><g><title>libsystem_kernel.dylib`__psynch_cvwait (2,372 samples, 1.30%)</title><rect x="18.1726%" y="421" width="1.2967%" height="15" fill="rgb(222,201,40)" fg:x="33243" fg:w="2372"/><text x="18.4226%" y="431.50"></text></g><g><title>libsystem_kernel.dylib`swtch_pri (4,087 samples, 2.23%)</title><rect x="19.4693%" y="421" width="2.2342%" height="15" fill="rgb(235,61,29)" fg:x="35615" fg:w="4087"/><text x="19.7193%" y="431.50">l..</text></g><g><title>libsystem_pthread.dylib`_pthread_mutex_droplock (26 samples, 0.01%)</title><rect x="21.7314%" y="405" width="0.0142%" height="15" fill="rgb(219,207,3)" fg:x="39753" fg:w="26"/><text x="21.9814%" y="415.50"></text></g><g><title>libsystem_pthread.dylib`_pthread_cond_wait (111 samples, 0.06%)</title><rect x="21.7040%" y="421" width="0.0607%" height="15" fill="rgb(222,56,46)" fg:x="39703" fg:w="111"/><text x="21.9540%" y="431.50"></text></g><g><title>libsystem_pthread.dylib`cthread_yield (76 samples, 0.04%)</title><rect x="21.7647%" y="421" width="0.0415%" height="15" fill="rgb(239,76,54)" fg:x="39814" fg:w="76"/><text x="22.0147%" y="431.50"></text></g><g><title>simple_producer`dashmap::lock::RawRwLock::lock_shared_slow (8,478 samples, 4.63%)</title><rect x="17.1810%" y="437" width="4.6346%" height="15" fill="rgb(231,124,27)" fg:x="31429" fg:w="8478"/><text x="17.4310%" y="447.50">simpl..</text></g><g><title>simple_producer`dashmap::DashMap&lt;K,V,S&gt;::get (11,362 samples, 6.21%)</title><rect x="15.6148%" y="453" width="6.2112%" height="15" fill="rgb(249,195,6)" fg:x="28564" fg:w="11362"/><text x="15.8648%" y="463.50">simple_p..</text></g><g><title>simple_producer`std::thread::yield_now (19 samples, 0.01%)</title><rect x="21.8156%" y="437" width="0.0104%" height="15" fill="rgb(237,174,47)" fg:x="39907" fg:w="19"/><text x="22.0656%" y="447.50"></text></g><g><title>simple_producer`futures_channel::mpsc::decode_state (76 samples, 0.04%)</title><rect x="21.8287%" y="453" width="0.0415%" height="15" fill="rgb(206,201,31)" fg:x="39931" fg:w="76"/><text x="22.0787%" y="463.50"></text></g><g><title>simple_producer`futures_channel::mpsc::encode_state (40 samples, 0.02%)</title><rect x="21.8702%" y="453" width="0.0219%" height="15" fill="rgb(231,57,52)" fg:x="40007" fg:w="40"/><text x="22.1202%" y="463.50"></text></g><g><title>simple_producer`futures_core::task::__internal::atomic_waker::AtomicWaker::wake (39 samples, 0.02%)</title><rect x="21.8921%" y="453" width="0.0213%" height="15" fill="rgb(248,177,22)" fg:x="40047" fg:w="39"/><text x="22.1421%" y="463.50"></text></g><g><title>libsystem_kernel.dylib`madvise (50 samples, 0.03%)</title><rect x="22.2409%" y="421" width="0.0273%" height="15" fill="rgb(215,211,37)" fg:x="40685" fg:w="50"/><text x="22.4909%" y="431.50"></text></g><g><title>libsystem_kernel.dylib`_kernelrpc_mach_vm_deallocate_trap (493 samples, 0.27%)</title><rect x="22.2704%" y="389" width="0.2695%" height="15" fill="rgb(241,128,51)" fg:x="40739" fg:w="493"/><text x="22.5204%" y="399.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81477aa5f (550 samples, 0.30%)</title><rect x="22.2409%" y="437" width="0.3007%" height="15" fill="rgb(227,165,31)" fg:x="40685" fg:w="550"/><text x="22.4909%" y="447.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff8147717a3 (496 samples, 0.27%)</title><rect x="22.2704%" y="421" width="0.2711%" height="15" fill="rgb(228,167,24)" fg:x="40739" fg:w="496"/><text x="22.5204%" y="431.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff814772ce7 (496 samples, 0.27%)</title><rect x="22.2704%" y="405" width="0.2711%" height="15" fill="rgb(228,143,12)" fg:x="40739" fg:w="496"/><text x="22.5204%" y="415.50"></text></g><g><title>simple_producer`&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (45 samples, 0.02%)</title><rect x="22.6727%" y="421" width="0.0246%" height="15" fill="rgb(249,149,8)" fg:x="41475" fg:w="45"/><text x="22.9227%" y="431.50"></text></g><g><title>simple_producer`__rdl_dealloc (22 samples, 0.01%)</title><rect x="22.7055%" y="421" width="0.0120%" height="15" fill="rgb(243,35,44)" fg:x="41535" fg:w="22"/><text x="22.9555%" y="431.50"></text></g><g><title>libsystem_kernel.dylib`madvise (218 samples, 0.12%)</title><rect x="22.7274%" y="373" width="0.1192%" height="15" fill="rgb(246,89,9)" fg:x="41575" fg:w="218"/><text x="22.9774%" y="383.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff814780dbf (220 samples, 0.12%)</title><rect x="22.7274%" y="389" width="0.1203%" height="15" fill="rgb(233,213,13)" fg:x="41575" fg:w="220"/><text x="22.9774%" y="399.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff8147700c9 (223 samples, 0.12%)</title><rect x="22.7269%" y="405" width="0.1219%" height="15" fill="rgb(233,141,41)" fg:x="41574" fg:w="223"/><text x="22.9769%" y="415.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff814780891 (142 samples, 0.08%)</title><rect x="22.9335%" y="405" width="0.0776%" height="15" fill="rgb(239,167,4)" fg:x="41952" fg:w="142"/><text x="23.1835%" y="415.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff8147808c6 (359 samples, 0.20%)</title><rect x="23.0193%" y="405" width="0.1963%" height="15" fill="rgb(209,217,16)" fg:x="42109" fg:w="359"/><text x="23.2693%" y="415.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff814780901 (57 samples, 0.03%)</title><rect x="23.2385%" y="405" width="0.0312%" height="15" fill="rgb(219,88,35)" fg:x="42510" fg:w="57"/><text x="23.4885%" y="415.50"></text></g><g><title>libsystem_platform.dylib`_platform_bzero$VARIANT$Haswell (49 samples, 0.03%)</title><rect x="23.2429%" y="389" width="0.0268%" height="15" fill="rgb(220,193,23)" fg:x="42518" fg:w="49"/><text x="23.4929%" y="399.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81478099e (57 samples, 0.03%)</title><rect x="23.3080%" y="405" width="0.0312%" height="15" fill="rgb(230,90,52)" fg:x="42637" fg:w="57"/><text x="23.5580%" y="415.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff8147809b7 (205 samples, 0.11%)</title><rect x="23.3489%" y="405" width="0.1121%" height="15" fill="rgb(252,106,19)" fg:x="42712" fg:w="205"/><text x="23.5989%" y="415.50"></text></g><g><title>simple_producer`core::ptr::drop_in_place&lt;kafka_protocol::records::Record&gt; (1,772 samples, 0.97%)</title><rect x="22.5661%" y="437" width="0.9687%" height="15" fill="rgb(206,74,20)" fg:x="41280" fg:w="1772"/><text x="22.8161%" y="447.50"></text></g><g><title>simple_producer`bytes::bytes::promotable_even_drop (1,495 samples, 0.82%)</title><rect x="22.7176%" y="421" width="0.8173%" height="15" fill="rgb(230,138,44)" fg:x="41557" fg:w="1495"/><text x="22.9676%" y="431.50"></text></g><g><title>simple_producer`&lt;core::sync::atomic::AtomicPtr&lt;T&gt; as bytes::loom::sync::atomic::AtomicMut&lt;T&gt;&gt;::with_mut (60 samples, 0.03%)</title><rect x="23.5020%" y="405" width="0.0328%" height="15" fill="rgb(235,182,43)" fg:x="42992" fg:w="60"/><text x="23.7520%" y="415.50"></text></g><g><title>simple_producer`&lt;bytes::bytes_mut::BytesMut as bytes::buf::buf_mut::BufMut&gt;::put_slice (156 samples, 0.09%)</title><rect x="24.0137%" y="421" width="0.0853%" height="15" fill="rgb(242,16,51)" fg:x="43928" fg:w="156"/><text x="24.2637%" y="431.50"></text></g><g><title>simple_producer`crc::crc32::_&lt;impl crc::Crc&lt;u32&gt;&gt;::checksum (2,351 samples, 1.29%)</title><rect x="24.1001%" y="421" width="1.2852%" height="15" fill="rgb(248,9,4)" fg:x="44086" fg:w="2351"/><text x="24.3501%" y="431.50"></text></g><g><title>libsystem_platform.dylib`DYLD-STUB$$_platform_memmove (99 samples, 0.05%)</title><rect x="25.5629%" y="405" width="0.0541%" height="15" fill="rgb(210,31,22)" fg:x="46762" fg:w="99"/><text x="25.8129%" y="415.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (107 samples, 0.06%)</title><rect x="25.6170%" y="405" width="0.0585%" height="15" fill="rgb(239,54,39)" fg:x="46861" fg:w="107"/><text x="25.8670%" y="415.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (1,036 samples, 0.57%)</title><rect x="26.0823%" y="389" width="0.5663%" height="15" fill="rgb(230,99,41)" fg:x="47712" fg:w="1036"/><text x="26.3323%" y="399.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81477122e (39 samples, 0.02%)</title><rect x="26.6743%" y="277" width="0.0213%" height="15" fill="rgb(253,106,12)" fg:x="48795" fg:w="39"/><text x="26.9243%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff814770794 (39 samples, 0.02%)</title><rect x="26.6743%" y="261" width="0.0213%" height="15" fill="rgb(213,46,41)" fg:x="48795" fg:w="39"/><text x="26.9243%" y="271.50"></text></g><g><title>libsystem_kernel.dylib`_kernelrpc_mach_vm_map_trap (39 samples, 0.02%)</title><rect x="26.6743%" y="245" width="0.0213%" height="15" fill="rgb(215,133,35)" fg:x="48795" fg:w="39"/><text x="26.9243%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff814767517 (47 samples, 0.03%)</title><rect x="26.6726%" y="293" width="0.0257%" height="15" fill="rgb(213,28,5)" fg:x="48792" fg:w="47"/><text x="26.9226%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81476a765 (50 samples, 0.03%)</title><rect x="26.6716%" y="309" width="0.0273%" height="15" fill="rgb(215,77,49)" fg:x="48790" fg:w="50"/><text x="26.9216%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81476a7a6 (578 samples, 0.32%)</title><rect x="26.6989%" y="309" width="0.3160%" height="15" fill="rgb(248,100,22)" fg:x="48840" fg:w="578"/><text x="26.9489%" y="319.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (578 samples, 0.32%)</title><rect x="26.6989%" y="293" width="0.3160%" height="15" fill="rgb(208,67,9)" fg:x="48840" fg:w="578"/><text x="26.9489%" y="303.50"></text></g><g><title>libsystem_kernel.dylib`_kernelrpc_mach_vm_deallocate_trap (91 samples, 0.05%)</title><rect x="27.0225%" y="245" width="0.0497%" height="15" fill="rgb(219,133,21)" fg:x="49432" fg:w="91"/><text x="27.2725%" y="255.50"></text></g><g><title>simple_producer`&lt;bytes::bytes_mut::BytesMut as bytes::buf::buf_mut::BufMut&gt;::put_slice (2,556 samples, 1.40%)</title><rect x="25.6755%" y="405" width="1.3973%" height="15" fill="rgb(246,46,29)" fg:x="46968" fg:w="2556"/><text x="25.9255%" y="415.50"></text></g><g><title>simple_producer`bytes::bytes_mut::BytesMut::reserve_inner (776 samples, 0.42%)</title><rect x="26.6486%" y="389" width="0.4242%" height="15" fill="rgb(246,185,52)" fg:x="48748" fg:w="776"/><text x="26.8986%" y="399.50"></text></g><g><title>simple_producer`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (773 samples, 0.42%)</title><rect x="26.6502%" y="373" width="0.4226%" height="15" fill="rgb(252,136,11)" fg:x="48751" fg:w="773"/><text x="26.9002%" y="383.50"></text></g><g><title>simple_producer`alloc::raw_vec::finish_grow (769 samples, 0.42%)</title><rect x="26.6524%" y="357" width="0.4204%" height="15" fill="rgb(219,138,53)" fg:x="48755" fg:w="769"/><text x="26.9024%" y="367.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff814768235 (762 samples, 0.42%)</title><rect x="26.6562%" y="341" width="0.4166%" height="15" fill="rgb(211,51,23)" fg:x="48762" fg:w="762"/><text x="26.9062%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff814769698 (761 samples, 0.42%)</title><rect x="26.6568%" y="325" width="0.4160%" height="15" fill="rgb(247,221,28)" fg:x="48763" fg:w="761"/><text x="26.9068%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81476a7b3 (106 samples, 0.06%)</title><rect x="27.0149%" y="309" width="0.0579%" height="15" fill="rgb(251,222,45)" fg:x="49418" fg:w="106"/><text x="27.2649%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81477aa5f (104 samples, 0.06%)</title><rect x="27.0159%" y="293" width="0.0569%" height="15" fill="rgb(217,162,53)" fg:x="49420" fg:w="104"/><text x="27.2659%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff8147717a3 (92 samples, 0.05%)</title><rect x="27.0225%" y="277" width="0.0503%" height="15" fill="rgb(229,93,14)" fg:x="49432" fg:w="92"/><text x="27.2725%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff814772ce7 (92 samples, 0.05%)</title><rect x="27.0225%" y="261" width="0.0503%" height="15" fill="rgb(209,67,49)" fg:x="49432" fg:w="92"/><text x="27.2725%" y="271.50"></text></g><g><title>simple_producer`DYLD-STUB$$memcpy (58 samples, 0.03%)</title><rect x="27.0728%" y="405" width="0.0317%" height="15" fill="rgb(213,87,29)" fg:x="49524" fg:w="58"/><text x="27.3228%" y="415.50"></text></g><g><title>simple_producer`kafka_protocol::records::RecordBatchEncoder::encode (6,702 samples, 3.66%)</title><rect x="23.5474%" y="437" width="3.6637%" height="15" fill="rgb(205,151,52)" fg:x="43075" fg:w="6702"/><text x="23.7974%" y="447.50">simp..</text></g><g><title>simple_producer`kafka_protocol::records::RecordBatchEncoder::encode_new_records (3,330 samples, 1.82%)</title><rect x="25.3907%" y="421" width="1.8204%" height="15" fill="rgb(253,215,39)" fg:x="46447" fg:w="3330"/><text x="25.6407%" y="431.50">s..</text></g><g><title>simple_producer`kafka_protocol::records::Record::compute_size_new (195 samples, 0.11%)</title><rect x="27.1045%" y="405" width="0.1066%" height="15" fill="rgb(221,220,41)" fg:x="49582" fg:w="195"/><text x="27.3545%" y="415.50"></text></g><g><title>simple_producer`kafkas::producer::batch::ProducerBatch::flush (25 samples, 0.01%)</title><rect x="27.2209%" y="437" width="0.0137%" height="15" fill="rgb(218,133,21)" fg:x="49795" fg:w="25"/><text x="27.4709%" y="447.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff814767517 (24 samples, 0.01%)</title><rect x="27.2215%" y="421" width="0.0131%" height="15" fill="rgb(221,193,43)" fg:x="49796" fg:w="24"/><text x="27.4715%" y="431.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81477122e (22 samples, 0.01%)</title><rect x="27.2226%" y="405" width="0.0120%" height="15" fill="rgb(240,128,52)" fg:x="49798" fg:w="22"/><text x="27.4726%" y="415.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff814770794 (22 samples, 0.01%)</title><rect x="27.2226%" y="389" width="0.0120%" height="15" fill="rgb(253,114,12)" fg:x="49798" fg:w="22"/><text x="27.4726%" y="399.50"></text></g><g><title>libsystem_kernel.dylib`_kernelrpc_mach_vm_map_trap (22 samples, 0.01%)</title><rect x="27.2226%" y="373" width="0.0120%" height="15" fill="rgb(215,223,47)" fg:x="49798" fg:w="22"/><text x="27.4726%" y="383.50"></text></g><g><title>libsystem_platform.dylib`DYLD-STUB$$_platform_memmove (21 samples, 0.01%)</title><rect x="27.3029%" y="421" width="0.0115%" height="15" fill="rgb(248,225,23)" fg:x="49945" fg:w="21"/><text x="27.5529%" y="431.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (57 samples, 0.03%)</title><rect x="27.3144%" y="421" width="0.0312%" height="15" fill="rgb(250,108,0)" fg:x="49966" fg:w="57"/><text x="27.5644%" y="431.50"></text></g><g><title>simple_producer`core::ptr::drop_in_place&lt;futures_channel::oneshot::Sender&lt;core::result::Result&lt;kafkas::producer::RecordMetadata,kafkas::error::Error&gt;&gt;&gt; (26 samples, 0.01%)</title><rect x="27.3582%" y="421" width="0.0142%" height="15" fill="rgb(228,208,7)" fg:x="50046" fg:w="26"/><text x="27.6082%" y="431.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (341 samples, 0.19%)</title><rect x="28.8533%" y="405" width="0.1864%" height="15" fill="rgb(244,45,10)" fg:x="52781" fg:w="341"/><text x="29.1033%" y="415.50"></text></g><g><title>simple_producer`kafkas::producer::Producer&lt;Exe&gt;::send_raw::_{{closure}} (15,214 samples, 8.32%)</title><rect x="21.9134%" y="453" width="8.3169%" height="15" fill="rgb(207,125,25)" fg:x="40086" fg:w="15214"/><text x="22.1634%" y="463.50">simple_produ..</text></g><g><title>simple_producer`kafkas::producer::batch::Thunk::done (5,480 samples, 3.00%)</title><rect x="27.2346%" y="437" width="2.9957%" height="15" fill="rgb(210,195,18)" fg:x="49820" fg:w="5480"/><text x="27.4846%" y="447.50">sim..</text></g><g><title>simple_producer`futures_channel::oneshot::Sender&lt;T&gt;::send (5,228 samples, 2.86%)</title><rect x="27.3724%" y="421" width="2.8579%" height="15" fill="rgb(249,80,12)" fg:x="50072" fg:w="5228"/><text x="27.6224%" y="431.50">si..</text></g><g><title>simple_producer`core::ptr::drop_in_place&lt;futures_channel::oneshot::Sender&lt;core::result::Result&lt;kafkas::producer::RecordMetadata,kafkas::error::Error&gt;&gt;&gt; (2,178 samples, 1.19%)</title><rect x="29.0397%" y="405" width="1.1906%" height="15" fill="rgb(221,65,9)" fg:x="53122" fg:w="2178"/><text x="29.2897%" y="415.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff814766350 (47 samples, 0.03%)</title><rect x="32.3524%" y="437" width="0.0257%" height="15" fill="rgb(235,49,36)" fg:x="59182" fg:w="47"/><text x="32.6024%" y="447.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff814767419 (28 samples, 0.02%)</title><rect x="32.3825%" y="437" width="0.0153%" height="15" fill="rgb(225,32,20)" fg:x="59237" fg:w="28"/><text x="32.6325%" y="447.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff814767422 (25 samples, 0.01%)</title><rect x="32.3984%" y="437" width="0.0137%" height="15" fill="rgb(215,141,46)" fg:x="59266" fg:w="25"/><text x="32.6484%" y="447.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff814782cdd (31 samples, 0.02%)</title><rect x="32.4120%" y="437" width="0.0169%" height="15" fill="rgb(250,160,47)" fg:x="59291" fg:w="31"/><text x="32.6620%" y="447.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff814782cf1 (40 samples, 0.02%)</title><rect x="32.4312%" y="437" width="0.0219%" height="15" fill="rgb(216,222,40)" fg:x="59326" fg:w="40"/><text x="32.6812%" y="447.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff814782cfd (27 samples, 0.01%)</title><rect x="32.4569%" y="437" width="0.0148%" height="15" fill="rgb(234,217,39)" fg:x="59373" fg:w="27"/><text x="32.7069%" y="447.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff814782d04 (21 samples, 0.01%)</title><rect x="32.4716%" y="437" width="0.0115%" height="15" fill="rgb(207,178,40)" fg:x="59400" fg:w="21"/><text x="32.7216%" y="447.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff814782d0d (28 samples, 0.02%)</title><rect x="32.4831%" y="437" width="0.0153%" height="15" fill="rgb(221,136,13)" fg:x="59421" fg:w="28"/><text x="32.7331%" y="447.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff814782d19 (26 samples, 0.01%)</title><rect x="32.4995%" y="437" width="0.0142%" height="15" fill="rgb(249,199,10)" fg:x="59451" fg:w="26"/><text x="32.7495%" y="447.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff814782d28 (29 samples, 0.02%)</title><rect x="32.5214%" y="437" width="0.0159%" height="15" fill="rgb(249,222,13)" fg:x="59491" fg:w="29"/><text x="32.7714%" y="447.50"></text></g><g><title>libsystem_platform.dylib`DYLD-STUB$$_platform_memmove (104 samples, 0.06%)</title><rect x="32.5399%" y="437" width="0.0569%" height="15" fill="rgb(244,185,38)" fg:x="59525" fg:w="104"/><text x="32.7899%" y="447.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (517 samples, 0.28%)</title><rect x="32.5968%" y="437" width="0.2826%" height="15" fill="rgb(236,202,9)" fg:x="59629" fg:w="517"/><text x="32.8468%" y="447.50"></text></g><g><title>simple_producer`&lt;kafkas::producer::aggregator::RecordAggregator as kafkas::producer::aggregator::Aggregator&gt;::try_push (76 samples, 0.04%)</title><rect x="32.8794%" y="437" width="0.0415%" height="15" fill="rgb(250,229,37)" fg:x="60146" fg:w="76"/><text x="33.1294%" y="447.50"></text></g><g><title>simple_producer`dashmap::DashMap&lt;K,V,S&gt;::get (19 samples, 0.01%)</title><rect x="34.4248%" y="405" width="0.0104%" height="15" fill="rgb(206,174,23)" fg:x="62973" fg:w="19"/><text x="34.6748%" y="415.50"></text></g><g><title>simple_producer`&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (68 samples, 0.04%)</title><rect x="34.5642%" y="389" width="0.0372%" height="15" fill="rgb(211,33,43)" fg:x="63228" fg:w="68"/><text x="34.8142%" y="399.50"></text></g><g><title>libsystem_platform.dylib`DYLD-STUB$$_platform_memcmp (22 samples, 0.01%)</title><rect x="35.6586%" y="373" width="0.0120%" height="15" fill="rgb(245,58,50)" fg:x="65230" fg:w="22"/><text x="35.9086%" y="383.50"></text></g><g><title>libsystem_platform.dylib`_platform_memcmp$VARIANT$Base (39 samples, 0.02%)</title><rect x="35.6707%" y="373" width="0.0213%" height="15" fill="rgb(244,68,36)" fg:x="65252" fg:w="39"/><text x="35.9207%" y="383.50"></text></g><g><title>simple_producer`&lt;bytes::bytes::Bytes as core::cmp::PartialEq&gt;::eq (362 samples, 0.20%)</title><rect x="35.6920%" y="373" width="0.1979%" height="15" fill="rgb(232,229,15)" fg:x="65291" fg:w="362"/><text x="35.9420%" y="383.50"></text></g><g><title>libsystem_platform.dylib`_platform_memcmp$VARIANT$Base (241 samples, 0.13%)</title><rect x="35.7581%" y="357" width="0.1317%" height="15" fill="rgb(254,30,23)" fg:x="65412" fg:w="241"/><text x="36.0081%" y="367.50"></text></g><g><title>simple_producer`&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (595 samples, 0.33%)</title><rect x="35.8899%" y="373" width="0.3253%" height="15" fill="rgb(235,160,14)" fg:x="65653" fg:w="595"/><text x="36.1399%" y="383.50"></text></g><g><title>simple_producer`dashmap::DashMap&lt;K,V,S&gt;::get (4,178 samples, 2.28%)</title><rect x="34.6014%" y="389" width="2.2839%" height="15" fill="rgb(212,155,44)" fg:x="63296" fg:w="4178"/><text x="34.8514%" y="399.50">s..</text></g><g><title>simple_producer`hashbrown::map::make_hash (1,217 samples, 0.67%)</title><rect x="36.2201%" y="373" width="0.6653%" height="15" fill="rgb(226,2,50)" fg:x="66257" fg:w="1217"/><text x="36.4701%" y="383.50"></text></g><g><title>simple_producer`&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (515 samples, 0.28%)</title><rect x="36.6038%" y="357" width="0.2815%" height="15" fill="rgb(234,177,6)" fg:x="66959" fg:w="515"/><text x="36.8538%" y="367.50"></text></g><g><title>simple_producer`kafkas::metadata::Cluster::available_partitions (4,507 samples, 2.46%)</title><rect x="34.4352%" y="405" width="2.4638%" height="15" fill="rgb(217,24,9)" fg:x="62992" fg:w="4507"/><text x="34.6852%" y="415.50">si..</text></g><g><title>simple_producer`hashbrown::map::make_hash (25 samples, 0.01%)</title><rect x="36.8853%" y="389" width="0.0137%" height="15" fill="rgb(220,13,46)" fg:x="67474" fg:w="25"/><text x="37.1353%" y="399.50"></text></g><g><title>simple_producer`&lt;bytes::bytes::Bytes as core::cmp::PartialEq&gt;::eq (28 samples, 0.02%)</title><rect x="37.0406%" y="389" width="0.0153%" height="15" fill="rgb(239,221,27)" fg:x="67758" fg:w="28"/><text x="37.2906%" y="399.50"></text></g><g><title>simple_producer`&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (109 samples, 0.06%)</title><rect x="37.0559%" y="389" width="0.0596%" height="15" fill="rgb(222,198,25)" fg:x="67786" fg:w="109"/><text x="37.3059%" y="399.50"></text></g><g><title>libsystem_platform.dylib`DYLD-STUB$$_platform_memcmp (28 samples, 0.02%)</title><rect x="38.4958%" y="373" width="0.0153%" height="15" fill="rgb(211,99,13)" fg:x="70420" fg:w="28"/><text x="38.7458%" y="383.50"></text></g><g><title>libsystem_platform.dylib`_platform_memcmp$VARIANT$Base (39 samples, 0.02%)</title><rect x="38.5111%" y="373" width="0.0213%" height="15" fill="rgb(232,111,31)" fg:x="70448" fg:w="39"/><text x="38.7611%" y="383.50"></text></g><g><title>simple_producer`&lt;bytes::bytes::Bytes as core::cmp::PartialEq&gt;::eq (393 samples, 0.21%)</title><rect x="38.5324%" y="373" width="0.2148%" height="15" fill="rgb(245,82,37)" fg:x="70487" fg:w="393"/><text x="38.7824%" y="383.50"></text></g><g><title>libsystem_platform.dylib`_platform_memcmp$VARIANT$Base (224 samples, 0.12%)</title><rect x="38.6248%" y="357" width="0.1225%" height="15" fill="rgb(227,149,46)" fg:x="70656" fg:w="224"/><text x="38.8748%" y="367.50"></text></g><g><title>simple_producer`&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (583 samples, 0.32%)</title><rect x="38.7473%" y="373" width="0.3187%" height="15" fill="rgb(218,36,50)" fg:x="70880" fg:w="583"/><text x="38.9973%" y="383.50"></text></g><g><title>simple_producer`DYLD-STUB$$memcmp (30 samples, 0.02%)</title><rect x="39.0660%" y="373" width="0.0164%" height="15" fill="rgb(226,80,48)" fg:x="71463" fg:w="30"/><text x="39.3160%" y="383.50"></text></g><g><title>simple_producer`dashmap::DashMap&lt;K,V,S&gt;::get (4,871 samples, 2.66%)</title><rect x="37.1155%" y="389" width="2.6628%" height="15" fill="rgb(238,224,15)" fg:x="67895" fg:w="4871"/><text x="37.3655%" y="399.50">si..</text></g><g><title>simple_producer`hashbrown::map::make_hash (1,273 samples, 0.70%)</title><rect x="39.0824%" y="373" width="0.6959%" height="15" fill="rgb(241,136,10)" fg:x="71493" fg:w="1273"/><text x="39.3324%" y="383.50"></text></g><g><title>simple_producer`&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (569 samples, 0.31%)</title><rect x="39.4672%" y="357" width="0.3110%" height="15" fill="rgb(208,32,45)" fg:x="72197" fg:w="569"/><text x="39.7172%" y="367.50"></text></g><g><title>simple_producer`&lt;kafkas::producer::partitioner::RoundRobinPartitioner as kafkas::producer::partitioner::PartitionSelector&gt;::select (12,517 samples, 6.84%)</title><rect x="32.9543%" y="421" width="6.8425%" height="15" fill="rgb(207,135,9)" fg:x="60283" fg:w="12517"/><text x="33.2043%" y="431.50">simple_pr..</text></g><g><title>simple_producer`kafkas::metadata::Cluster::partitions (5,301 samples, 2.90%)</title><rect x="36.8990%" y="405" width="2.8978%" height="15" fill="rgb(206,86,44)" fg:x="67499" fg:w="5301"/><text x="37.1490%" y="415.50">si..</text></g><g><title>simple_producer`hashbrown::map::make_hash (34 samples, 0.02%)</title><rect x="39.7783%" y="389" width="0.0186%" height="15" fill="rgb(245,177,15)" fg:x="72766" fg:w="34"/><text x="40.0283%" y="399.50"></text></g><g><title>simple_producer`kafkas::metadata::Cluster::available_partitions (56 samples, 0.03%)</title><rect x="39.7969%" y="421" width="0.0306%" height="15" fill="rgb(206,64,50)" fg:x="72800" fg:w="56"/><text x="40.0469%" y="431.50"></text></g><g><title>simple_producer`&lt;kafkas::producer::partitioner::PartitionerSelector as kafkas::producer::partitioner::PartitionSelector&gt;::select (12,687 samples, 6.94%)</title><rect x="32.9210%" y="437" width="6.9355%" height="15" fill="rgb(234,36,40)" fg:x="60222" fg:w="12687"/><text x="33.1710%" y="447.50">simple_pr..</text></g><g><title>simple_producer`kafkas::metadata::Cluster::partitions (53 samples, 0.03%)</title><rect x="39.8275%" y="421" width="0.0290%" height="15" fill="rgb(213,64,8)" fg:x="72856" fg:w="53"/><text x="40.0775%" y="431.50"></text></g><g><title>simple_producer`&lt;kafkas::producer::partitioner::RoundRobinPartitioner as kafkas::producer::partitioner::PartitionSelector&gt;::select (67 samples, 0.04%)</title><rect x="39.8564%" y="437" width="0.0366%" height="15" fill="rgb(210,75,36)" fg:x="72909" fg:w="67"/><text x="40.1064%" y="447.50"></text></g><g><title>simple_producer`DYLD-STUB$$memcpy (43 samples, 0.02%)</title><rect x="39.8931%" y="437" width="0.0235%" height="15" fill="rgb(229,88,21)" fg:x="72976" fg:w="43"/><text x="40.1431%" y="447.50"></text></g><g><title>simple_producer`__rdl_alloc (83 samples, 0.05%)</title><rect x="39.9166%" y="437" width="0.0454%" height="15" fill="rgb(252,204,47)" fg:x="73019" fg:w="83"/><text x="40.1666%" y="447.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff814766393 (32 samples, 0.02%)</title><rect x="41.2559%" y="421" width="0.0175%" height="15" fill="rgb(208,77,27)" fg:x="75469" fg:w="32"/><text x="41.5059%" y="431.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff814766399 (37 samples, 0.02%)</title><rect x="41.2789%" y="421" width="0.0202%" height="15" fill="rgb(221,76,26)" fg:x="75511" fg:w="37"/><text x="41.5289%" y="431.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff8147663a0 (23 samples, 0.01%)</title><rect x="41.3024%" y="421" width="0.0126%" height="15" fill="rgb(225,139,18)" fg:x="75554" fg:w="23"/><text x="41.5524%" y="431.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff8147663b2 (22 samples, 0.01%)</title><rect x="41.3160%" y="421" width="0.0120%" height="15" fill="rgb(230,137,11)" fg:x="75579" fg:w="22"/><text x="41.5660%" y="431.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81476653a (81 samples, 0.04%)</title><rect x="41.3363%" y="421" width="0.0443%" height="15" fill="rgb(212,28,1)" fg:x="75616" fg:w="81"/><text x="41.5863%" y="431.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff814766543 (26 samples, 0.01%)</title><rect x="41.3816%" y="421" width="0.0142%" height="15" fill="rgb(248,164,17)" fg:x="75699" fg:w="26"/><text x="41.6316%" y="431.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff814767428 (27 samples, 0.01%)</title><rect x="41.3958%" y="421" width="0.0148%" height="15" fill="rgb(222,171,42)" fg:x="75725" fg:w="27"/><text x="41.6458%" y="431.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff814767430 (31 samples, 0.02%)</title><rect x="41.4106%" y="421" width="0.0169%" height="15" fill="rgb(243,84,45)" fg:x="75752" fg:w="31"/><text x="41.6606%" y="431.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff814767444 (34 samples, 0.02%)</title><rect x="41.4281%" y="421" width="0.0186%" height="15" fill="rgb(252,49,23)" fg:x="75784" fg:w="34"/><text x="41.6781%" y="431.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff814767452 (32 samples, 0.02%)</title><rect x="41.4467%" y="421" width="0.0175%" height="15" fill="rgb(215,19,7)" fg:x="75818" fg:w="32"/><text x="41.6967%" y="431.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81476869a (27 samples, 0.01%)</title><rect x="41.4751%" y="405" width="0.0148%" height="15" fill="rgb(238,81,41)" fg:x="75870" fg:w="27"/><text x="41.7251%" y="415.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff8147686a2 (27 samples, 0.01%)</title><rect x="41.4910%" y="405" width="0.0148%" height="15" fill="rgb(210,199,37)" fg:x="75899" fg:w="27"/><text x="41.7410%" y="415.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff8147686aa (31 samples, 0.02%)</title><rect x="41.5063%" y="405" width="0.0169%" height="15" fill="rgb(244,192,49)" fg:x="75927" fg:w="31"/><text x="41.7563%" y="415.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff8147686bb (29 samples, 0.02%)</title><rect x="41.5254%" y="405" width="0.0159%" height="15" fill="rgb(226,211,11)" fg:x="75962" fg:w="29"/><text x="41.7754%" y="415.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff8147686c2 (81 samples, 0.04%)</title><rect x="41.5413%" y="405" width="0.0443%" height="15" fill="rgb(236,162,54)" fg:x="75991" fg:w="81"/><text x="41.7913%" y="415.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff8147686cd (984 samples, 0.54%)</title><rect x="41.5855%" y="405" width="0.5379%" height="15" fill="rgb(220,229,9)" fg:x="76072" fg:w="984"/><text x="41.8355%" y="415.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff8147686ce (36 samples, 0.02%)</title><rect x="42.1234%" y="405" width="0.0197%" height="15" fill="rgb(250,87,22)" fg:x="77056" fg:w="36"/><text x="42.3734%" y="415.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff8147686d4 (711 samples, 0.39%)</title><rect x="42.1431%" y="405" width="0.3887%" height="15" fill="rgb(239,43,17)" fg:x="77092" fg:w="711"/><text x="42.3931%" y="415.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff8147686e2 (56 samples, 0.03%)</title><rect x="42.5362%" y="405" width="0.0306%" height="15" fill="rgb(231,177,25)" fg:x="77811" fg:w="56"/><text x="42.7862%" y="415.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff8147686ed (36 samples, 0.02%)</title><rect x="42.5668%" y="405" width="0.0197%" height="15" fill="rgb(219,179,1)" fg:x="77867" fg:w="36"/><text x="42.8168%" y="415.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff814768703 (32 samples, 0.02%)</title><rect x="42.5958%" y="405" width="0.0175%" height="15" fill="rgb(238,219,53)" fg:x="77920" fg:w="32"/><text x="42.8458%" y="415.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff814768712 (1,363 samples, 0.75%)</title><rect x="42.6138%" y="405" width="0.7451%" height="15" fill="rgb(232,167,36)" fg:x="77953" fg:w="1363"/><text x="42.8638%" y="415.50"></text></g><g><title>libsystem_kernel.dylib`__ulock_wait (2,457 samples, 1.34%)</title><rect x="43.3824%" y="389" width="1.3431%" height="15" fill="rgb(244,19,51)" fg:x="79359" fg:w="2457"/><text x="43.6324%" y="399.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff814768721 (2,776 samples, 1.52%)</title><rect x="43.3720%" y="405" width="1.5175%" height="15" fill="rgb(224,6,22)" fg:x="79340" fg:w="2776"/><text x="43.6220%" y="415.50"></text></g><g><title>libsystem_platform.dylib`_os_unfair_lock_lock_slow (300 samples, 0.16%)</title><rect x="44.7255%" y="389" width="0.1640%" height="15" fill="rgb(224,145,5)" fg:x="81816" fg:w="300"/><text x="44.9755%" y="399.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff814768725 (29 samples, 0.02%)</title><rect x="44.8895%" y="405" width="0.0159%" height="15" fill="rgb(234,130,49)" fg:x="82116" fg:w="29"/><text x="45.1395%" y="415.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff8147687c8 (24 samples, 0.01%)</title><rect x="44.9054%" y="405" width="0.0131%" height="15" fill="rgb(254,6,2)" fg:x="82145" fg:w="24"/><text x="45.1554%" y="415.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff8147687cb (24 samples, 0.01%)</title><rect x="44.9185%" y="405" width="0.0131%" height="15" fill="rgb(208,96,46)" fg:x="82169" fg:w="24"/><text x="45.1685%" y="415.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff8147687d9 (33 samples, 0.02%)</title><rect x="44.9366%" y="405" width="0.0180%" height="15" fill="rgb(239,3,39)" fg:x="82202" fg:w="33"/><text x="45.1866%" y="415.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff814768ddc (21 samples, 0.01%)</title><rect x="44.9584%" y="389" width="0.0115%" height="15" fill="rgb(233,210,1)" fg:x="82242" fg:w="21"/><text x="45.2084%" y="399.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff814768de2 (20 samples, 0.01%)</title><rect x="44.9726%" y="389" width="0.0109%" height="15" fill="rgb(244,137,37)" fg:x="82268" fg:w="20"/><text x="45.2226%" y="399.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff814768de9 (26 samples, 0.01%)</title><rect x="44.9841%" y="389" width="0.0142%" height="15" fill="rgb(240,136,2)" fg:x="82289" fg:w="26"/><text x="45.2341%" y="399.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff814768e05 (24 samples, 0.01%)</title><rect x="45.0109%" y="389" width="0.0131%" height="15" fill="rgb(239,18,37)" fg:x="82338" fg:w="24"/><text x="45.2609%" y="399.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff814768e0a (33 samples, 0.02%)</title><rect x="45.0240%" y="389" width="0.0180%" height="15" fill="rgb(218,185,22)" fg:x="82362" fg:w="33"/><text x="45.2740%" y="399.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff814768e6b (48 samples, 0.03%)</title><rect x="45.0437%" y="389" width="0.0262%" height="15" fill="rgb(225,218,4)" fg:x="82398" fg:w="48"/><text x="45.2937%" y="399.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff814768e6e (30 samples, 0.02%)</title><rect x="45.0699%" y="389" width="0.0164%" height="15" fill="rgb(230,182,32)" fg:x="82446" fg:w="30"/><text x="45.3199%" y="399.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff814768e71 (22 samples, 0.01%)</title><rect x="45.0863%" y="389" width="0.0120%" height="15" fill="rgb(242,56,43)" fg:x="82476" fg:w="22"/><text x="45.3363%" y="399.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff814768f9d (24 samples, 0.01%)</title><rect x="45.1175%" y="389" width="0.0131%" height="15" fill="rgb(233,99,24)" fg:x="82533" fg:w="24"/><text x="45.3675%" y="399.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff814768fd0 (41 samples, 0.02%)</title><rect x="45.1771%" y="389" width="0.0224%" height="15" fill="rgb(234,209,42)" fg:x="82642" fg:w="41"/><text x="45.4271%" y="399.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff814768fd7 (32 samples, 0.02%)</title><rect x="45.2033%" y="389" width="0.0175%" height="15" fill="rgb(227,7,12)" fg:x="82690" fg:w="32"/><text x="45.4533%" y="399.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81476904b (32 samples, 0.02%)</title><rect x="45.2405%" y="389" width="0.0175%" height="15" fill="rgb(245,203,43)" fg:x="82758" fg:w="32"/><text x="45.4905%" y="399.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff814769053 (25 samples, 0.01%)</title><rect x="45.2585%" y="389" width="0.0137%" height="15" fill="rgb(238,205,33)" fg:x="82791" fg:w="25"/><text x="45.5085%" y="399.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81476905b (35 samples, 0.02%)</title><rect x="45.2733%" y="389" width="0.0191%" height="15" fill="rgb(231,56,7)" fg:x="82818" fg:w="35"/><text x="45.5233%" y="399.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81476905d (22 samples, 0.01%)</title><rect x="45.2924%" y="389" width="0.0120%" height="15" fill="rgb(244,186,29)" fg:x="82853" fg:w="22"/><text x="45.5424%" y="399.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff814769064 (46 samples, 0.03%)</title><rect x="45.3045%" y="389" width="0.0251%" height="15" fill="rgb(234,111,31)" fg:x="82875" fg:w="46"/><text x="45.5545%" y="399.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81476908d (25 samples, 0.01%)</title><rect x="45.3466%" y="389" width="0.0137%" height="15" fill="rgb(241,149,10)" fg:x="82952" fg:w="25"/><text x="45.5966%" y="399.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff8147690a2 (20 samples, 0.01%)</title><rect x="45.3619%" y="389" width="0.0109%" height="15" fill="rgb(249,206,44)" fg:x="82980" fg:w="20"/><text x="45.6119%" y="399.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff8147690b0 (34 samples, 0.02%)</title><rect x="45.3761%" y="389" width="0.0186%" height="15" fill="rgb(251,153,30)" fg:x="83006" fg:w="34"/><text x="45.6261%" y="399.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff8147690b4 (357 samples, 0.20%)</title><rect x="45.3947%" y="389" width="0.1952%" height="15" fill="rgb(239,152,38)" fg:x="83040" fg:w="357"/><text x="45.6447%" y="399.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff8147690bf (37 samples, 0.02%)</title><rect x="45.5969%" y="389" width="0.0202%" height="15" fill="rgb(249,139,47)" fg:x="83410" fg:w="37"/><text x="45.8469%" y="399.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff814769136 (19 samples, 0.01%)</title><rect x="45.7227%" y="389" width="0.0104%" height="15" fill="rgb(244,64,35)" fg:x="83640" fg:w="19"/><text x="45.9727%" y="399.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff8147885c5 (19 samples, 0.01%)</title><rect x="45.8085%" y="373" width="0.0104%" height="15" fill="rgb(216,46,15)" fg:x="83797" fg:w="19"/><text x="46.0585%" y="383.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff8147885d4 (33 samples, 0.02%)</title><rect x="45.8265%" y="373" width="0.0180%" height="15" fill="rgb(250,74,19)" fg:x="83830" fg:w="33"/><text x="46.0765%" y="383.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff8147885f6 (390 samples, 0.21%)</title><rect x="45.8642%" y="373" width="0.2132%" height="15" fill="rgb(249,42,33)" fg:x="83899" fg:w="390"/><text x="46.1142%" y="383.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff814769155 (638 samples, 0.35%)</title><rect x="45.7555%" y="389" width="0.3488%" height="15" fill="rgb(242,149,17)" fg:x="83700" fg:w="638"/><text x="46.0055%" y="399.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81476919e (89 samples, 0.05%)</title><rect x="46.1463%" y="389" width="0.0487%" height="15" fill="rgb(244,29,21)" fg:x="84415" fg:w="89"/><text x="46.3963%" y="399.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff8147691a1 (234 samples, 0.13%)</title><rect x="46.1950%" y="389" width="0.1279%" height="15" fill="rgb(220,130,37)" fg:x="84504" fg:w="234"/><text x="46.4450%" y="399.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff8147691d8 (26 samples, 0.01%)</title><rect x="46.3754%" y="389" width="0.0142%" height="15" fill="rgb(211,67,2)" fg:x="84834" fg:w="26"/><text x="46.6254%" y="399.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff8147691e6 (29 samples, 0.02%)</title><rect x="46.3945%" y="389" width="0.0159%" height="15" fill="rgb(235,68,52)" fg:x="84869" fg:w="29"/><text x="46.6445%" y="399.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff8147691ed (20 samples, 0.01%)</title><rect x="46.4147%" y="389" width="0.0109%" height="15" fill="rgb(246,142,3)" fg:x="84906" fg:w="20"/><text x="46.6647%" y="399.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81476921c (103 samples, 0.06%)</title><rect x="46.4710%" y="389" width="0.0563%" height="15" fill="rgb(241,25,7)" fg:x="85009" fg:w="103"/><text x="46.7210%" y="399.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81476957d (35 samples, 0.02%)</title><rect x="46.6990%" y="389" width="0.0191%" height="15" fill="rgb(242,119,39)" fg:x="85426" fg:w="35"/><text x="46.9490%" y="399.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff814769585 (36 samples, 0.02%)</title><rect x="46.7220%" y="389" width="0.0197%" height="15" fill="rgb(241,98,45)" fg:x="85468" fg:w="36"/><text x="46.9720%" y="399.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff8147695f2 (20 samples, 0.01%)</title><rect x="46.8116%" y="389" width="0.0109%" height="15" fill="rgb(254,28,30)" fg:x="85632" fg:w="20"/><text x="47.0616%" y="399.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81476960d (55 samples, 0.03%)</title><rect x="46.8504%" y="389" width="0.0301%" height="15" fill="rgb(241,142,54)" fg:x="85703" fg:w="55"/><text x="47.1004%" y="399.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff814769617 (35 samples, 0.02%)</title><rect x="46.8838%" y="389" width="0.0191%" height="15" fill="rgb(222,85,15)" fg:x="85764" fg:w="35"/><text x="47.1338%" y="399.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81476962d (53 samples, 0.03%)</title><rect x="46.9259%" y="389" width="0.0290%" height="15" fill="rgb(210,85,47)" fg:x="85841" fg:w="53"/><text x="47.1759%" y="399.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff814769638 (45 samples, 0.02%)</title><rect x="46.9576%" y="389" width="0.0246%" height="15" fill="rgb(224,206,25)" fg:x="85899" fg:w="45"/><text x="47.2076%" y="399.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff814769646 (24 samples, 0.01%)</title><rect x="46.9854%" y="389" width="0.0131%" height="15" fill="rgb(243,201,19)" fg:x="85950" fg:w="24"/><text x="47.2354%" y="399.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff814769652 (37 samples, 0.02%)</title><rect x="47.0155%" y="389" width="0.0202%" height="15" fill="rgb(236,59,4)" fg:x="86005" fg:w="37"/><text x="47.2655%" y="399.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff8147687de (3,838 samples, 2.10%)</title><rect x="44.9546%" y="405" width="2.0981%" height="15" fill="rgb(254,179,45)" fg:x="82235" fg:w="3838"/><text x="45.2046%" y="415.50">l..</text></g><g><title>libsystem_malloc.dylib`0x7ff814768a89 (31 samples, 0.02%)</title><rect x="47.0658%" y="405" width="0.0169%" height="15" fill="rgb(226,14,10)" fg:x="86097" fg:w="31"/><text x="47.3158%" y="415.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff814768a98 (1,591 samples, 0.87%)</title><rect x="47.0877%" y="405" width="0.8697%" height="15" fill="rgb(244,27,41)" fg:x="86137" fg:w="1591"/><text x="47.3377%" y="415.50"></text></g><g><title>libsystem_kernel.dylib`__ulock_wake (3,126 samples, 1.71%)</title><rect x="47.9793%" y="389" width="1.7089%" height="15" fill="rgb(235,35,32)" fg:x="87768" fg:w="3126"/><text x="48.2293%" y="399.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff814768aa2 (3,219 samples, 1.76%)</title><rect x="47.9629%" y="405" width="1.7597%" height="15" fill="rgb(218,68,31)" fg:x="87738" fg:w="3219"/><text x="48.2129%" y="415.50"></text></g><g><title>libsystem_platform.dylib`_os_unfair_lock_unlock_slow (63 samples, 0.03%)</title><rect x="49.6881%" y="389" width="0.0344%" height="15" fill="rgb(207,120,37)" fg:x="90894" fg:w="63"/><text x="49.9381%" y="399.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff814768aa9 (72 samples, 0.04%)</title><rect x="49.7226%" y="405" width="0.0394%" height="15" fill="rgb(227,98,0)" fg:x="90957" fg:w="72"/><text x="49.9726%" y="415.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff814768ab5 (28 samples, 0.02%)</title><rect x="49.7636%" y="405" width="0.0153%" height="15" fill="rgb(207,7,3)" fg:x="91032" fg:w="28"/><text x="50.0136%" y="415.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff814768b2c (31 samples, 0.02%)</title><rect x="49.7822%" y="405" width="0.0169%" height="15" fill="rgb(206,98,19)" fg:x="91066" fg:w="31"/><text x="50.0322%" y="415.50"></text></g><g><title>libsystem_platform.dylib`os_unfair_lock_lock_with_options (91 samples, 0.05%)</title><rect x="49.8483%" y="405" width="0.0497%" height="15" fill="rgb(217,5,26)" fg:x="91187" fg:w="91"/><text x="50.0983%" y="415.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff814767464 (15,458 samples, 8.45%)</title><rect x="41.4642%" y="421" width="8.4503%" height="15" fill="rgb(235,190,38)" fg:x="75850" fg:w="15458"/><text x="41.7142%" y="431.50">libsystem_ma..</text></g><g><title>libsystem_platform.dylib`os_unfair_lock_unlock (30 samples, 0.02%)</title><rect x="49.8980%" y="405" width="0.0164%" height="15" fill="rgb(247,86,24)" fg:x="91278" fg:w="30"/><text x="50.1480%" y="415.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff814767517 (40 samples, 0.02%)</title><rect x="49.9144%" y="421" width="0.0219%" height="15" fill="rgb(205,101,16)" fg:x="91308" fg:w="40"/><text x="50.1644%" y="431.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff814767522 (59 samples, 0.03%)</title><rect x="49.9369%" y="421" width="0.0323%" height="15" fill="rgb(246,168,33)" fg:x="91349" fg:w="59"/><text x="50.1869%" y="431.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81476754e (29 samples, 0.02%)</title><rect x="49.9691%" y="421" width="0.0159%" height="15" fill="rgb(231,114,1)" fg:x="91408" fg:w="29"/><text x="50.2191%" y="431.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff814767559 (43 samples, 0.02%)</title><rect x="49.9855%" y="421" width="0.0235%" height="15" fill="rgb(207,184,53)" fg:x="91438" fg:w="43"/><text x="50.2355%" y="431.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff814768696 (37 samples, 0.02%)</title><rect x="50.0096%" y="421" width="0.0202%" height="15" fill="rgb(224,95,51)" fg:x="91482" fg:w="37"/><text x="50.2596%" y="431.50"></text></g><g><title>libsystem_platform.dylib`DYLD-STUB$$_platform_memmove (68 samples, 0.04%)</title><rect x="50.0309%" y="421" width="0.0372%" height="15" fill="rgb(212,188,45)" fg:x="91521" fg:w="68"/><text x="50.2809%" y="431.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (2,650 samples, 1.45%)</title><rect x="50.0681%" y="421" width="1.4486%" height="15" fill="rgb(223,154,38)" fg:x="91589" fg:w="2650"/><text x="50.3181%" y="431.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (3,834 samples, 2.10%)</title><rect x="51.7255%" y="405" width="2.0959%" height="15" fill="rgb(251,22,52)" fg:x="94621" fg:w="3834"/><text x="51.9755%" y="415.50">l..</text></g><g><title>libsystem_malloc.dylib`0x7ff81476a671 (42 samples, 0.02%)</title><rect x="53.8285%" y="341" width="0.0230%" height="15" fill="rgb(229,209,22)" fg:x="98468" fg:w="42"/><text x="54.0785%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff814772ddf (38 samples, 0.02%)</title><rect x="53.8307%" y="325" width="0.0208%" height="15" fill="rgb(234,138,34)" fg:x="98472" fg:w="38"/><text x="54.0807%" y="335.50"></text></g><g><title>libsystem_kernel.dylib`vm_allocate (38 samples, 0.02%)</title><rect x="53.8307%" y="309" width="0.0208%" height="15" fill="rgb(212,95,11)" fg:x="98472" fg:w="38"/><text x="54.0807%" y="319.50"></text></g><g><title>libsystem_kernel.dylib`_kernelrpc_mach_vm_allocate_trap (38 samples, 0.02%)</title><rect x="53.8307%" y="293" width="0.0208%" height="15" fill="rgb(240,179,47)" fg:x="98472" fg:w="38"/><text x="54.0807%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff814770794 (53 samples, 0.03%)</title><rect x="53.8537%" y="293" width="0.0290%" height="15" fill="rgb(240,163,11)" fg:x="98514" fg:w="53"/><text x="54.1037%" y="303.50"></text></g><g><title>libsystem_kernel.dylib`_kernelrpc_mach_vm_map_trap (52 samples, 0.03%)</title><rect x="53.8542%" y="277" width="0.0284%" height="15" fill="rgb(236,37,12)" fg:x="98515" fg:w="52"/><text x="54.1042%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81477122e (56 samples, 0.03%)</title><rect x="53.8526%" y="309" width="0.0306%" height="15" fill="rgb(232,164,16)" fg:x="98512" fg:w="56"/><text x="54.1026%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81476a765 (59 samples, 0.03%)</title><rect x="53.8515%" y="341" width="0.0323%" height="15" fill="rgb(244,205,15)" fg:x="98510" fg:w="59"/><text x="54.1015%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff814767517 (59 samples, 0.03%)</title><rect x="53.8515%" y="325" width="0.0323%" height="15" fill="rgb(223,117,47)" fg:x="98510" fg:w="59"/><text x="54.1015%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81476a7a6 (5,232 samples, 2.86%)</title><rect x="53.8837%" y="341" width="2.8601%" height="15" fill="rgb(244,107,35)" fg:x="98569" fg:w="5232"/><text x="54.1337%" y="351.50">li..</text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (5,232 samples, 2.86%)</title><rect x="53.8837%" y="325" width="2.8601%" height="15" fill="rgb(205,140,8)" fg:x="98569" fg:w="5232"/><text x="54.1337%" y="335.50">li..</text></g><g><title>libsystem_kernel.dylib`madvise (28 samples, 0.02%)</title><rect x="56.7455%" y="309" width="0.0153%" height="15" fill="rgb(228,84,46)" fg:x="103804" fg:w="28"/><text x="56.9955%" y="319.50"></text></g><g><title>libsystem_kernel.dylib`_kernelrpc_mach_vm_deallocate_trap (384 samples, 0.21%)</title><rect x="56.7668%" y="277" width="0.2099%" height="15" fill="rgb(254,188,9)" fg:x="103843" fg:w="384"/><text x="57.0168%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff814772ce7 (387 samples, 0.21%)</title><rect x="56.7663%" y="293" width="0.2116%" height="15" fill="rgb(206,112,54)" fg:x="103842" fg:w="387"/><text x="57.0163%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff814769698 (5,764 samples, 3.15%)</title><rect x="53.8274%" y="357" width="3.1509%" height="15" fill="rgb(216,84,49)" fg:x="98466" fg:w="5764"/><text x="54.0774%" y="367.50">lib..</text></g><g><title>libsystem_malloc.dylib`0x7ff81476a7b3 (429 samples, 0.23%)</title><rect x="56.7439%" y="341" width="0.2345%" height="15" fill="rgb(214,194,35)" fg:x="103801" fg:w="429"/><text x="56.9939%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81477aa5f (426 samples, 0.23%)</title><rect x="56.7455%" y="325" width="0.2329%" height="15" fill="rgb(249,28,3)" fg:x="103804" fg:w="426"/><text x="56.9955%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff8147717a3 (388 samples, 0.21%)</title><rect x="56.7663%" y="309" width="0.2121%" height="15" fill="rgb(222,56,52)" fg:x="103842" fg:w="388"/><text x="57.0163%" y="319.50"></text></g><g><title>simple_producer`&lt;kafkas::producer::aggregator::RecordAggregator as kafkas::producer::aggregator::Aggregator&gt;::try_push (9,992 samples, 5.46%)</title><rect x="51.5167%" y="421" width="5.4622%" height="15" fill="rgb(245,217,50)" fg:x="94239" fg:w="9992"/><text x="51.7667%" y="431.50">simple_..</text></g><g><title>simple_producer`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (5,776 samples, 3.16%)</title><rect x="53.8214%" y="405" width="3.1575%" height="15" fill="rgb(213,201,24)" fg:x="98455" fg:w="5776"/><text x="54.0714%" y="415.50">sim..</text></g><g><title>simple_producer`alloc::raw_vec::finish_grow (5,770 samples, 3.15%)</title><rect x="53.8247%" y="389" width="3.1542%" height="15" fill="rgb(248,116,28)" fg:x="98461" fg:w="5770"/><text x="54.0747%" y="399.50">sim..</text></g><g><title>libsystem_malloc.dylib`0x7ff814768235 (5,765 samples, 3.15%)</title><rect x="53.8274%" y="373" width="3.1515%" height="15" fill="rgb(219,72,43)" fg:x="98466" fg:w="5765"/><text x="54.0774%" y="383.50">lib..</text></g><g><title>simple_producer`DYLD-STUB$$memcpy (28 samples, 0.02%)</title><rect x="56.9789%" y="421" width="0.0153%" height="15" fill="rgb(209,138,14)" fg:x="104231" fg:w="28"/><text x="57.2289%" y="431.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81476a671 (42 samples, 0.02%)</title><rect x="56.9975%" y="357" width="0.0230%" height="15" fill="rgb(222,18,33)" fg:x="104265" fg:w="42"/><text x="57.2475%" y="367.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff814772ddf (40 samples, 0.02%)</title><rect x="56.9986%" y="341" width="0.0219%" height="15" fill="rgb(213,199,7)" fg:x="104267" fg:w="40"/><text x="57.2486%" y="351.50"></text></g><g><title>libsystem_kernel.dylib`vm_allocate (40 samples, 0.02%)</title><rect x="56.9986%" y="325" width="0.0219%" height="15" fill="rgb(250,110,10)" fg:x="104267" fg:w="40"/><text x="57.2486%" y="335.50"></text></g><g><title>libsystem_kernel.dylib`_kernelrpc_mach_vm_allocate_trap (40 samples, 0.02%)</title><rect x="56.9986%" y="309" width="0.0219%" height="15" fill="rgb(248,123,6)" fg:x="104267" fg:w="40"/><text x="57.2486%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81477122e (26 samples, 0.01%)</title><rect x="57.0227%" y="325" width="0.0142%" height="15" fill="rgb(206,91,31)" fg:x="104311" fg:w="26"/><text x="57.2727%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff814770794 (26 samples, 0.01%)</title><rect x="57.0227%" y="309" width="0.0142%" height="15" fill="rgb(211,154,13)" fg:x="104311" fg:w="26"/><text x="57.2727%" y="319.50"></text></g><g><title>libsystem_kernel.dylib`_kernelrpc_mach_vm_map_trap (26 samples, 0.01%)</title><rect x="57.0227%" y="293" width="0.0142%" height="15" fill="rgb(225,148,7)" fg:x="104311" fg:w="26"/><text x="57.2727%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81476a765 (32 samples, 0.02%)</title><rect x="57.0205%" y="357" width="0.0175%" height="15" fill="rgb(220,160,43)" fg:x="104307" fg:w="32"/><text x="57.2705%" y="367.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff814767517 (32 samples, 0.02%)</title><rect x="57.0205%" y="341" width="0.0175%" height="15" fill="rgb(213,52,39)" fg:x="104307" fg:w="32"/><text x="57.2705%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81476a7a6 (606 samples, 0.33%)</title><rect x="57.0380%" y="357" width="0.3313%" height="15" fill="rgb(243,137,7)" fg:x="104339" fg:w="606"/><text x="57.2880%" y="367.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (606 samples, 0.33%)</title><rect x="57.0380%" y="341" width="0.3313%" height="15" fill="rgb(230,79,13)" fg:x="104339" fg:w="606"/><text x="57.2880%" y="351.50"></text></g><g><title>libsystem_kernel.dylib`madvise (19 samples, 0.01%)</title><rect x="57.3693%" y="325" width="0.0104%" height="15" fill="rgb(247,105,23)" fg:x="104945" fg:w="19"/><text x="57.6193%" y="335.50"></text></g><g><title>libsystem_kernel.dylib`_kernelrpc_mach_vm_deallocate_trap (211 samples, 0.12%)</title><rect x="57.3807%" y="293" width="0.1153%" height="15" fill="rgb(223,179,41)" fg:x="104966" fg:w="211"/><text x="57.6307%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff814769698 (915 samples, 0.50%)</title><rect x="56.9970%" y="373" width="0.5002%" height="15" fill="rgb(218,9,34)" fg:x="104264" fg:w="915"/><text x="57.2470%" y="383.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81476a7b3 (234 samples, 0.13%)</title><rect x="57.3693%" y="357" width="0.1279%" height="15" fill="rgb(222,106,8)" fg:x="104945" fg:w="234"/><text x="57.6193%" y="367.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81477aa5f (234 samples, 0.13%)</title><rect x="57.3693%" y="341" width="0.1279%" height="15" fill="rgb(211,220,0)" fg:x="104945" fg:w="234"/><text x="57.6193%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff8147717a3 (213 samples, 0.12%)</title><rect x="57.3807%" y="325" width="0.1164%" height="15" fill="rgb(229,52,16)" fg:x="104966" fg:w="213"/><text x="57.6307%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff814772ce7 (213 samples, 0.12%)</title><rect x="57.3807%" y="309" width="0.1164%" height="15" fill="rgb(212,155,18)" fg:x="104966" fg:w="213"/><text x="57.6307%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff814768235 (918 samples, 0.50%)</title><rect x="56.9970%" y="389" width="0.5018%" height="15" fill="rgb(242,21,14)" fg:x="104264" fg:w="918"/><text x="57.2470%" y="399.50"></text></g><g><title>simple_producer`kafkas::producer::TopicProducer&lt;Exe&gt;::try_push::_{{closure}} (49,883 samples, 27.27%)</title><rect x="30.2303%" y="453" width="27.2690%" height="15" fill="rgb(222,19,48)" fg:x="55300" fg:w="49883"/><text x="30.4803%" y="463.50">simple_producer`kafkas::producer::TopicProdu..</text></g><g><title>simple_producer`kafkas::producer::batch::ProducerBatch::try_push (32,071 samples, 17.53%)</title><rect x="39.9674%" y="437" width="17.5319%" height="15" fill="rgb(232,45,27)" fg:x="73112" fg:w="32071"/><text x="40.2174%" y="447.50">simple_producer`kafkas::pro..</text></g><g><title>simple_producer`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (923 samples, 0.50%)</title><rect x="56.9948%" y="421" width="0.5046%" height="15" fill="rgb(249,103,42)" fg:x="104260" fg:w="923"/><text x="57.2448%" y="431.50"></text></g><g><title>simple_producer`alloc::raw_vec::finish_grow (921 samples, 0.50%)</title><rect x="56.9959%" y="405" width="0.5035%" height="15" fill="rgb(246,81,33)" fg:x="104262" fg:w="921"/><text x="57.2459%" y="415.50"></text></g><g><title>simple_producer`kafkas::producer::batch::ProducerBatch::try_push (49 samples, 0.03%)</title><rect x="57.4994%" y="453" width="0.0268%" height="15" fill="rgb(252,33,42)" fg:x="105183" fg:w="49"/><text x="57.7494%" y="463.50"></text></g><g><title>simple_producer`simple_producer::main::_{{closure}} (104,223 samples, 56.97%)</title><rect x="0.5527%" y="469" width="56.9746%" height="15" fill="rgb(209,212,41)" fg:x="1011" fg:w="104223"/><text x="0.8027%" y="479.50">simple_producer`simple_producer::main::_{{closure}}</text></g><g><title>dyld`start (105,240 samples, 57.53%)</title><rect x="0.0000%" y="613" width="57.5305%" height="15" fill="rgb(207,154,6)" fg:x="0" fg:w="105240"/><text x="0.2500%" y="623.50">dyld`start</text></g><g><title>simple_producer`main (105,239 samples, 57.53%)</title><rect x="0.0005%" y="597" width="57.5300%" height="15" fill="rgb(223,64,47)" fg:x="1" fg:w="105239"/><text x="0.2505%" y="607.50">simple_producer`main</text></g><g><title>simple_producer`std::rt::lang_start_internal (105,239 samples, 57.53%)</title><rect x="0.0005%" y="581" width="57.5300%" height="15" fill="rgb(211,161,38)" fg:x="1" fg:w="105239"/><text x="0.2505%" y="591.50">simple_producer`std::rt::lang_start_internal</text></g><g><title>simple_producer`std::rt::lang_start::_{{closure}} (105,239 samples, 57.53%)</title><rect x="0.0005%" y="565" width="57.5300%" height="15" fill="rgb(219,138,40)" fg:x="1" fg:w="105239"/><text x="0.2505%" y="575.50">simple_producer`std::rt::lang_start::_{{closure}}</text></g><g><title>simple_producer`std::sys_common::backtrace::__rust_begin_short_backtrace (105,239 samples, 57.53%)</title><rect x="0.0005%" y="549" width="57.5300%" height="15" fill="rgb(241,228,46)" fg:x="1" fg:w="105239"/><text x="0.2505%" y="559.50">simple_producer`std::sys_common::backtrace::__rust_begin_short_backtrace</text></g><g><title>simple_producer`simple_producer::main (105,239 samples, 57.53%)</title><rect x="0.0005%" y="533" width="57.5300%" height="15" fill="rgb(223,209,38)" fg:x="1" fg:w="105239"/><text x="0.2505%" y="543.50">simple_producer`simple_producer::main</text></g><g><title>simple_producer`tokio::runtime::runtime::Runtime::block_on (105,238 samples, 57.53%)</title><rect x="0.0011%" y="517" width="57.5294%" height="15" fill="rgb(236,164,45)" fg:x="2" fg:w="105238"/><text x="0.2511%" y="527.50">simple_producer`tokio::runtime::runtime::Runtime::block_on</text></g><g><title>simple_producer`tokio::runtime::scheduler::multi_thread::MultiThread::block_on (105,238 samples, 57.53%)</title><rect x="0.0011%" y="501" width="57.5294%" height="15" fill="rgb(231,15,5)" fg:x="2" fg:w="105238"/><text x="0.2511%" y="511.50">simple_producer`tokio::runtime::scheduler::multi_thread::MultiThread::block_on</text></g><g><title>simple_producer`tokio::runtime::park::CachedParkThread::block_on (105,237 samples, 57.53%)</title><rect x="0.0016%" y="485" width="57.5289%" height="15" fill="rgb(252,35,15)" fg:x="3" fg:w="105237"/><text x="0.2516%" y="495.50">simple_producer`tokio::runtime::park::CachedParkThread::block_on</text></g><g><title>simple_producer`tokio::runtime::scheduler::multi_thread::idle::Idle::transition_worker_to_parked (31 samples, 0.02%)</title><rect x="57.7087%" y="421" width="0.0169%" height="15" fill="rgb(248,181,18)" fg:x="105566" fg:w="31"/><text x="57.9587%" y="431.50"></text></g><g><title>simple_producer`tokio::runtime::scheduler::multi_thread::queue::Steal&lt;T&gt;::steal_into (105 samples, 0.06%)</title><rect x="57.7355%" y="421" width="0.0574%" height="15" fill="rgb(233,39,42)" fg:x="105615" fg:w="105"/><text x="57.9855%" y="431.50"></text></g><g><title>libdyld.dylib`0x7ff81491b9f1 (20 samples, 0.01%)</title><rect x="57.8219%" y="405" width="0.0109%" height="15" fill="rgb(238,110,33)" fg:x="105773" fg:w="20"/><text x="58.0719%" y="415.50"></text></g><g><title>simple_producer`tokio::runtime::context::with_defer (49 samples, 0.03%)</title><rect x="57.8547%" y="405" width="0.0268%" height="15" fill="rgb(233,195,10)" fg:x="105833" fg:w="49"/><text x="58.1047%" y="415.50"></text></g><g><title>libsystem_kernel.dylib`__psynch_cvwait (2,125 samples, 1.16%)</title><rect x="58.0597%" y="373" width="1.1617%" height="15" fill="rgb(254,105,3)" fg:x="106208" fg:w="2125"/><text x="58.3097%" y="383.50"></text></g><g><title>libsystem_pthread.dylib`pthread_mutex_lock (39 samples, 0.02%)</title><rect x="59.3022%" y="357" width="0.0213%" height="15" fill="rgb(221,225,9)" fg:x="108481" fg:w="39"/><text x="59.5522%" y="367.50"></text></g><g><title>libsystem_pthread.dylib`_pthread_cond_wait (218 samples, 0.12%)</title><rect x="59.2224%" y="373" width="0.1192%" height="15" fill="rgb(224,227,45)" fg:x="108335" fg:w="218"/><text x="59.4724%" y="383.50"></text></g><g><title>libsystem_pthread.dylib`pthread_testcancel (33 samples, 0.02%)</title><rect x="59.3236%" y="357" width="0.0180%" height="15" fill="rgb(229,198,43)" fg:x="108520" fg:w="33"/><text x="59.5736%" y="367.50"></text></g><g><title>simple_producer`parking_lot::condvar::Condvar::wait_until_internal (2,477 samples, 1.35%)</title><rect x="58.0083%" y="389" width="1.3541%" height="15" fill="rgb(206,209,35)" fg:x="106114" fg:w="2477"/><text x="58.2583%" y="399.50"></text></g><g><title>libsystem_kernel.dylib`mach_absolute_time (30 samples, 0.02%)</title><rect x="59.3903%" y="373" width="0.0164%" height="15" fill="rgb(245,195,53)" fg:x="108642" fg:w="30"/><text x="59.6403%" y="383.50"></text></g><g><title>simple_producer`std::time::Instant::checked_duration_since (25 samples, 0.01%)</title><rect x="59.4154%" y="373" width="0.0137%" height="15" fill="rgb(240,92,26)" fg:x="108688" fg:w="25"/><text x="59.6654%" y="383.50"></text></g><g><title>libsystem_kernel.dylib`kevent (1,018 samples, 0.56%)</title><rect x="59.4657%" y="357" width="0.5565%" height="15" fill="rgb(207,40,23)" fg:x="108780" fg:w="1018"/><text x="59.7157%" y="367.50"></text></g><g><title>simple_producer`mio::poll::Poll::poll (58 samples, 0.03%)</title><rect x="60.0277%" y="357" width="0.0317%" height="15" fill="rgb(223,111,35)" fg:x="109808" fg:w="58"/><text x="60.2777%" y="367.50"></text></g><g><title>simple_producer`tokio::runtime::scheduler::multi_thread::worker::_&lt;impl tokio::runtime::scheduler::multi_thread::handle::Handle&gt;::schedule_task (28 samples, 0.02%)</title><rect x="60.0829%" y="325" width="0.0153%" height="15" fill="rgb(229,147,28)" fg:x="109909" fg:w="28"/><text x="60.3329%" y="335.50"></text></g><g><title>simple_producer`tokio::runtime::io::scheduled_io::ScheduledIo::wake (80 samples, 0.04%)</title><rect x="60.0594%" y="357" width="0.0437%" height="15" fill="rgb(211,29,28)" fg:x="109866" fg:w="80"/><text x="60.3094%" y="367.50"></text></g><g><title>simple_producer`tokio::runtime::task::waker::wake_by_val (40 samples, 0.02%)</title><rect x="60.0812%" y="341" width="0.0219%" height="15" fill="rgb(228,72,33)" fg:x="109906" fg:w="40"/><text x="60.3312%" y="351.50"></text></g><g><title>simple_producer`tokio::runtime::io::Driver::turn (1,228 samples, 0.67%)</title><rect x="59.4351%" y="373" width="0.6713%" height="15" fill="rgb(205,214,31)" fg:x="108724" fg:w="1228"/><text x="59.6851%" y="383.50"></text></g><g><title>simple_producer`tokio::runtime::time::wheel::Wheel::next_expiration (21 samples, 0.01%)</title><rect x="60.1239%" y="341" width="0.0115%" height="15" fill="rgb(224,111,15)" fg:x="109984" fg:w="21"/><text x="60.3739%" y="351.50"></text></g><g><title>simple_producer`tokio::runtime::time::_&lt;impl tokio::runtime::time::handle::Handle&gt;::process_at_time (54 samples, 0.03%)</title><rect x="60.1080%" y="373" width="0.0295%" height="15" fill="rgb(253,21,26)" fg:x="109955" fg:w="54"/><text x="60.3580%" y="383.50"></text></g><g><title>simple_producer`tokio::runtime::time::wheel::Wheel::poll (27 samples, 0.01%)</title><rect x="60.1228%" y="357" width="0.0148%" height="15" fill="rgb(245,139,43)" fg:x="109982" fg:w="27"/><text x="60.3728%" y="367.50"></text></g><g><title>simple_producer`tokio::runtime::time::Driver::park_internal (1,406 samples, 0.77%)</title><rect x="59.3777%" y="389" width="0.7686%" height="15" fill="rgb(252,170,7)" fg:x="108619" fg:w="1406"/><text x="59.6277%" y="399.50"></text></g><g><title>simple_producer`tokio::runtime::scheduler::multi_thread::park::Parker::park (4,143 samples, 2.26%)</title><rect x="57.8820%" y="405" width="2.2648%" height="15" fill="rgb(231,118,14)" fg:x="105883" fg:w="4143"/><text x="58.1320%" y="415.50">s..</text></g><g><title>libsystem_kernel.dylib`kevent (37 samples, 0.02%)</title><rect x="60.1512%" y="373" width="0.0202%" height="15" fill="rgb(238,83,0)" fg:x="110034" fg:w="37"/><text x="60.4012%" y="383.50"></text></g><g><title>simple_producer`tokio::runtime::io::Driver::turn (41 samples, 0.02%)</title><rect x="60.1501%" y="389" width="0.0224%" height="15" fill="rgb(221,39,39)" fg:x="110032" fg:w="41"/><text x="60.4001%" y="399.50"></text></g><g><title>simple_producer`tokio::runtime::scheduler::multi_thread::worker::Context::park_timeout (4,360 samples, 2.38%)</title><rect x="57.7929%" y="421" width="2.3834%" height="15" fill="rgb(222,119,46)" fg:x="105720" fg:w="4360"/><text x="58.0429%" y="431.50">si..</text></g><g><title>simple_producer`tokio::runtime::time::Driver::park_internal (53 samples, 0.03%)</title><rect x="60.1474%" y="405" width="0.0290%" height="15" fill="rgb(222,165,49)" fg:x="110027" fg:w="53"/><text x="60.3974%" y="415.50"></text></g><g><title>libsystem_kernel.dylib`__psynch_cvsignal (484 samples, 0.26%)</title><rect x="60.2496%" y="389" width="0.2646%" height="15" fill="rgb(219,113,52)" fg:x="110214" fg:w="484"/><text x="60.4996%" y="399.50"></text></g><g><title>simple_producer`parking_lot::condvar::Condvar::notify_one_slow (605 samples, 0.33%)</title><rect x="60.2228%" y="405" width="0.3307%" height="15" fill="rgb(214,7,15)" fg:x="110165" fg:w="605"/><text x="60.4728%" y="415.50"></text></g><g><title>simple_producer`tokio::runtime::scheduler::multi_thread::park::Unparker::unpark (22 samples, 0.01%)</title><rect x="60.5617%" y="405" width="0.0120%" height="15" fill="rgb(235,32,4)" fg:x="110785" fg:w="22"/><text x="60.8117%" y="415.50"></text></g><g><title>simple_producer`tokio::runtime::scheduler::multi_thread::worker::_&lt;impl tokio::runtime::scheduler::multi_thread::handle::Handle&gt;::transition_worker_from_searching (27 samples, 0.01%)</title><rect x="60.5738%" y="405" width="0.0148%" height="15" fill="rgb(238,90,54)" fg:x="110807" fg:w="27"/><text x="60.8238%" y="415.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff814766e2b (38 samples, 0.02%)</title><rect x="60.6224%" y="373" width="0.0208%" height="15" fill="rgb(213,208,19)" fg:x="110896" fg:w="38"/><text x="60.8724%" y="383.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff814766e3a (30 samples, 0.02%)</title><rect x="60.6437%" y="373" width="0.0164%" height="15" fill="rgb(233,156,4)" fg:x="110935" fg:w="30"/><text x="60.8937%" y="383.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff814766e45 (34 samples, 0.02%)</title><rect x="60.6601%" y="373" width="0.0186%" height="15" fill="rgb(207,194,5)" fg:x="110965" fg:w="34"/><text x="60.9101%" y="383.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff814766e57 (23 samples, 0.01%)</title><rect x="60.6787%" y="373" width="0.0126%" height="15" fill="rgb(206,111,30)" fg:x="110999" fg:w="23"/><text x="60.9287%" y="383.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff814766e60 (20 samples, 0.01%)</title><rect x="60.6913%" y="373" width="0.0109%" height="15" fill="rgb(243,70,54)" fg:x="111022" fg:w="20"/><text x="60.9413%" y="383.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff814766e70 (29 samples, 0.02%)</title><rect x="60.7044%" y="373" width="0.0159%" height="15" fill="rgb(242,28,8)" fg:x="111046" fg:w="29"/><text x="60.9544%" y="383.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81476ae03 (28 samples, 0.02%)</title><rect x="60.7208%" y="373" width="0.0153%" height="15" fill="rgb(219,106,18)" fg:x="111076" fg:w="28"/><text x="60.9708%" y="383.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81477b493 (23 samples, 0.01%)</title><rect x="60.7454%" y="373" width="0.0126%" height="15" fill="rgb(244,222,10)" fg:x="111121" fg:w="23"/><text x="60.9954%" y="383.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff8147806f8 (20 samples, 0.01%)</title><rect x="60.7580%" y="373" width="0.0109%" height="15" fill="rgb(236,179,52)" fg:x="111144" fg:w="20"/><text x="61.0080%" y="383.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff814780a48 (34 samples, 0.02%)</title><rect x="60.7689%" y="373" width="0.0186%" height="15" fill="rgb(213,23,39)" fg:x="111164" fg:w="34"/><text x="61.0189%" y="383.50"></text></g><g><title>libsystem_platform.dylib`DYLD-STUB$$_platform_memmove (42 samples, 0.02%)</title><rect x="60.7886%" y="373" width="0.0230%" height="15" fill="rgb(238,48,10)" fg:x="111200" fg:w="42"/><text x="61.0386%" y="383.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (58 samples, 0.03%)</title><rect x="60.8132%" y="373" width="0.0317%" height="15" fill="rgb(251,196,23)" fg:x="111245" fg:w="58"/><text x="61.0632%" y="383.50"></text></g><g><title>libsystem_platform.dylib`os_unfair_lock_unlock (26 samples, 0.01%)</title><rect x="60.8449%" y="373" width="0.0142%" height="15" fill="rgb(250,152,24)" fg:x="111303" fg:w="26"/><text x="61.0949%" y="383.50"></text></g><g><title>libsystem_kernel.dylib`__ulock_wake (2,380 samples, 1.30%)</title><rect x="63.1491%" y="357" width="1.3011%" height="15" fill="rgb(209,150,17)" fg:x="115518" fg:w="2380"/><text x="63.3991%" y="367.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81476ae09 (25 samples, 0.01%)</title><rect x="64.4501%" y="357" width="0.0137%" height="15" fill="rgb(234,202,34)" fg:x="117898" fg:w="25"/><text x="64.7001%" y="367.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81476ae10 (34 samples, 0.02%)</title><rect x="64.4676%" y="357" width="0.0186%" height="15" fill="rgb(253,148,53)" fg:x="117930" fg:w="34"/><text x="64.7176%" y="367.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81476ae1b (22 samples, 0.01%)</title><rect x="64.4917%" y="357" width="0.0120%" height="15" fill="rgb(218,129,16)" fg:x="117974" fg:w="22"/><text x="64.7417%" y="367.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81476ae28 (102 samples, 0.06%)</title><rect x="64.5070%" y="357" width="0.0558%" height="15" fill="rgb(216,85,19)" fg:x="118002" fg:w="102"/><text x="64.7570%" y="367.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81476ae3a (24 samples, 0.01%)</title><rect x="64.5655%" y="357" width="0.0131%" height="15" fill="rgb(235,228,7)" fg:x="118109" fg:w="24"/><text x="64.8155%" y="367.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81476ae49 (20 samples, 0.01%)</title><rect x="64.5819%" y="357" width="0.0109%" height="15" fill="rgb(245,175,0)" fg:x="118139" fg:w="20"/><text x="64.8319%" y="367.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81476ae64 (22 samples, 0.01%)</title><rect x="64.5961%" y="357" width="0.0120%" height="15" fill="rgb(208,168,36)" fg:x="118165" fg:w="22"/><text x="64.8461%" y="367.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81476ae73 (24 samples, 0.01%)</title><rect x="64.6103%" y="357" width="0.0131%" height="15" fill="rgb(246,171,24)" fg:x="118191" fg:w="24"/><text x="64.8603%" y="367.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81476ae7f (26 samples, 0.01%)</title><rect x="64.6273%" y="357" width="0.0142%" height="15" fill="rgb(215,142,24)" fg:x="118222" fg:w="26"/><text x="64.8773%" y="367.50"></text></g><g><title>libsystem_platform.dylib`_platform_bzero$VARIANT$Haswell (233 samples, 0.13%)</title><rect x="64.6420%" y="341" width="0.1274%" height="15" fill="rgb(250,187,7)" fg:x="118249" fg:w="233"/><text x="64.8920%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81476ae86 (311 samples, 0.17%)</title><rect x="64.6420%" y="357" width="0.1700%" height="15" fill="rgb(228,66,33)" fg:x="118249" fg:w="311"/><text x="64.8920%" y="367.50"></text></g><g><title>libsystem_platform.dylib`_platform_memset$VARIANT$Haswell (78 samples, 0.04%)</title><rect x="64.7694%" y="341" width="0.0426%" height="15" fill="rgb(234,215,21)" fg:x="118482" fg:w="78"/><text x="65.0194%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81476aea8 (1,014 samples, 0.55%)</title><rect x="64.8328%" y="357" width="0.5543%" height="15" fill="rgb(222,191,20)" fg:x="118598" fg:w="1014"/><text x="65.0828%" y="367.50"></text></g><g><title>libsystem_kernel.dylib`__ulock_wait (3,038 samples, 1.66%)</title><rect x="65.4041%" y="341" width="1.6608%" height="15" fill="rgb(245,79,54)" fg:x="119643" fg:w="3038"/><text x="65.6541%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81476aeba (3,416 samples, 1.87%)</title><rect x="65.3991%" y="357" width="1.8674%" height="15" fill="rgb(240,10,37)" fg:x="119634" fg:w="3416"/><text x="65.6491%" y="367.50">l..</text></g><g><title>libsystem_platform.dylib`_os_unfair_lock_lock_slow (368 samples, 0.20%)</title><rect x="67.0654%" y="341" width="0.2012%" height="15" fill="rgb(214,192,32)" fg:x="122682" fg:w="368"/><text x="67.3154%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81476aece (31 samples, 0.02%)</title><rect x="67.2725%" y="357" width="0.0169%" height="15" fill="rgb(209,36,54)" fg:x="123061" fg:w="31"/><text x="67.5225%" y="367.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81476af7b (136 samples, 0.07%)</title><rect x="67.3032%" y="357" width="0.0743%" height="15" fill="rgb(220,10,11)" fg:x="123117" fg:w="136"/><text x="67.5532%" y="367.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81476afde (23 samples, 0.01%)</title><rect x="67.3830%" y="357" width="0.0126%" height="15" fill="rgb(221,106,17)" fg:x="123263" fg:w="23"/><text x="67.6330%" y="367.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81476aff5 (27 samples, 0.01%)</title><rect x="67.4103%" y="357" width="0.0148%" height="15" fill="rgb(251,142,44)" fg:x="123313" fg:w="27"/><text x="67.6603%" y="367.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81476b143 (21 samples, 0.01%)</title><rect x="67.4524%" y="341" width="0.0115%" height="15" fill="rgb(238,13,15)" fg:x="123390" fg:w="21"/><text x="67.7024%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81476b14a (21 samples, 0.01%)</title><rect x="67.4644%" y="341" width="0.0115%" height="15" fill="rgb(208,107,27)" fg:x="123412" fg:w="21"/><text x="67.7144%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81476b158 (22 samples, 0.01%)</title><rect x="67.4781%" y="341" width="0.0120%" height="15" fill="rgb(205,136,37)" fg:x="123437" fg:w="22"/><text x="67.7281%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81476b173 (27 samples, 0.01%)</title><rect x="67.4939%" y="341" width="0.0148%" height="15" fill="rgb(250,205,27)" fg:x="123466" fg:w="27"/><text x="67.7439%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81476b181 (20 samples, 0.01%)</title><rect x="67.5120%" y="341" width="0.0109%" height="15" fill="rgb(210,80,43)" fg:x="123499" fg:w="20"/><text x="67.7620%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81476b193 (20 samples, 0.01%)</title><rect x="67.5257%" y="341" width="0.0109%" height="15" fill="rgb(247,160,36)" fg:x="123524" fg:w="20"/><text x="67.7757%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81476b1a3 (22 samples, 0.01%)</title><rect x="67.5415%" y="341" width="0.0120%" height="15" fill="rgb(234,13,49)" fg:x="123553" fg:w="22"/><text x="67.7915%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81476b1b1 (34 samples, 0.02%)</title><rect x="67.5568%" y="341" width="0.0186%" height="15" fill="rgb(234,122,0)" fg:x="123581" fg:w="34"/><text x="67.8068%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81476b1c1 (27 samples, 0.01%)</title><rect x="67.5803%" y="341" width="0.0148%" height="15" fill="rgb(207,146,38)" fg:x="123624" fg:w="27"/><text x="67.8303%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81476b1ff (30 samples, 0.02%)</title><rect x="67.6060%" y="341" width="0.0164%" height="15" fill="rgb(207,177,25)" fg:x="123671" fg:w="30"/><text x="67.8560%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81476b20d (31 samples, 0.02%)</title><rect x="67.6235%" y="341" width="0.0169%" height="15" fill="rgb(211,178,42)" fg:x="123703" fg:w="31"/><text x="67.8735%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81476b211 (216 samples, 0.12%)</title><rect x="67.6405%" y="341" width="0.1181%" height="15" fill="rgb(230,69,54)" fg:x="123734" fg:w="216"/><text x="67.8905%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81476b21b (32 samples, 0.02%)</title><rect x="67.7591%" y="341" width="0.0175%" height="15" fill="rgb(214,135,41)" fg:x="123951" fg:w="32"/><text x="68.0091%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81476b223 (21 samples, 0.01%)</title><rect x="67.7766%" y="341" width="0.0115%" height="15" fill="rgb(237,67,25)" fg:x="123983" fg:w="21"/><text x="68.0266%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81476b241 (30 samples, 0.02%)</title><rect x="67.7935%" y="341" width="0.0164%" height="15" fill="rgb(222,189,50)" fg:x="124014" fg:w="30"/><text x="68.0435%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81476b255 (25 samples, 0.01%)</title><rect x="67.8121%" y="341" width="0.0137%" height="15" fill="rgb(245,148,34)" fg:x="124048" fg:w="25"/><text x="68.0621%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81476b26a (39 samples, 0.02%)</title><rect x="67.8290%" y="341" width="0.0213%" height="15" fill="rgb(222,29,6)" fg:x="124079" fg:w="39"/><text x="68.0790%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81476b276 (35 samples, 0.02%)</title><rect x="67.8526%" y="341" width="0.0191%" height="15" fill="rgb(221,189,43)" fg:x="124122" fg:w="35"/><text x="68.1026%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81476b28b (22 samples, 0.01%)</title><rect x="67.8799%" y="341" width="0.0120%" height="15" fill="rgb(207,36,27)" fg:x="124172" fg:w="22"/><text x="68.1299%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81476b28f (24 samples, 0.01%)</title><rect x="67.8925%" y="341" width="0.0131%" height="15" fill="rgb(217,90,24)" fg:x="124195" fg:w="24"/><text x="68.1425%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81476b29b (24 samples, 0.01%)</title><rect x="67.9105%" y="341" width="0.0131%" height="15" fill="rgb(224,66,35)" fg:x="124228" fg:w="24"/><text x="68.1605%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81476b42f (29 samples, 0.02%)</title><rect x="67.9335%" y="341" width="0.0159%" height="15" fill="rgb(221,13,50)" fg:x="124270" fg:w="29"/><text x="68.1835%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81476b43e (24 samples, 0.01%)</title><rect x="67.9559%" y="341" width="0.0131%" height="15" fill="rgb(236,68,49)" fg:x="124311" fg:w="24"/><text x="68.2059%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81476b46c (22 samples, 0.01%)</title><rect x="67.9832%" y="341" width="0.0120%" height="15" fill="rgb(229,146,28)" fg:x="124361" fg:w="22"/><text x="68.2332%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81476b488 (20 samples, 0.01%)</title><rect x="68.0182%" y="341" width="0.0109%" height="15" fill="rgb(225,31,38)" fg:x="124425" fg:w="20"/><text x="68.2682%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81476b48c (117 samples, 0.06%)</title><rect x="68.0291%" y="341" width="0.0640%" height="15" fill="rgb(250,208,3)" fg:x="124445" fg:w="117"/><text x="68.2791%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81476b499 (27 samples, 0.01%)</title><rect x="68.0942%" y="341" width="0.0148%" height="15" fill="rgb(246,54,23)" fg:x="124564" fg:w="27"/><text x="68.3442%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81476b4ad (32 samples, 0.02%)</title><rect x="68.1215%" y="341" width="0.0175%" height="15" fill="rgb(243,76,11)" fg:x="124614" fg:w="32"/><text x="68.3715%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81476b4bd (44 samples, 0.02%)</title><rect x="68.1417%" y="341" width="0.0241%" height="15" fill="rgb(245,21,50)" fg:x="124651" fg:w="44"/><text x="68.3917%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81476b4c2 (30 samples, 0.02%)</title><rect x="68.1658%" y="341" width="0.0164%" height="15" fill="rgb(228,9,43)" fg:x="124695" fg:w="30"/><text x="68.4158%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81476b4cf (25 samples, 0.01%)</title><rect x="68.1855%" y="341" width="0.0137%" height="15" fill="rgb(208,100,47)" fg:x="124731" fg:w="25"/><text x="68.4355%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81476bdb7 (24 samples, 0.01%)</title><rect x="68.2062%" y="325" width="0.0131%" height="15" fill="rgb(232,26,8)" fg:x="124769" fg:w="24"/><text x="68.4562%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81476bdbe (24 samples, 0.01%)</title><rect x="68.2270%" y="325" width="0.0131%" height="15" fill="rgb(216,166,38)" fg:x="124807" fg:w="24"/><text x="68.4770%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81476bdcc (26 samples, 0.01%)</title><rect x="68.2467%" y="325" width="0.0142%" height="15" fill="rgb(251,202,51)" fg:x="124843" fg:w="26"/><text x="68.4967%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81476bdeb (31 samples, 0.02%)</title><rect x="68.2822%" y="325" width="0.0169%" height="15" fill="rgb(254,216,34)" fg:x="124908" fg:w="31"/><text x="68.5322%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81476be01 (30 samples, 0.02%)</title><rect x="68.3194%" y="325" width="0.0164%" height="15" fill="rgb(251,32,27)" fg:x="124976" fg:w="30"/><text x="68.5694%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81476be0b (28 samples, 0.02%)</title><rect x="68.3418%" y="325" width="0.0153%" height="15" fill="rgb(208,127,28)" fg:x="125017" fg:w="28"/><text x="68.5918%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81476be1f (30 samples, 0.02%)</title><rect x="68.3609%" y="325" width="0.0164%" height="15" fill="rgb(224,137,22)" fg:x="125052" fg:w="30"/><text x="68.6109%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81476be2c (19 samples, 0.01%)</title><rect x="68.3801%" y="325" width="0.0104%" height="15" fill="rgb(254,70,32)" fg:x="125087" fg:w="19"/><text x="68.6301%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81476be41 (31 samples, 0.02%)</title><rect x="68.4101%" y="325" width="0.0169%" height="15" fill="rgb(229,75,37)" fg:x="125142" fg:w="31"/><text x="68.6601%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81476be53 (28 samples, 0.02%)</title><rect x="68.4358%" y="325" width="0.0153%" height="15" fill="rgb(252,64,23)" fg:x="125189" fg:w="28"/><text x="68.6858%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81476beb3 (322 samples, 0.18%)</title><rect x="68.4752%" y="325" width="0.1760%" height="15" fill="rgb(232,162,48)" fg:x="125261" fg:w="322"/><text x="68.7252%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81476bec1 (19 samples, 0.01%)</title><rect x="68.6600%" y="325" width="0.0104%" height="15" fill="rgb(246,160,12)" fg:x="125599" fg:w="19"/><text x="68.9100%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81476bed2 (25 samples, 0.01%)</title><rect x="68.6840%" y="325" width="0.0137%" height="15" fill="rgb(247,166,0)" fg:x="125643" fg:w="25"/><text x="68.9340%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81476bedb (20 samples, 0.01%)</title><rect x="68.7081%" y="325" width="0.0109%" height="15" fill="rgb(249,219,21)" fg:x="125687" fg:w="20"/><text x="68.9581%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81476bee4 (28 samples, 0.02%)</title><rect x="68.7272%" y="325" width="0.0153%" height="15" fill="rgb(205,209,3)" fg:x="125722" fg:w="28"/><text x="68.9772%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81476bef8 (28 samples, 0.02%)</title><rect x="68.7458%" y="325" width="0.0153%" height="15" fill="rgb(243,44,1)" fg:x="125756" fg:w="28"/><text x="68.9958%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81476befb (23 samples, 0.01%)</title><rect x="68.7611%" y="325" width="0.0126%" height="15" fill="rgb(206,159,16)" fg:x="125784" fg:w="23"/><text x="69.0111%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81476bf1d (22 samples, 0.01%)</title><rect x="68.7846%" y="325" width="0.0120%" height="15" fill="rgb(244,77,30)" fg:x="125827" fg:w="22"/><text x="69.0346%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81476b4da (1,205 samples, 0.66%)</title><rect x="68.2013%" y="341" width="0.6587%" height="15" fill="rgb(218,69,12)" fg:x="124760" fg:w="1205"/><text x="68.4513%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81476b4e4 (19 samples, 0.01%)</title><rect x="68.8622%" y="341" width="0.0104%" height="15" fill="rgb(212,87,7)" fg:x="125969" fg:w="19"/><text x="69.1122%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81476b4f9 (21 samples, 0.01%)</title><rect x="68.8792%" y="341" width="0.0115%" height="15" fill="rgb(245,114,25)" fg:x="126000" fg:w="21"/><text x="69.1292%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81476b509 (21 samples, 0.01%)</title><rect x="68.8956%" y="341" width="0.0115%" height="15" fill="rgb(210,61,42)" fg:x="126030" fg:w="21"/><text x="69.1456%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81476b546 (22 samples, 0.01%)</title><rect x="68.9071%" y="341" width="0.0120%" height="15" fill="rgb(211,52,33)" fg:x="126051" fg:w="22"/><text x="69.1571%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81476b57d (19 samples, 0.01%)</title><rect x="68.9218%" y="341" width="0.0104%" height="15" fill="rgb(234,58,33)" fg:x="126078" fg:w="19"/><text x="69.1718%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81476b588 (22 samples, 0.01%)</title><rect x="68.9322%" y="341" width="0.0120%" height="15" fill="rgb(220,115,36)" fg:x="126097" fg:w="22"/><text x="69.1822%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81476ba36 (30 samples, 0.02%)</title><rect x="68.9453%" y="325" width="0.0164%" height="15" fill="rgb(243,153,54)" fg:x="126121" fg:w="30"/><text x="69.1953%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81476ba3c (25 samples, 0.01%)</title><rect x="68.9748%" y="325" width="0.0137%" height="15" fill="rgb(251,47,18)" fg:x="126175" fg:w="25"/><text x="69.2248%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81476ba46 (27 samples, 0.01%)</title><rect x="68.9907%" y="325" width="0.0148%" height="15" fill="rgb(242,102,42)" fg:x="126204" fg:w="27"/><text x="69.2407%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81476ba55 (32 samples, 0.02%)</title><rect x="69.0060%" y="325" width="0.0175%" height="15" fill="rgb(234,31,38)" fg:x="126232" fg:w="32"/><text x="69.2560%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81476ba6c (19 samples, 0.01%)</title><rect x="69.0372%" y="325" width="0.0104%" height="15" fill="rgb(221,117,51)" fg:x="126289" fg:w="19"/><text x="69.2872%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81476ba7b (22 samples, 0.01%)</title><rect x="69.0497%" y="325" width="0.0120%" height="15" fill="rgb(212,20,18)" fg:x="126312" fg:w="22"/><text x="69.2997%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81476ba93 (19 samples, 0.01%)</title><rect x="69.0787%" y="325" width="0.0104%" height="15" fill="rgb(245,133,36)" fg:x="126365" fg:w="19"/><text x="69.3287%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81476ba98 (24 samples, 0.01%)</title><rect x="69.0891%" y="325" width="0.0131%" height="15" fill="rgb(212,6,19)" fg:x="126384" fg:w="24"/><text x="69.3391%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81476baa2 (26 samples, 0.01%)</title><rect x="69.1126%" y="325" width="0.0142%" height="15" fill="rgb(218,1,36)" fg:x="126427" fg:w="26"/><text x="69.3626%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81476baae (29 samples, 0.02%)</title><rect x="69.1361%" y="325" width="0.0159%" height="15" fill="rgb(246,84,54)" fg:x="126470" fg:w="29"/><text x="69.3861%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81476bac4 (25 samples, 0.01%)</title><rect x="69.1558%" y="325" width="0.0137%" height="15" fill="rgb(242,110,6)" fg:x="126506" fg:w="25"/><text x="69.4058%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81476bae5 (23 samples, 0.01%)</title><rect x="69.1727%" y="325" width="0.0126%" height="15" fill="rgb(214,47,5)" fg:x="126537" fg:w="23"/><text x="69.4227%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81476bafe (21 samples, 0.01%)</title><rect x="69.1924%" y="325" width="0.0115%" height="15" fill="rgb(218,159,25)" fg:x="126573" fg:w="21"/><text x="69.4424%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81476bb0c (19 samples, 0.01%)</title><rect x="69.2137%" y="325" width="0.0104%" height="15" fill="rgb(215,211,28)" fg:x="126612" fg:w="19"/><text x="69.4637%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81476bb1a (26 samples, 0.01%)</title><rect x="69.2252%" y="325" width="0.0142%" height="15" fill="rgb(238,59,32)" fg:x="126633" fg:w="26"/><text x="69.4752%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81476bb2a (21 samples, 0.01%)</title><rect x="69.2405%" y="325" width="0.0115%" height="15" fill="rgb(226,82,3)" fg:x="126661" fg:w="21"/><text x="69.4905%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81476bb3e (22 samples, 0.01%)</title><rect x="69.2690%" y="325" width="0.0120%" height="15" fill="rgb(240,164,32)" fg:x="126713" fg:w="22"/><text x="69.5190%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81476bcae (19 samples, 0.01%)</title><rect x="69.3537%" y="325" width="0.0104%" height="15" fill="rgb(232,46,7)" fg:x="126868" fg:w="19"/><text x="69.6037%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81476bccc (22 samples, 0.01%)</title><rect x="69.3799%" y="325" width="0.0120%" height="15" fill="rgb(229,129,53)" fg:x="126916" fg:w="22"/><text x="69.6299%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81476bcd5 (20 samples, 0.01%)</title><rect x="69.3952%" y="325" width="0.0109%" height="15" fill="rgb(234,188,29)" fg:x="126944" fg:w="20"/><text x="69.6452%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81476bce2 (19 samples, 0.01%)</title><rect x="69.4089%" y="325" width="0.0104%" height="15" fill="rgb(246,141,4)" fg:x="126969" fg:w="19"/><text x="69.6589%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81476bd8d (20 samples, 0.01%)</title><rect x="69.4668%" y="325" width="0.0109%" height="15" fill="rgb(229,23,39)" fg:x="127075" fg:w="20"/><text x="69.7168%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81476b58d (979 samples, 0.54%)</title><rect x="68.9442%" y="341" width="0.5352%" height="15" fill="rgb(206,12,3)" fg:x="126119" fg:w="979"/><text x="69.1942%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81476b598 (354 samples, 0.19%)</title><rect x="69.4816%" y="341" width="0.1935%" height="15" fill="rgb(252,226,20)" fg:x="127102" fg:w="354"/><text x="69.7316%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81476b5a5 (24 samples, 0.01%)</title><rect x="69.6811%" y="341" width="0.0131%" height="15" fill="rgb(216,123,35)" fg:x="127467" fg:w="24"/><text x="69.9311%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81476b5ad (26 samples, 0.01%)</title><rect x="69.6948%" y="341" width="0.0142%" height="15" fill="rgb(212,68,40)" fg:x="127492" fg:w="26"/><text x="69.9448%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81476b5b4 (20 samples, 0.01%)</title><rect x="69.7090%" y="341" width="0.0109%" height="15" fill="rgb(254,125,32)" fg:x="127518" fg:w="20"/><text x="69.9590%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81476b5bb (28 samples, 0.02%)</title><rect x="69.7199%" y="341" width="0.0153%" height="15" fill="rgb(253,97,22)" fg:x="127538" fg:w="28"/><text x="69.9699%" y="351.50"></text></g><g><title>libsystem_kernel.dylib`madvise (1,860 samples, 1.02%)</title><rect x="69.8173%" y="309" width="1.0168%" height="15" fill="rgb(241,101,14)" fg:x="127716" fg:w="1860"/><text x="70.0673%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff814770161 (29 samples, 0.02%)</title><rect x="70.8357%" y="309" width="0.0159%" height="15" fill="rgb(238,103,29)" fg:x="129579" fg:w="29"/><text x="71.0857%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff814786b8a (1,921 samples, 1.05%)</title><rect x="69.8173%" y="325" width="1.0501%" height="15" fill="rgb(233,195,47)" fg:x="127716" fg:w="1921"/><text x="70.0673%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff814786b98 (22 samples, 0.01%)</title><rect x="70.8745%" y="325" width="0.0120%" height="15" fill="rgb(246,218,30)" fg:x="129650" fg:w="22"/><text x="71.1245%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81476b687 (2,052 samples, 1.12%)</title><rect x="69.7795%" y="341" width="1.1217%" height="15" fill="rgb(219,145,47)" fg:x="127647" fg:w="2052"/><text x="70.0295%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81476b727 (88 samples, 0.05%)</title><rect x="70.9024%" y="341" width="0.0481%" height="15" fill="rgb(243,12,26)" fg:x="129701" fg:w="88"/><text x="71.1524%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81476b777 (96 samples, 0.05%)</title><rect x="70.9505%" y="341" width="0.0525%" height="15" fill="rgb(214,87,16)" fg:x="129789" fg:w="96"/><text x="71.2005%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81477265f (452 samples, 0.25%)</title><rect x="71.0445%" y="325" width="0.2471%" height="15" fill="rgb(208,99,42)" fg:x="129961" fg:w="452"/><text x="71.2945%" y="335.50"></text></g><g><title>libsystem_kernel.dylib`madvise (452 samples, 0.25%)</title><rect x="71.0445%" y="309" width="0.2471%" height="15" fill="rgb(253,99,2)" fg:x="129961" fg:w="452"/><text x="71.2945%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81476b850 (530 samples, 0.29%)</title><rect x="71.0035%" y="341" width="0.2897%" height="15" fill="rgb(220,168,23)" fg:x="129886" fg:w="530"/><text x="71.2535%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81476b8a0 (181 samples, 0.10%)</title><rect x="71.2938%" y="341" width="0.0989%" height="15" fill="rgb(242,38,24)" fg:x="130417" fg:w="181"/><text x="71.5438%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff814772ce7 (181 samples, 0.10%)</title><rect x="71.2938%" y="325" width="0.0989%" height="15" fill="rgb(225,182,9)" fg:x="130417" fg:w="181"/><text x="71.5438%" y="335.50"></text></g><g><title>libsystem_kernel.dylib`_kernelrpc_mach_vm_deallocate_trap (181 samples, 0.10%)</title><rect x="71.2938%" y="309" width="0.0989%" height="15" fill="rgb(243,178,37)" fg:x="130417" fg:w="181"/><text x="71.5438%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81476b8ab (25 samples, 0.01%)</title><rect x="71.4097%" y="341" width="0.0137%" height="15" fill="rgb(232,139,19)" fg:x="130629" fg:w="25"/><text x="71.6597%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff814776d5f (29 samples, 0.02%)</title><rect x="71.4720%" y="341" width="0.0159%" height="15" fill="rgb(225,201,24)" fg:x="130743" fg:w="29"/><text x="71.7220%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff814776d6e (24 samples, 0.01%)</title><rect x="71.4900%" y="341" width="0.0131%" height="15" fill="rgb(221,47,46)" fg:x="130776" fg:w="24"/><text x="71.7400%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff814776d91 (22 samples, 0.01%)</title><rect x="71.5163%" y="341" width="0.0120%" height="15" fill="rgb(249,23,13)" fg:x="130824" fg:w="22"/><text x="71.7663%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff814776d9e (21 samples, 0.01%)</title><rect x="71.5299%" y="341" width="0.0115%" height="15" fill="rgb(219,9,5)" fg:x="130849" fg:w="21"/><text x="71.7799%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff814776da2 (19 samples, 0.01%)</title><rect x="71.5414%" y="341" width="0.0104%" height="15" fill="rgb(254,171,16)" fg:x="130870" fg:w="19"/><text x="71.7914%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff814776dae (26 samples, 0.01%)</title><rect x="71.5600%" y="341" width="0.0142%" height="15" fill="rgb(230,171,20)" fg:x="130904" fg:w="26"/><text x="71.8100%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff814776db2 (50 samples, 0.03%)</title><rect x="71.5742%" y="341" width="0.0273%" height="15" fill="rgb(210,71,41)" fg:x="130930" fg:w="50"/><text x="71.8242%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff814776db8 (19 samples, 0.01%)</title><rect x="71.6048%" y="341" width="0.0104%" height="15" fill="rgb(206,173,20)" fg:x="130986" fg:w="19"/><text x="71.8548%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81476b006 (7,650 samples, 4.18%)</title><rect x="67.4360%" y="357" width="4.1820%" height="15" fill="rgb(233,88,34)" fg:x="123360" fg:w="7650"/><text x="67.6860%" y="367.50">libsy..</text></g><g><title>libsystem_malloc.dylib`0x7ff81476b012 (24 samples, 0.01%)</title><rect x="71.6201%" y="357" width="0.0131%" height="15" fill="rgb(223,209,46)" fg:x="131014" fg:w="24"/><text x="71.8701%" y="367.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81476b01a (1,458 samples, 0.80%)</title><rect x="71.6333%" y="357" width="0.7970%" height="15" fill="rgb(250,43,18)" fg:x="131038" fg:w="1458"/><text x="71.8833%" y="367.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81476b024 (28 samples, 0.02%)</title><rect x="72.4358%" y="357" width="0.0153%" height="15" fill="rgb(208,13,10)" fg:x="132506" fg:w="28"/><text x="72.6858%" y="367.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81476b029 (27 samples, 0.01%)</title><rect x="72.4511%" y="357" width="0.0148%" height="15" fill="rgb(212,200,36)" fg:x="132534" fg:w="27"/><text x="72.7011%" y="367.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81476b032 (22 samples, 0.01%)</title><rect x="72.4669%" y="357" width="0.0120%" height="15" fill="rgb(225,90,30)" fg:x="132563" fg:w="22"/><text x="72.7169%" y="367.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81476b044 (32 samples, 0.02%)</title><rect x="72.4833%" y="357" width="0.0175%" height="15" fill="rgb(236,182,39)" fg:x="132593" fg:w="32"/><text x="72.7333%" y="367.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81476b051 (33 samples, 0.02%)</title><rect x="72.5035%" y="357" width="0.0180%" height="15" fill="rgb(212,144,35)" fg:x="132630" fg:w="33"/><text x="72.7535%" y="367.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81476b067 (23 samples, 0.01%)</title><rect x="72.5391%" y="357" width="0.0126%" height="15" fill="rgb(228,63,44)" fg:x="132695" fg:w="23"/><text x="72.7891%" y="367.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81476b078 (31 samples, 0.02%)</title><rect x="72.5549%" y="357" width="0.0169%" height="15" fill="rgb(228,109,6)" fg:x="132724" fg:w="31"/><text x="72.8049%" y="367.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81476b082 (37 samples, 0.02%)</title><rect x="72.5730%" y="357" width="0.0202%" height="15" fill="rgb(238,117,24)" fg:x="132757" fg:w="37"/><text x="72.8230%" y="367.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81476b087 (26 samples, 0.01%)</title><rect x="72.5937%" y="357" width="0.0142%" height="15" fill="rgb(242,26,26)" fg:x="132795" fg:w="26"/><text x="72.8437%" y="367.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81476b099 (24 samples, 0.01%)</title><rect x="72.6249%" y="357" width="0.0131%" height="15" fill="rgb(221,92,48)" fg:x="132852" fg:w="24"/><text x="72.8749%" y="367.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81476b09f (28 samples, 0.02%)</title><rect x="72.6408%" y="357" width="0.0153%" height="15" fill="rgb(209,209,32)" fg:x="132881" fg:w="28"/><text x="72.8908%" y="367.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81476b0ab (21 samples, 0.01%)</title><rect x="72.6615%" y="357" width="0.0115%" height="15" fill="rgb(221,70,22)" fg:x="132919" fg:w="21"/><text x="72.9115%" y="367.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81477a7bf (29 samples, 0.02%)</title><rect x="72.6982%" y="357" width="0.0159%" height="15" fill="rgb(248,145,5)" fg:x="132986" fg:w="29"/><text x="72.9482%" y="367.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81477a7c5 (32 samples, 0.02%)</title><rect x="72.7140%" y="357" width="0.0175%" height="15" fill="rgb(226,116,26)" fg:x="133015" fg:w="32"/><text x="72.9640%" y="367.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81477a7f5 (38 samples, 0.02%)</title><rect x="72.7315%" y="357" width="0.0208%" height="15" fill="rgb(244,5,17)" fg:x="133047" fg:w="38"/><text x="72.9815%" y="367.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81477a80f (22 samples, 0.01%)</title><rect x="72.7555%" y="357" width="0.0120%" height="15" fill="rgb(252,159,33)" fg:x="133091" fg:w="22"/><text x="73.0055%" y="367.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81477a820 (28 samples, 0.02%)</title><rect x="72.7687%" y="357" width="0.0153%" height="15" fill="rgb(206,71,0)" fg:x="133115" fg:w="28"/><text x="73.0187%" y="367.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81477a834 (26 samples, 0.01%)</title><rect x="72.7856%" y="357" width="0.0142%" height="15" fill="rgb(233,118,54)" fg:x="133146" fg:w="26"/><text x="73.0356%" y="367.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81477a83d (37 samples, 0.02%)</title><rect x="72.8004%" y="357" width="0.0202%" height="15" fill="rgb(234,83,48)" fg:x="133173" fg:w="37"/><text x="73.0504%" y="367.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81477a844 (24 samples, 0.01%)</title><rect x="72.8206%" y="357" width="0.0131%" height="15" fill="rgb(228,3,54)" fg:x="133210" fg:w="24"/><text x="73.0706%" y="367.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81477a849 (33 samples, 0.02%)</title><rect x="72.8337%" y="357" width="0.0180%" height="15" fill="rgb(226,155,13)" fg:x="133234" fg:w="33"/><text x="73.0837%" y="367.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81477a875 (33 samples, 0.02%)</title><rect x="72.8523%" y="357" width="0.0180%" height="15" fill="rgb(241,28,37)" fg:x="133268" fg:w="33"/><text x="73.1023%" y="367.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81477a9dc (21 samples, 0.01%)</title><rect x="72.8714%" y="357" width="0.0115%" height="15" fill="rgb(233,93,10)" fg:x="133303" fg:w="21"/><text x="73.1214%" y="367.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81477a9e4 (24 samples, 0.01%)</title><rect x="72.8857%" y="357" width="0.0131%" height="15" fill="rgb(225,113,19)" fg:x="133329" fg:w="24"/><text x="73.1357%" y="367.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff8147806fe (22 samples, 0.01%)</title><rect x="72.9010%" y="357" width="0.0120%" height="15" fill="rgb(241,2,18)" fg:x="133357" fg:w="22"/><text x="73.1510%" y="367.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff814780705 (32 samples, 0.02%)</title><rect x="72.9141%" y="357" width="0.0175%" height="15" fill="rgb(228,207,21)" fg:x="133381" fg:w="32"/><text x="73.1641%" y="367.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81478070f (27 samples, 0.01%)</title><rect x="72.9321%" y="357" width="0.0148%" height="15" fill="rgb(213,211,35)" fg:x="133414" fg:w="27"/><text x="73.1821%" y="367.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81478072f (30 samples, 0.02%)</title><rect x="72.9474%" y="357" width="0.0164%" height="15" fill="rgb(209,83,10)" fg:x="133442" fg:w="30"/><text x="73.1974%" y="367.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff8147808a9 (41 samples, 0.02%)</title><rect x="72.9649%" y="357" width="0.0224%" height="15" fill="rgb(209,164,1)" fg:x="133474" fg:w="41"/><text x="73.2149%" y="367.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff8147808b6 (29 samples, 0.02%)</title><rect x="72.9873%" y="357" width="0.0159%" height="15" fill="rgb(213,184,43)" fg:x="133515" fg:w="29"/><text x="73.2373%" y="367.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff8147808bd (26 samples, 0.01%)</title><rect x="73.0032%" y="357" width="0.0142%" height="15" fill="rgb(231,61,34)" fg:x="133544" fg:w="26"/><text x="73.2532%" y="367.50"></text></g><g><title>libsystem_platform.dylib`DYLD-STUB$$_platform_memmove (66 samples, 0.04%)</title><rect x="73.0283%" y="357" width="0.0361%" height="15" fill="rgb(235,75,3)" fg:x="133590" fg:w="66"/><text x="73.2783%" y="367.50"></text></g><g><title>libsystem_platform.dylib`DYLD-STUB$$_platform_memset (48 samples, 0.03%)</title><rect x="73.0644%" y="357" width="0.0262%" height="15" fill="rgb(220,106,47)" fg:x="133656" fg:w="48"/><text x="73.3144%" y="367.50"></text></g><g><title>libsystem_platform.dylib`_os_unfair_lock_unlock_slow (62 samples, 0.03%)</title><rect x="73.0961%" y="357" width="0.0339%" height="15" fill="rgb(210,196,33)" fg:x="133714" fg:w="62"/><text x="73.3461%" y="367.50"></text></g><g><title>libsystem_platform.dylib`_platform_bzero$VARIANT$Haswell (33 samples, 0.02%)</title><rect x="73.1300%" y="357" width="0.0180%" height="15" fill="rgb(229,154,42)" fg:x="133776" fg:w="33"/><text x="73.3800%" y="367.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (518 samples, 0.28%)</title><rect x="73.1481%" y="357" width="0.2832%" height="15" fill="rgb(228,114,26)" fg:x="133809" fg:w="518"/><text x="73.3981%" y="367.50"></text></g><g><title>libsystem_platform.dylib`_platform_memset$VARIANT$Haswell (31 samples, 0.02%)</title><rect x="73.4312%" y="357" width="0.0169%" height="15" fill="rgb(208,144,1)" fg:x="134327" fg:w="31"/><text x="73.6812%" y="367.50"></text></g><g><title>libsystem_platform.dylib`os_unfair_lock_lock_with_options (96 samples, 0.05%)</title><rect x="73.4482%" y="357" width="0.0525%" height="15" fill="rgb(239,112,37)" fg:x="134358" fg:w="96"/><text x="73.6982%" y="367.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (1,333 samples, 0.73%)</title><rect x="74.7487%" y="341" width="0.7287%" height="15" fill="rgb(210,96,50)" fg:x="136737" fg:w="1333"/><text x="74.9987%" y="351.50"></text></g><g><title>simple_producer`&lt;kafkas::producer::SendFuture as core::future::future::Future&gt;::poll (3,618 samples, 1.98%)</title><rect x="73.5006%" y="357" width="1.9778%" height="15" fill="rgb(222,178,2)" fg:x="134454" fg:w="3618"/><text x="73.7506%" y="367.50">s..</text></g><g><title>simple_producer`DYLD-STUB$$memcpy (27 samples, 0.01%)</title><rect x="75.4785%" y="357" width="0.0148%" height="15" fill="rgb(226,74,18)" fg:x="138072" fg:w="27"/><text x="75.7285%" y="367.50"></text></g><g><title>simple_producer`alloc::sync::Arc&lt;T&gt;::drop_slow (759 samples, 0.41%)</title><rect x="75.4932%" y="357" width="0.4149%" height="15" fill="rgb(225,67,54)" fg:x="138099" fg:w="759"/><text x="75.7432%" y="367.50"></text></g><g><title>simple_producer`futures_channel::mpsc::queue::Queue&lt;T&gt;::pop_spin (30 samples, 0.02%)</title><rect x="75.9081%" y="357" width="0.0164%" height="15" fill="rgb(251,92,32)" fg:x="138858" fg:w="30"/><text x="76.1581%" y="367.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff814766e2b (40 samples, 0.02%)</title><rect x="76.4832%" y="341" width="0.0219%" height="15" fill="rgb(228,149,22)" fg:x="139910" fg:w="40"/><text x="76.7332%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff814766e3a (33 samples, 0.02%)</title><rect x="76.5067%" y="341" width="0.0180%" height="15" fill="rgb(243,54,13)" fg:x="139953" fg:w="33"/><text x="76.7567%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff814766e45 (24 samples, 0.01%)</title><rect x="76.5253%" y="341" width="0.0131%" height="15" fill="rgb(243,180,28)" fg:x="139987" fg:w="24"/><text x="76.7753%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff814766e57 (32 samples, 0.02%)</title><rect x="76.5390%" y="341" width="0.0175%" height="15" fill="rgb(208,167,24)" fg:x="140012" fg:w="32"/><text x="76.7890%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff814766e60 (26 samples, 0.01%)</title><rect x="76.5570%" y="341" width="0.0142%" height="15" fill="rgb(245,73,45)" fg:x="140045" fg:w="26"/><text x="76.8070%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff814766e70 (55 samples, 0.03%)</title><rect x="76.5794%" y="341" width="0.0301%" height="15" fill="rgb(237,203,48)" fg:x="140086" fg:w="55"/><text x="76.8294%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff8147806f8 (37 samples, 0.02%)</title><rect x="76.6144%" y="341" width="0.0202%" height="15" fill="rgb(211,197,16)" fg:x="140150" fg:w="37"/><text x="76.8644%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff814780a48 (36 samples, 0.02%)</title><rect x="76.6439%" y="341" width="0.0197%" height="15" fill="rgb(243,99,51)" fg:x="140204" fg:w="36"/><text x="76.8939%" y="351.50"></text></g><g><title>simple_producer`__rdl_dealloc (58 samples, 0.03%)</title><rect x="76.6653%" y="341" width="0.0317%" height="15" fill="rgb(215,123,29)" fg:x="140243" fg:w="58"/><text x="76.9153%" y="351.50"></text></g><g><title>simple_producer`__rust_dealloc (21 samples, 0.01%)</title><rect x="76.6970%" y="341" width="0.0115%" height="15" fill="rgb(239,186,37)" fg:x="140301" fg:w="21"/><text x="76.9470%" y="351.50"></text></g><g><title>libsystem_kernel.dylib`madvise (178 samples, 0.10%)</title><rect x="77.5208%" y="293" width="0.0973%" height="15" fill="rgb(252,136,39)" fg:x="141808" fg:w="178"/><text x="77.7708%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff814780dbf (183 samples, 0.10%)</title><rect x="77.5208%" y="309" width="0.1000%" height="15" fill="rgb(223,213,32)" fg:x="141808" fg:w="183"/><text x="77.7708%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff8147700c9 (188 samples, 0.10%)</title><rect x="77.5208%" y="325" width="0.1028%" height="15" fill="rgb(233,115,5)" fg:x="141808" fg:w="188"/><text x="77.7708%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff8147806fe (33 samples, 0.02%)</title><rect x="77.6236%" y="325" width="0.0180%" height="15" fill="rgb(207,226,44)" fg:x="141996" fg:w="33"/><text x="77.8736%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff814780705 (24 samples, 0.01%)</title><rect x="77.6416%" y="325" width="0.0131%" height="15" fill="rgb(208,126,0)" fg:x="142029" fg:w="24"/><text x="77.8916%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81478070f (35 samples, 0.02%)</title><rect x="77.6547%" y="325" width="0.0191%" height="15" fill="rgb(244,66,21)" fg:x="142053" fg:w="35"/><text x="77.9047%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81478072f (26 samples, 0.01%)</title><rect x="77.6744%" y="325" width="0.0142%" height="15" fill="rgb(222,97,12)" fg:x="142089" fg:w="26"/><text x="77.9244%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81478074f (29 samples, 0.02%)</title><rect x="77.6985%" y="325" width="0.0159%" height="15" fill="rgb(219,213,19)" fg:x="142133" fg:w="29"/><text x="77.9485%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff8147807e0 (28 samples, 0.02%)</title><rect x="77.7154%" y="325" width="0.0153%" height="15" fill="rgb(252,169,30)" fg:x="142164" fg:w="28"/><text x="77.9654%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff8147807f2 (30 samples, 0.02%)</title><rect x="77.7323%" y="325" width="0.0164%" height="15" fill="rgb(206,32,51)" fg:x="142195" fg:w="30"/><text x="77.9823%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff814780816 (39 samples, 0.02%)</title><rect x="77.7651%" y="325" width="0.0213%" height="15" fill="rgb(250,172,42)" fg:x="142255" fg:w="39"/><text x="78.0151%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff814780826 (22 samples, 0.01%)</title><rect x="77.7908%" y="325" width="0.0120%" height="15" fill="rgb(209,34,43)" fg:x="142302" fg:w="22"/><text x="78.0408%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81478082d (166 samples, 0.09%)</title><rect x="77.8034%" y="325" width="0.0907%" height="15" fill="rgb(223,11,35)" fg:x="142325" fg:w="166"/><text x="78.0534%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff814780835 (34 samples, 0.02%)</title><rect x="77.8963%" y="325" width="0.0186%" height="15" fill="rgb(251,219,26)" fg:x="142495" fg:w="34"/><text x="78.1463%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff814780851 (34 samples, 0.02%)</title><rect x="77.9248%" y="325" width="0.0186%" height="15" fill="rgb(231,119,3)" fg:x="142547" fg:w="34"/><text x="78.1748%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81478086d (32 samples, 0.02%)</title><rect x="77.9483%" y="325" width="0.0175%" height="15" fill="rgb(216,97,11)" fg:x="142590" fg:w="32"/><text x="78.1983%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff814780891 (453 samples, 0.25%)</title><rect x="77.9975%" y="325" width="0.2476%" height="15" fill="rgb(223,59,9)" fg:x="142680" fg:w="453"/><text x="78.2475%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff814780912 (39 samples, 0.02%)</title><rect x="78.2932%" y="325" width="0.0213%" height="15" fill="rgb(233,93,31)" fg:x="143221" fg:w="39"/><text x="78.5432%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff814780939 (20 samples, 0.01%)</title><rect x="78.3435%" y="325" width="0.0109%" height="15" fill="rgb(239,81,33)" fg:x="143313" fg:w="20"/><text x="78.5935%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81478099e (223 samples, 0.12%)</title><rect x="78.4086%" y="325" width="0.1219%" height="15" fill="rgb(213,120,34)" fg:x="143432" fg:w="223"/><text x="78.6586%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff8147809b7 (1,302 samples, 0.71%)</title><rect x="78.5594%" y="325" width="0.7118%" height="15" fill="rgb(243,49,53)" fg:x="143708" fg:w="1302"/><text x="78.8094%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff8147809fa (25 samples, 0.01%)</title><rect x="79.2788%" y="325" width="0.0137%" height="15" fill="rgb(247,216,33)" fg:x="145024" fg:w="25"/><text x="79.5288%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff814780a3d (21 samples, 0.01%)</title><rect x="79.3100%" y="325" width="0.0115%" height="15" fill="rgb(226,26,14)" fg:x="145081" fg:w="21"/><text x="79.5600%" y="335.50"></text></g><g><title>simple_producer`futures_util::stream::stream::StreamExt::poll_next_unpin (6,243 samples, 3.41%)</title><rect x="75.9245%" y="357" width="3.4128%" height="15" fill="rgb(215,49,53)" fg:x="138888" fg:w="6243"/><text x="76.1745%" y="367.50">sim..</text></g><g><title>simple_producer`futures_channel::mpsc::queue::Queue&lt;T&gt;::pop_spin (4,809 samples, 2.63%)</title><rect x="76.7084%" y="341" width="2.6289%" height="15" fill="rgb(245,162,40)" fg:x="140322" fg:w="4809"/><text x="76.9584%" y="351.50">si..</text></g><g><title>simple_producer`&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (33,804 samples, 18.48%)</title><rect x="60.8591%" y="373" width="18.4793%" height="15" fill="rgb(229,68,17)" fg:x="111329" fg:w="33804"/><text x="61.1091%" y="383.50">simple_producer`&lt;core::pin::P..</text></g><g><title>libsystem_malloc.dylib`0x7ff814780dbf (21 samples, 0.01%)</title><rect x="79.3931%" y="293" width="0.0115%" height="15" fill="rgb(213,182,10)" fg:x="145233" fg:w="21"/><text x="79.6431%" y="303.50"></text></g><g><title>libsystem_kernel.dylib`madvise (21 samples, 0.01%)</title><rect x="79.3931%" y="277" width="0.0115%" height="15" fill="rgb(245,125,30)" fg:x="145233" fg:w="21"/><text x="79.6431%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff8147700c9 (22 samples, 0.01%)</title><rect x="79.3931%" y="309" width="0.0120%" height="15" fill="rgb(232,202,2)" fg:x="145233" fg:w="22"/><text x="79.6431%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff814780901 (131 samples, 0.07%)</title><rect x="79.4079%" y="309" width="0.0716%" height="15" fill="rgb(237,140,51)" fg:x="145260" fg:w="131"/><text x="79.6579%" y="319.50"></text></g><g><title>libsystem_platform.dylib`_platform_bzero$VARIANT$Haswell (131 samples, 0.07%)</title><rect x="79.4079%" y="293" width="0.0716%" height="15" fill="rgb(236,157,25)" fg:x="145260" fg:w="131"/><text x="79.6579%" y="303.50"></text></g><g><title>simple_producer`futures_channel::mpsc::queue::Queue&lt;T&gt;::pop_spin (194 samples, 0.11%)</title><rect x="79.3800%" y="325" width="0.1061%" height="15" fill="rgb(219,209,0)" fg:x="145209" fg:w="194"/><text x="79.6300%" y="335.50"></text></g><g><title>simple_producer`&lt;futures_channel::mpsc::UnboundedReceiver&lt;T&gt; as futures_core::stream::Stream&gt;::poll_next (232 samples, 0.13%)</title><rect x="79.3641%" y="341" width="0.1268%" height="15" fill="rgb(240,116,54)" fg:x="145180" fg:w="232"/><text x="79.6141%" y="351.50"></text></g><g><title>simple_producer`&lt;futures_channel::oneshot::Receiver&lt;T&gt; as core::future::future::Future&gt;::poll (35 samples, 0.02%)</title><rect x="79.4910%" y="341" width="0.0191%" height="15" fill="rgb(216,10,36)" fg:x="145412" fg:w="35"/><text x="79.7410%" y="351.50"></text></g><g><title>simple_producer`&lt;tokio_util::codec::length_delimited::LengthDelimitedCodec as tokio_util::codec::decoder::Decoder&gt;::decode (23 samples, 0.01%)</title><rect x="79.5609%" y="293" width="0.0126%" height="15" fill="rgb(222,72,44)" fg:x="145540" fg:w="23"/><text x="79.8109%" y="303.50"></text></g><g><title>simple_producer`&lt;bytes::bytes_mut::BytesMut as kafka_protocol::protocol::buf::ByteBuf&gt;::peek_bytes (50 samples, 0.03%)</title><rect x="79.6079%" y="277" width="0.0273%" height="15" fill="rgb(232,159,9)" fg:x="145626" fg:w="50"/><text x="79.8579%" y="287.50"></text></g><g><title>simple_producer`bytes::bytes::Bytes::copy_from_slice (23 samples, 0.01%)</title><rect x="79.6227%" y="261" width="0.0126%" height="15" fill="rgb(210,39,32)" fg:x="145653" fg:w="23"/><text x="79.8727%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff814767669 (31 samples, 0.02%)</title><rect x="79.6746%" y="197" width="0.0169%" height="15" fill="rgb(216,194,45)" fg:x="145748" fg:w="31"/><text x="79.9246%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81476748f (46 samples, 0.03%)</title><rect x="79.6681%" y="213" width="0.0251%" height="15" fill="rgb(218,18,35)" fg:x="145736" fg:w="46"/><text x="79.9181%" y="223.50"></text></g><g><title>simple_producer`&lt;kafka_protocol::messages::produce_response::PartitionProduceResponse as kafka_protocol::protocol::Decodable&gt;::decode (77 samples, 0.04%)</title><rect x="79.6998%" y="213" width="0.0421%" height="15" fill="rgb(207,83,51)" fg:x="145794" fg:w="77"/><text x="79.9498%" y="223.50"></text></g><g><title>simple_producer`bytes::bytes_mut::BytesMut::set_start (22 samples, 0.01%)</title><rect x="79.7298%" y="197" width="0.0120%" height="15" fill="rgb(225,63,43)" fg:x="145849" fg:w="22"/><text x="79.9798%" y="207.50"></text></g><g><title>simple_producer`&lt;kafka_protocol::protocol::types::CompactArray&lt;E&gt; as kafka_protocol::protocol::Decoder&lt;alloc::vec::Vec&lt;T&gt;&gt;&gt;::decode (164 samples, 0.09%)</title><rect x="79.6560%" y="229" width="0.0897%" height="15" fill="rgb(207,57,36)" fg:x="145714" fg:w="164"/><text x="79.9060%" y="239.50"></text></g><g><title>simple_producer`&lt;kafka_protocol::protocol::types::CompactString as kafka_protocol::protocol::Decoder&lt;T&gt;&gt;::decode (20 samples, 0.01%)</title><rect x="79.7457%" y="229" width="0.0109%" height="15" fill="rgb(216,99,33)" fg:x="145878" fg:w="20"/><text x="79.9957%" y="239.50"></text></g><g><title>simple_producer`&lt;kafka_protocol::messages::produce_response::TopicProduceResponse as kafka_protocol::protocol::MapDecodable&gt;::decode (203 samples, 0.11%)</title><rect x="79.6489%" y="245" width="0.1110%" height="15" fill="rgb(225,42,16)" fg:x="145701" fg:w="203"/><text x="79.8989%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff8147687de (20 samples, 0.01%)</title><rect x="79.7889%" y="181" width="0.0109%" height="15" fill="rgb(220,201,45)" fg:x="145957" fg:w="20"/><text x="80.0389%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff814767464 (32 samples, 0.02%)</title><rect x="79.7845%" y="197" width="0.0175%" height="15" fill="rgb(225,33,4)" fg:x="145949" fg:w="32"/><text x="80.0345%" y="207.50"></text></g><g><title>simple_producer`alloc::raw_vec::finish_grow (37 samples, 0.02%)</title><rect x="79.7834%" y="213" width="0.0202%" height="15" fill="rgb(224,33,50)" fg:x="145947" fg:w="37"/><text x="80.0334%" y="223.50"></text></g><g><title>simple_producer`hashbrown::raw::inner::RawTable&lt;T,A&gt;::insert (31 samples, 0.02%)</title><rect x="79.8036%" y="213" width="0.0169%" height="15" fill="rgb(246,198,51)" fg:x="145984" fg:w="31"/><text x="80.0536%" y="223.50"></text></g><g><title>simple_producer`hashbrown::raw::inner::RawTable&lt;T,A&gt;::reserve_rehash (27 samples, 0.01%)</title><rect x="79.8058%" y="197" width="0.0148%" height="15" fill="rgb(205,22,4)" fg:x="145988" fg:w="27"/><text x="80.0558%" y="207.50"></text></g><g><title>simple_producer`indexmap::map::IndexMap&lt;K,V,S&gt;::insert (109 samples, 0.06%)</title><rect x="79.7643%" y="245" width="0.0596%" height="15" fill="rgb(206,3,8)" fg:x="145912" fg:w="109"/><text x="80.0143%" y="255.50"></text></g><g><title>simple_producer`indexmap::map::core::IndexMapCore&lt;K,V&gt;::insert_full (91 samples, 0.05%)</title><rect x="79.7741%" y="229" width="0.0497%" height="15" fill="rgb(251,23,15)" fg:x="145930" fg:w="91"/><text x="80.0241%" y="239.50"></text></g><g><title>simple_producer`&lt;kafka_protocol::protocol::types::CompactArray&lt;E&gt; as kafka_protocol::protocol::Decoder&lt;indexmap::map::IndexMap&lt;K,V&gt;&gt;&gt;::decode (330 samples, 0.18%)</title><rect x="79.6462%" y="261" width="0.1804%" height="15" fill="rgb(252,88,28)" fg:x="145696" fg:w="330"/><text x="79.8962%" y="271.50"></text></g><g><title>simple_producer`&lt;kafka_protocol::messages::produce_response::ProduceResponse as kafka_protocol::protocol::Decodable&gt;::decode (353 samples, 0.19%)</title><rect x="79.6375%" y="277" width="0.1930%" height="15" fill="rgb(212,127,14)" fg:x="145680" fg:w="353"/><text x="79.8875%" y="287.50"></text></g><g><title>simple_producer`core::hash::BuildHasher::hash_one (141 samples, 0.08%)</title><rect x="79.8441%" y="277" width="0.0771%" height="15" fill="rgb(247,145,37)" fg:x="146058" fg:w="141"/><text x="80.0941%" y="287.50"></text></g><g><title>simple_producer`&lt;kafkas::protocol::KafkaCodec as tokio_util::codec::decoder::Decoder&gt;::decode (706 samples, 0.39%)</title><rect x="79.5401%" y="309" width="0.3859%" height="15" fill="rgb(209,117,53)" fg:x="145502" fg:w="706"/><text x="79.7901%" y="319.50"></text></g><g><title>simple_producer`kafkas::protocol::KafkaCodec::decode_response (625 samples, 0.34%)</title><rect x="79.5844%" y="293" width="0.3417%" height="15" fill="rgb(212,90,42)" fg:x="145583" fg:w="625"/><text x="79.8344%" y="303.50"></text></g><g><title>libsystem_kernel.dylib`__recvfrom (985 samples, 0.54%)</title><rect x="79.9780%" y="261" width="0.5385%" height="15" fill="rgb(218,164,37)" fg:x="146303" fg:w="985"/><text x="80.2280%" y="271.50"></text></g><g><title>simple_producer`&lt;&amp;mio::net::tcp::stream::TcpStream as std::io::Read&gt;::read (1,012 samples, 0.55%)</title><rect x="79.9671%" y="277" width="0.5532%" height="15" fill="rgb(246,65,34)" fg:x="146283" fg:w="1012"/><text x="80.2171%" y="287.50"></text></g><g><title>simple_producer`tokio::runtime::io::registration::Registration::poll_ready (29 samples, 0.02%)</title><rect x="80.5214%" y="277" width="0.0159%" height="15" fill="rgb(231,100,33)" fg:x="147297" fg:w="29"/><text x="80.7714%" y="287.50"></text></g><g><title>simple_producer`tokio::io::poll_evented::PollEvented&lt;E&gt;::poll_read (1,061 samples, 0.58%)</title><rect x="79.9578%" y="293" width="0.5800%" height="15" fill="rgb(228,126,14)" fg:x="146266" fg:w="1061"/><text x="80.2078%" y="303.50"></text></g><g><title>simple_producer`&lt;tokio_util::codec::framed_impl::FramedImpl&lt;T,U,R&gt; as futures_core::stream::Stream&gt;::poll_next (1,862 samples, 1.02%)</title><rect x="79.5216%" y="325" width="1.0179%" height="15" fill="rgb(215,173,21)" fg:x="145468" fg:w="1862"/><text x="79.7716%" y="335.50"></text></g><g><title>simple_producer`tokio_util::util::poll_read_buf (1,086 samples, 0.59%)</title><rect x="79.9458%" y="309" width="0.5937%" height="15" fill="rgb(210,6,40)" fg:x="146244" fg:w="1086"/><text x="80.1958%" y="319.50"></text></g><g><title>simple_producer`futures_util::lock::bilock::BiLock&lt;T&gt;::poll_lock (37 samples, 0.02%)</title><rect x="80.5466%" y="325" width="0.0202%" height="15" fill="rgb(212,48,18)" fg:x="147343" fg:w="37"/><text x="80.7966%" y="335.50"></text></g><g><title>simple_producer`&lt;futures_util::stream::stream::split::SplitStream&lt;S&gt; as futures_core::stream::Stream&gt;::poll_next (1,940 samples, 1.06%)</title><rect x="79.5101%" y="341" width="1.0605%" height="15" fill="rgb(230,214,11)" fg:x="145447" fg:w="1940"/><text x="79.7601%" y="351.50"></text></g><g><title>simple_producer`futures_channel::oneshot::Sender&lt;T&gt;::send (41 samples, 0.02%)</title><rect x="80.5936%" y="341" width="0.0224%" height="15" fill="rgb(254,105,39)" fg:x="147429" fg:w="41"/><text x="80.8436%" y="351.50"></text></g><g><title>simple_producer`&lt;kafkas::connection::Receiver&lt;S&gt; as core::future::future::Future&gt;::poll (2,335 samples, 1.28%)</title><rect x="79.3494%" y="357" width="1.2765%" height="15" fill="rgb(245,158,5)" fg:x="145153" fg:w="2335"/><text x="79.5994%" y="367.50"></text></g><g><title>simple_producer`&lt;futures_util::future::future::map::Map&lt;Fut,F&gt; as core::future::future::Future&gt;::poll (2,363 samples, 1.29%)</title><rect x="79.3390%" y="373" width="1.2918%" height="15" fill="rgb(249,208,11)" fg:x="145134" fg:w="2363"/><text x="79.5890%" y="383.50"></text></g><g><title>simple_producer`&lt;tokio::runtime::task::core::TaskIdGuard as core::ops::drop::Drop&gt;::drop (127 samples, 0.07%)</title><rect x="80.6373%" y="373" width="0.0694%" height="15" fill="rgb(210,39,28)" fg:x="147509" fg:w="127"/><text x="80.8873%" y="383.50"></text></g><g><title>simple_producer`DYLD-STUB$$memcpy (40 samples, 0.02%)</title><rect x="80.7073%" y="373" width="0.0219%" height="15" fill="rgb(211,56,53)" fg:x="147637" fg:w="40"/><text x="80.9573%" y="383.50"></text></g><g><title>simple_producer`__rdl_dealloc (52 samples, 0.03%)</title><rect x="80.7291%" y="373" width="0.0284%" height="15" fill="rgb(226,201,30)" fg:x="147677" fg:w="52"/><text x="80.9791%" y="383.50"></text></g><g><title>simple_producer`alloc::sync::Arc&lt;T&gt;::drop_slow (55 samples, 0.03%)</title><rect x="80.7576%" y="373" width="0.0301%" height="15" fill="rgb(239,101,34)" fg:x="147729" fg:w="55"/><text x="81.0076%" y="383.50"></text></g><g><title>simple_producer`futures_util::stream::stream::StreamExt::poll_next_unpin (36 samples, 0.02%)</title><rect x="80.7904%" y="373" width="0.0197%" height="15" fill="rgb(226,209,5)" fg:x="147789" fg:w="36"/><text x="81.0404%" y="383.50"></text></g><g><title>libsystem_kernel.dylib`madvise (24 samples, 0.01%)</title><rect x="80.8663%" y="293" width="0.0131%" height="15" fill="rgb(250,105,47)" fg:x="147928" fg:w="24"/><text x="81.1163%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81477aa5f (64 samples, 0.03%)</title><rect x="80.8663%" y="309" width="0.0350%" height="15" fill="rgb(230,72,3)" fg:x="147928" fg:w="64"/><text x="81.1163%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff8147717a3 (38 samples, 0.02%)</title><rect x="80.8806%" y="293" width="0.0208%" height="15" fill="rgb(232,218,39)" fg:x="147954" fg:w="38"/><text x="81.1306%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff814772ce7 (38 samples, 0.02%)</title><rect x="80.8806%" y="277" width="0.0208%" height="15" fill="rgb(248,166,6)" fg:x="147954" fg:w="38"/><text x="81.1306%" y="287.50"></text></g><g><title>libsystem_kernel.dylib`_kernelrpc_mach_vm_deallocate_trap (38 samples, 0.02%)</title><rect x="80.8806%" y="261" width="0.0208%" height="15" fill="rgb(247,89,20)" fg:x="147954" fg:w="38"/><text x="81.1306%" y="271.50"></text></g><g><title>simple_producer`&lt;bytes::bytes_mut::BytesMut as core::ops::drop::Drop&gt;::drop (78 samples, 0.04%)</title><rect x="80.8598%" y="325" width="0.0426%" height="15" fill="rgb(248,130,54)" fg:x="147916" fg:w="78"/><text x="81.1098%" y="335.50"></text></g><g><title>simple_producer`&lt;bytes::bytes_mut::BytesMut as kafka_protocol::protocol::buf::ByteBuf&gt;::get_bytes (29 samples, 0.02%)</title><rect x="80.9024%" y="325" width="0.0159%" height="15" fill="rgb(234,196,4)" fg:x="147994" fg:w="29"/><text x="81.1524%" y="335.50"></text></g><g><title>simple_producer`bytes::bytes_mut::BytesMut::split_to (24 samples, 0.01%)</title><rect x="80.9052%" y="309" width="0.0131%" height="15" fill="rgb(250,143,31)" fg:x="147999" fg:w="24"/><text x="81.1552%" y="319.50"></text></g><g><title>simple_producer`bytes::bytes_mut::BytesMut::extend_from_slice (267 samples, 0.15%)</title><rect x="80.9221%" y="309" width="0.1460%" height="15" fill="rgb(211,110,34)" fg:x="148030" fg:w="267"/><text x="81.1721%" y="319.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (267 samples, 0.15%)</title><rect x="80.9221%" y="293" width="0.1460%" height="15" fill="rgb(215,124,48)" fg:x="148030" fg:w="267"/><text x="81.1721%" y="303.50"></text></g><g><title>simple_producer`&lt;tokio_util::codec::length_delimited::LengthDelimitedCodec as tokio_util::codec::encoder::Encoder&lt;bytes::bytes::Bytes&gt;&gt;::encode (283 samples, 0.15%)</title><rect x="80.9183%" y="325" width="0.1547%" height="15" fill="rgb(216,46,13)" fg:x="148023" fg:w="283"/><text x="81.1683%" y="335.50"></text></g><g><title>simple_producer`&lt;bytes::bytes_mut::BytesMut as bytes::buf::buf_mut::BufMut&gt;::put_slice (20 samples, 0.01%)</title><rect x="81.1216%" y="229" width="0.0109%" height="15" fill="rgb(205,184,25)" fg:x="148395" fg:w="20"/><text x="81.3716%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81476a7a6 (77 samples, 0.04%)</title><rect x="81.1708%" y="117" width="0.0421%" height="15" fill="rgb(228,1,10)" fg:x="148485" fg:w="77"/><text x="81.4208%" y="127.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (77 samples, 0.04%)</title><rect x="81.1708%" y="101" width="0.0421%" height="15" fill="rgb(213,116,27)" fg:x="148485" fg:w="77"/><text x="81.4208%" y="111.50"></text></g><g><title>simple_producer`&lt;bytes::bytes_mut::BytesMut as bytes::buf::buf_mut::BufMut&gt;::put_slice (150 samples, 0.08%)</title><rect x="81.1402%" y="213" width="0.0820%" height="15" fill="rgb(241,95,50)" fg:x="148429" fg:w="150"/><text x="81.3902%" y="223.50"></text></g><g><title>simple_producer`bytes::bytes_mut::BytesMut::reserve_inner (129 samples, 0.07%)</title><rect x="81.1517%" y="197" width="0.0705%" height="15" fill="rgb(238,48,32)" fg:x="148450" fg:w="129"/><text x="81.4017%" y="207.50"></text></g><g><title>simple_producer`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (128 samples, 0.07%)</title><rect x="81.1523%" y="181" width="0.0700%" height="15" fill="rgb(235,113,49)" fg:x="148451" fg:w="128"/><text x="81.4023%" y="191.50"></text></g><g><title>simple_producer`alloc::raw_vec::finish_grow (126 samples, 0.07%)</title><rect x="81.1533%" y="165" width="0.0689%" height="15" fill="rgb(205,127,43)" fg:x="148453" fg:w="126"/><text x="81.4033%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff814768235 (121 samples, 0.07%)</title><rect x="81.1561%" y="149" width="0.0661%" height="15" fill="rgb(250,162,2)" fg:x="148458" fg:w="121"/><text x="81.4061%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff814769698 (121 samples, 0.07%)</title><rect x="81.1561%" y="133" width="0.0661%" height="15" fill="rgb(220,13,41)" fg:x="148458" fg:w="121"/><text x="81.4061%" y="143.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (608 samples, 0.33%)</title><rect x="81.2397%" y="181" width="0.3324%" height="15" fill="rgb(249,221,25)" fg:x="148611" fg:w="608"/><text x="81.4897%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff8147697a0 (19 samples, 0.01%)</title><rect x="81.5852%" y="101" width="0.0104%" height="15" fill="rgb(215,208,19)" fg:x="149243" fg:w="19"/><text x="81.8352%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81476a587 (21 samples, 0.01%)</title><rect x="81.6027%" y="101" width="0.0115%" height="15" fill="rgb(236,175,2)" fg:x="149275" fg:w="21"/><text x="81.8527%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81476a7a6 (560 samples, 0.31%)</title><rect x="81.6251%" y="101" width="0.3061%" height="15" fill="rgb(241,52,2)" fg:x="149316" fg:w="560"/><text x="81.8751%" y="111.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (560 samples, 0.31%)</title><rect x="81.6251%" y="85" width="0.3061%" height="15" fill="rgb(248,140,14)" fg:x="149316" fg:w="560"/><text x="81.8751%" y="95.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff8147717a3 (28 samples, 0.02%)</title><rect x="81.9400%" y="69" width="0.0153%" height="15" fill="rgb(253,22,42)" fg:x="149892" fg:w="28"/><text x="82.1900%" y="79.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff814772ce7 (28 samples, 0.02%)</title><rect x="81.9400%" y="53" width="0.0153%" height="15" fill="rgb(234,61,47)" fg:x="149892" fg:w="28"/><text x="82.1900%" y="63.50"></text></g><g><title>libsystem_kernel.dylib`_kernelrpc_mach_vm_deallocate_trap (28 samples, 0.02%)</title><rect x="81.9400%" y="37" width="0.0153%" height="15" fill="rgb(208,226,15)" fg:x="149892" fg:w="28"/><text x="82.1900%" y="47.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81476a7b3 (45 samples, 0.02%)</title><rect x="81.9312%" y="101" width="0.0246%" height="15" fill="rgb(217,221,4)" fg:x="149876" fg:w="45"/><text x="82.1812%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81477aa5f (42 samples, 0.02%)</title><rect x="81.9329%" y="85" width="0.0230%" height="15" fill="rgb(212,174,34)" fg:x="149879" fg:w="42"/><text x="82.1829%" y="95.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff814769698 (686 samples, 0.38%)</title><rect x="81.5825%" y="117" width="0.3750%" height="15" fill="rgb(253,83,4)" fg:x="149238" fg:w="686"/><text x="81.8325%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff814768235 (689 samples, 0.38%)</title><rect x="81.5825%" y="133" width="0.3766%" height="15" fill="rgb(250,195,49)" fg:x="149238" fg:w="689"/><text x="81.8325%" y="143.50"></text></g><g><title>simple_producer`&lt;bytes::bytes_mut::BytesMut as bytes::buf::buf_mut::BufMut&gt;::put_slice (1,331 samples, 0.73%)</title><rect x="81.2326%" y="197" width="0.7276%" height="15" fill="rgb(241,192,25)" fg:x="148598" fg:w="1331"/><text x="81.4826%" y="207.50"></text></g><g><title>simple_producer`bytes::bytes_mut::BytesMut::reserve_inner (709 samples, 0.39%)</title><rect x="81.5726%" y="181" width="0.3876%" height="15" fill="rgb(208,124,10)" fg:x="149220" fg:w="709"/><text x="81.8226%" y="191.50"></text></g><g><title>simple_producer`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (706 samples, 0.39%)</title><rect x="81.5743%" y="165" width="0.3859%" height="15" fill="rgb(222,33,0)" fg:x="149223" fg:w="706"/><text x="81.8243%" y="175.50"></text></g><g><title>simple_producer`alloc::raw_vec::finish_grow (704 samples, 0.38%)</title><rect x="81.5754%" y="149" width="0.3848%" height="15" fill="rgb(234,209,28)" fg:x="149225" fg:w="704"/><text x="81.8254%" y="159.50"></text></g><g><title>simple_producer`&lt;kafka_protocol::protocol::types::CompactBytes as kafka_protocol::protocol::Encoder&lt;core::option::Option&lt;&amp;bytes::bytes::Bytes&gt;&gt;&gt;::encode (1,352 samples, 0.74%)</title><rect x="81.2222%" y="213" width="0.7391%" height="15" fill="rgb(224,11,23)" fg:x="148579" fg:w="1352"/><text x="81.4722%" y="223.50"></text></g><g><title>simple_producer`&lt;kafka_protocol::messages::produce_request::PartitionProduceData as kafka_protocol::protocol::Encodable&gt;::encode (1,522 samples, 0.83%)</title><rect x="81.1326%" y="229" width="0.8320%" height="15" fill="rgb(232,99,1)" fg:x="148415" fg:w="1522"/><text x="81.3826%" y="239.50"></text></g><g><title>simple_producer`&lt;kafka_protocol::protocol::types::CompactArray&lt;E&gt; as kafka_protocol::protocol::Encoder&lt;&amp;alloc::vec::Vec&lt;T&gt;&gt;&gt;::encode (1,555 samples, 0.85%)</title><rect x="81.1178%" y="245" width="0.8501%" height="15" fill="rgb(237,95,45)" fg:x="148388" fg:w="1555"/><text x="81.3678%" y="255.50"></text></g><g><title>simple_producer`&lt;kafka_protocol::messages::produce_request::TopicProduceData as kafka_protocol::protocol::MapEncodable&gt;::encode (1,572 samples, 0.86%)</title><rect x="81.1140%" y="261" width="0.8593%" height="15" fill="rgb(208,109,11)" fg:x="148381" fg:w="1572"/><text x="81.3640%" y="271.50"></text></g><g><title>simple_producer`&lt;kafka_protocol::protocol::types::CompactArray&lt;E&gt; as kafka_protocol::protocol::Encoder&lt;&amp;indexmap::map::IndexMap&lt;K,V&gt;&gt;&gt;::encode (1,584 samples, 0.87%)</title><rect x="81.1096%" y="277" width="0.8659%" height="15" fill="rgb(216,190,48)" fg:x="148373" fg:w="1584"/><text x="81.3596%" y="287.50"></text></g><g><title>simple_producer`&lt;kafka_protocol::messages::produce_request::ProduceRequest as kafka_protocol::protocol::Encodable&gt;::encode (1,601 samples, 0.88%)</title><rect x="81.1025%" y="293" width="0.8752%" height="15" fill="rgb(251,171,36)" fg:x="148360" fg:w="1601"/><text x="81.3525%" y="303.50"></text></g><g><title>simple_producer`&lt;bytes::bytes_mut::BytesMut as bytes::buf::buf_mut::BufMut&gt;::put_slice (25 samples, 0.01%)</title><rect x="81.9799%" y="277" width="0.0137%" height="15" fill="rgb(230,62,22)" fg:x="149965" fg:w="25"/><text x="82.2299%" y="287.50"></text></g><g><title>simple_producer`&lt;bytes::bytes_mut::BytesMut as bytes::buf::buf_mut::BufMut&gt;::put_slice (39 samples, 0.02%)</title><rect x="81.9947%" y="261" width="0.0213%" height="15" fill="rgb(225,114,35)" fg:x="149992" fg:w="39"/><text x="82.2447%" y="271.50"></text></g><g><title>simple_producer`bytes::bytes_mut::BytesMut::reserve_inner (36 samples, 0.02%)</title><rect x="81.9963%" y="245" width="0.0197%" height="15" fill="rgb(215,118,42)" fg:x="149995" fg:w="36"/><text x="82.2463%" y="255.50"></text></g><g><title>simple_producer`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (32 samples, 0.02%)</title><rect x="81.9985%" y="229" width="0.0175%" height="15" fill="rgb(243,119,21)" fg:x="149999" fg:w="32"/><text x="82.2485%" y="239.50"></text></g><g><title>simple_producer`alloc::raw_vec::finish_grow (28 samples, 0.02%)</title><rect x="82.0007%" y="213" width="0.0153%" height="15" fill="rgb(252,177,53)" fg:x="150003" fg:w="28"/><text x="82.2507%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff814768235 (22 samples, 0.01%)</title><rect x="82.0039%" y="197" width="0.0120%" height="15" fill="rgb(237,209,29)" fg:x="150009" fg:w="22"/><text x="82.2539%" y="207.50"></text></g><g><title>simple_producer`&lt;kafka_protocol::protocol::types::String as kafka_protocol::protocol::Encoder&lt;core::option::Option&lt;&amp;str&gt;&gt;&gt;::encode (42 samples, 0.02%)</title><rect x="81.9936%" y="277" width="0.0230%" height="15" fill="rgb(212,65,23)" fg:x="149990" fg:w="42"/><text x="82.2436%" y="287.50"></text></g><g><title>simple_producer`&lt;kafka_protocol::messages::request_header::RequestHeader as kafka_protocol::protocol::Encodable&gt;::encode (78 samples, 0.04%)</title><rect x="81.9777%" y="293" width="0.0426%" height="15" fill="rgb(230,222,46)" fg:x="149961" fg:w="78"/><text x="82.2277%" y="303.50"></text></g><g><title>libsystem_kernel.dylib`_kernelrpc_mach_vm_deallocate_trap (371 samples, 0.20%)</title><rect x="82.1603%" y="197" width="0.2028%" height="15" fill="rgb(215,135,32)" fg:x="150295" fg:w="371"/><text x="82.4103%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff814772ce7 (373 samples, 0.20%)</title><rect x="82.1603%" y="213" width="0.2039%" height="15" fill="rgb(246,101,22)" fg:x="150295" fg:w="373"/><text x="82.4103%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81477aa5f (384 samples, 0.21%)</title><rect x="82.1548%" y="245" width="0.2099%" height="15" fill="rgb(206,107,13)" fg:x="150285" fg:w="384"/><text x="82.4048%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff8147717a3 (374 samples, 0.20%)</title><rect x="82.1603%" y="229" width="0.2045%" height="15" fill="rgb(250,100,44)" fg:x="150295" fg:w="374"/><text x="82.4103%" y="239.50"></text></g><g><title>simple_producer`core::ptr::drop_in_place&lt;kafka_protocol::messages::produce_request::ProduceRequest&gt; (598 samples, 0.33%)</title><rect x="82.0411%" y="293" width="0.3269%" height="15" fill="rgb(231,147,38)" fg:x="150077" fg:w="598"/><text x="82.2911%" y="303.50"></text></g><g><title>simple_producer`core::ptr::drop_in_place&lt;kafka_protocol::messages::produce_request::TopicProduceData&gt; (557 samples, 0.30%)</title><rect x="82.0635%" y="277" width="0.3045%" height="15" fill="rgb(229,8,40)" fg:x="150118" fg:w="557"/><text x="82.3135%" y="287.50"></text></g><g><title>simple_producer`bytes::bytes::shared_drop (499 samples, 0.27%)</title><rect x="82.0952%" y="261" width="0.2728%" height="15" fill="rgb(221,135,30)" fg:x="150176" fg:w="499"/><text x="82.3452%" y="271.50"></text></g><g><title>simple_producer`kafkas::protocol::KafkaCodec::encode0 (2,393 samples, 1.31%)</title><rect x="81.0779%" y="325" width="1.3082%" height="15" fill="rgb(249,193,18)" fg:x="148315" fg:w="2393"/><text x="81.3279%" y="335.50"></text></g><g><title>simple_producer`kafkas::protocol::KafkaCodec::encode_request (2,367 samples, 1.29%)</title><rect x="81.0921%" y="309" width="1.2939%" height="15" fill="rgb(209,133,39)" fg:x="148341" fg:w="2367"/><text x="81.3421%" y="319.50"></text></g><g><title>simple_producer`&lt;kafkas::protocol::KafkaCodec as tokio_util::codec::encoder::Encoder&lt;kafkas::protocol::Command&gt;&gt;::encode (2,816 samples, 1.54%)</title><rect x="80.8510%" y="341" width="1.5394%" height="15" fill="rgb(232,100,14)" fg:x="147900" fg:w="2816"/><text x="81.1010%" y="351.50"></text></g><g><title>libsystem_kernel.dylib`writev (1,790 samples, 0.98%)</title><rect x="82.4200%" y="261" width="0.9785%" height="15" fill="rgb(224,185,1)" fg:x="150770" fg:w="1790"/><text x="82.6700%" y="271.50"></text></g><g><title>simple_producer`&lt;&amp;mio::net::tcp::stream::TcpStream as std::io::Write&gt;::write_vectored (1,803 samples, 0.99%)</title><rect x="82.4183%" y="277" width="0.9856%" height="15" fill="rgb(223,139,8)" fg:x="150767" fg:w="1803"/><text x="82.6683%" y="287.50"></text></g><g><title>simple_producer`&lt;tokio::net::tcp::stream::TcpStream as tokio::io::async_write::AsyncWrite&gt;::poll_write_vectored (1,842 samples, 1.01%)</title><rect x="82.4036%" y="309" width="1.0069%" height="15" fill="rgb(232,213,38)" fg:x="150740" fg:w="1842"/><text x="82.6536%" y="319.50"></text></g><g><title>simple_producer`tokio::runtime::io::registration::Registration::poll_write_io (1,830 samples, 1.00%)</title><rect x="82.4101%" y="293" width="1.0004%" height="15" fill="rgb(207,94,22)" fg:x="150752" fg:w="1830"/><text x="82.6601%" y="303.50"></text></g><g><title>simple_producer`&lt;tokio_util::codec::framed_impl::FramedImpl&lt;T,U,W&gt; as futures_sink::Sink&lt;I&gt;&gt;::poll_flush (1,873 samples, 1.02%)</title><rect x="82.3904%" y="341" width="1.0239%" height="15" fill="rgb(219,183,54)" fg:x="150716" fg:w="1873"/><text x="82.6404%" y="351.50"></text></g><g><title>simple_producer`tokio_util::util::poll_write_buf (1,859 samples, 1.02%)</title><rect x="82.3981%" y="325" width="1.0162%" height="15" fill="rgb(216,185,54)" fg:x="150730" fg:w="1859"/><text x="82.6481%" y="335.50"></text></g><g><title>simple_producer`&lt;futures_util::stream::stream::split::SplitSink&lt;S,Item&gt; as futures_sink::Sink&lt;Item&gt;&gt;::poll_flush (4,762 samples, 2.60%)</title><rect x="80.8292%" y="357" width="2.6032%" height="15" fill="rgb(254,217,39)" fg:x="147860" fg:w="4762"/><text x="81.0792%" y="367.50">si..</text></g><g><title>simple_producer`tokio::runtime::task::waker::wake_by_val (25 samples, 0.01%)</title><rect x="83.4187%" y="341" width="0.0137%" height="15" fill="rgb(240,178,23)" fg:x="152597" fg:w="25"/><text x="83.6687%" y="351.50"></text></g><g><title>simple_producer`futures_channel::mpsc::UnboundedReceiver&lt;T&gt;::next_message (75 samples, 0.04%)</title><rect x="83.4499%" y="341" width="0.0410%" height="15" fill="rgb(218,11,47)" fg:x="152654" fg:w="75"/><text x="83.6999%" y="351.50"></text></g><g><title>simple_producer`futures_channel::mpsc::queue::Queue&lt;T&gt;::pop_spin (53 samples, 0.03%)</title><rect x="83.4619%" y="325" width="0.0290%" height="15" fill="rgb(218,51,51)" fg:x="152676" fg:w="53"/><text x="83.7119%" y="335.50"></text></g><g><title>simple_producer`futures_util::stream::stream::StreamExt::poll_next_unpin (99 samples, 0.05%)</title><rect x="83.4417%" y="357" width="0.0541%" height="15" fill="rgb(238,126,27)" fg:x="152639" fg:w="99"/><text x="83.6917%" y="367.50"></text></g><g><title>simple_producer`kafkas::connection::Connection&lt;Exe&gt;::connect::_{{closure}}::_{{closure}} (4,917 samples, 2.69%)</title><rect x="80.8100%" y="373" width="2.6879%" height="15" fill="rgb(249,202,22)" fg:x="147825" fg:w="4917"/><text x="81.0600%" y="383.50">si..</text></g><g><title>simple_producer`&lt;tokio::time::sleep::Sleep as core::future::future::Future&gt;::poll (22 samples, 0.01%)</title><rect x="83.5625%" y="325" width="0.0120%" height="15" fill="rgb(254,195,49)" fg:x="152860" fg:w="22"/><text x="83.8125%" y="335.50"></text></g><g><title>simple_producer`&lt;kafkas::executor::Interval as futures_core::stream::Stream&gt;::poll_next (64 samples, 0.03%)</title><rect x="83.5499%" y="357" width="0.0350%" height="15" fill="rgb(208,123,14)" fg:x="152837" fg:w="64"/><text x="83.7999%" y="367.50"></text></g><g><title>simple_producer`tokio::time::interval::Interval::poll_tick (56 samples, 0.03%)</title><rect x="83.5543%" y="341" width="0.0306%" height="15" fill="rgb(224,200,8)" fg:x="152845" fg:w="56"/><text x="83.8043%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81476b006 (20 samples, 0.01%)</title><rect x="84.5098%" y="341" width="0.0109%" height="15" fill="rgb(217,61,36)" fg:x="154593" fg:w="20"/><text x="84.7598%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81477a844 (47 samples, 0.03%)</title><rect x="84.5317%" y="341" width="0.0257%" height="15" fill="rgb(206,35,45)" fg:x="154633" fg:w="47"/><text x="84.7817%" y="351.50"></text></g><g><title>libsystem_kernel.dylib`madvise (2,035 samples, 1.11%)</title><rect x="84.5683%" y="325" width="1.1125%" height="15" fill="rgb(217,65,33)" fg:x="154700" fg:w="2035"/><text x="84.8183%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff814770e84 (41 samples, 0.02%)</title><rect x="85.6879%" y="325" width="0.0224%" height="15" fill="rgb(222,158,48)" fg:x="156748" fg:w="41"/><text x="85.9379%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81477135e (19 samples, 0.01%)</title><rect x="85.7256%" y="325" width="0.0104%" height="15" fill="rgb(254,2,54)" fg:x="156817" fg:w="19"/><text x="85.9756%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff814771487 (24 samples, 0.01%)</title><rect x="85.7743%" y="325" width="0.0131%" height="15" fill="rgb(250,143,38)" fg:x="156906" fg:w="24"/><text x="86.0243%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff814771588 (24 samples, 0.01%)</title><rect x="85.8005%" y="325" width="0.0131%" height="15" fill="rgb(248,25,0)" fg:x="156954" fg:w="24"/><text x="86.0505%" y="335.50"></text></g><g><title>libsystem_kernel.dylib`_kernelrpc_mach_vm_deallocate_trap (71 samples, 0.04%)</title><rect x="85.8224%" y="293" width="0.0388%" height="15" fill="rgb(206,152,27)" fg:x="156994" fg:w="71"/><text x="86.0724%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff8147717a3 (72 samples, 0.04%)</title><rect x="85.8224%" y="325" width="0.0394%" height="15" fill="rgb(240,77,30)" fg:x="156994" fg:w="72"/><text x="86.0724%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff814772ce7 (72 samples, 0.04%)</title><rect x="85.8224%" y="309" width="0.0394%" height="15" fill="rgb(231,5,3)" fg:x="156994" fg:w="72"/><text x="86.0724%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff8147717b9 (21 samples, 0.01%)</title><rect x="85.8623%" y="325" width="0.0115%" height="15" fill="rgb(207,226,32)" fg:x="157067" fg:w="21"/><text x="86.1123%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81477aa5f (2,393 samples, 1.31%)</title><rect x="84.5678%" y="341" width="1.3082%" height="15" fill="rgb(222,207,47)" fg:x="154699" fg:w="2393"/><text x="84.8178%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81476b006 (22 samples, 0.01%)</title><rect x="85.9574%" y="325" width="0.0120%" height="15" fill="rgb(229,115,45)" fg:x="157241" fg:w="22"/><text x="86.2074%" y="335.50"></text></g><g><title>simple_producer`&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (50 samples, 0.03%)</title><rect x="85.9486%" y="341" width="0.0273%" height="15" fill="rgb(224,191,6)" fg:x="157225" fg:w="50"/><text x="86.1986%" y="351.50"></text></g><g><title>simple_producer`&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (26 samples, 0.01%)</title><rect x="85.9825%" y="341" width="0.0142%" height="15" fill="rgb(230,227,24)" fg:x="157287" fg:w="26"/><text x="86.2325%" y="351.50"></text></g><g><title>simple_producer`&lt;bytes::bytes::Bytes as core::convert::From&lt;alloc::vec::Vec&lt;u8&gt;&gt;&gt;::from (42 samples, 0.02%)</title><rect x="86.0121%" y="341" width="0.0230%" height="15" fill="rgb(228,80,19)" fg:x="157341" fg:w="42"/><text x="86.2621%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff8147809b7 (28 samples, 0.02%)</title><rect x="86.1733%" y="325" width="0.0153%" height="15" fill="rgb(247,229,0)" fg:x="157636" fg:w="28"/><text x="86.4233%" y="335.50"></text></g><g><title>simple_producer`&lt;dashmap::iter::Iter&lt;K,V,S,M&gt; as core::iter::traits::iterator::Iterator&gt;::next (317 samples, 0.17%)</title><rect x="86.0438%" y="341" width="0.1733%" height="15" fill="rgb(237,194,15)" fg:x="157399" fg:w="317"/><text x="86.2938%" y="351.50"></text></g><g><title>simple_producer`alloc::sync::Arc&lt;T&gt;::drop_slow (45 samples, 0.02%)</title><rect x="86.1925%" y="325" width="0.0246%" height="15" fill="rgb(219,203,20)" fg:x="157671" fg:w="45"/><text x="86.4425%" y="335.50"></text></g><g><title>simple_producer`alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::remove (43 samples, 0.02%)</title><rect x="86.2684%" y="341" width="0.0235%" height="15" fill="rgb(234,128,8)" fg:x="157810" fg:w="43"/><text x="86.5184%" y="351.50"></text></g><g><title>simple_producer`alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (86 samples, 0.05%)</title><rect x="86.2919%" y="341" width="0.0470%" height="15" fill="rgb(248,202,8)" fg:x="157853" fg:w="86"/><text x="86.5419%" y="351.50"></text></g><g><title>simple_producer`alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (50 samples, 0.03%)</title><rect x="86.3116%" y="325" width="0.0273%" height="15" fill="rgb(206,104,37)" fg:x="157889" fg:w="50"/><text x="86.5616%" y="335.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (30 samples, 0.02%)</title><rect x="86.3226%" y="309" width="0.0164%" height="15" fill="rgb(223,8,27)" fg:x="157909" fg:w="30"/><text x="86.5726%" y="319.50"></text></g><g><title>simple_producer`alloc::collections::btree::remove::_&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;,alloc::collections::btree::node::marker::KV&gt;&gt;::remove_kv_tracking (67 samples, 0.04%)</title><rect x="86.3428%" y="341" width="0.0366%" height="15" fill="rgb(216,217,28)" fg:x="157946" fg:w="67"/><text x="86.5928%" y="351.50"></text></g><g><title>simple_producer`alloc::collections::btree::remove::_&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::KV&gt;&gt;::remove_leaf_kv (60 samples, 0.03%)</title><rect x="86.3466%" y="325" width="0.0328%" height="15" fill="rgb(249,199,1)" fg:x="157953" fg:w="60"/><text x="86.5966%" y="335.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (27 samples, 0.01%)</title><rect x="86.3647%" y="309" width="0.0148%" height="15" fill="rgb(240,85,17)" fg:x="157986" fg:w="27"/><text x="86.6147%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81476a765 (20 samples, 0.01%)</title><rect x="86.4363%" y="277" width="0.0109%" height="15" fill="rgb(206,108,45)" fg:x="158117" fg:w="20"/><text x="86.6863%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff814769698 (98 samples, 0.05%)</title><rect x="86.4046%" y="293" width="0.0536%" height="15" fill="rgb(245,210,41)" fg:x="158059" fg:w="98"/><text x="86.6546%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff814768235 (100 samples, 0.05%)</title><rect x="86.4040%" y="309" width="0.0547%" height="15" fill="rgb(206,13,37)" fg:x="158058" fg:w="100"/><text x="86.6540%" y="319.50"></text></g><g><title>simple_producer`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (147 samples, 0.08%)</title><rect x="86.3794%" y="341" width="0.0804%" height="15" fill="rgb(250,61,18)" fg:x="158013" fg:w="147"/><text x="86.6294%" y="351.50"></text></g><g><title>simple_producer`alloc::raw_vec::finish_grow (137 samples, 0.07%)</title><rect x="86.3849%" y="325" width="0.0749%" height="15" fill="rgb(235,172,48)" fg:x="158023" fg:w="137"/><text x="86.6349%" y="335.50"></text></g><g><title>simple_producer`bytes::bytes::promotable_even_drop (47 samples, 0.03%)</title><rect x="86.4652%" y="341" width="0.0257%" height="15" fill="rgb(249,201,17)" fg:x="158170" fg:w="47"/><text x="86.7152%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff814766e2b (22 samples, 0.01%)</title><rect x="86.5866%" y="325" width="0.0120%" height="15" fill="rgb(219,208,6)" fg:x="158392" fg:w="22"/><text x="86.8366%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff814766e45 (19 samples, 0.01%)</title><rect x="86.6096%" y="325" width="0.0104%" height="15" fill="rgb(248,31,23)" fg:x="158434" fg:w="19"/><text x="86.8596%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff8147806f8 (20 samples, 0.01%)</title><rect x="86.6484%" y="325" width="0.0109%" height="15" fill="rgb(245,15,42)" fg:x="158505" fg:w="20"/><text x="86.8984%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff814780a48 (22 samples, 0.01%)</title><rect x="86.6659%" y="325" width="0.0120%" height="15" fill="rgb(222,217,39)" fg:x="158537" fg:w="22"/><text x="86.9159%" y="335.50"></text></g><g><title>simple_producer`&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (72 samples, 0.04%)</title><rect x="86.6795%" y="325" width="0.0394%" height="15" fill="rgb(210,219,27)" fg:x="158562" fg:w="72"/><text x="86.9295%" y="335.50"></text></g><g><title>simple_producer`&lt;core::sync::atomic::AtomicPtr&lt;T&gt; as bytes::loom::sync::atomic::AtomicMut&lt;T&gt;&gt;::with_mut (21 samples, 0.01%)</title><rect x="86.7189%" y="325" width="0.0115%" height="15" fill="rgb(252,166,36)" fg:x="158634" fg:w="21"/><text x="86.9689%" y="335.50"></text></g><g><title>simple_producer`__rdl_dealloc (34 samples, 0.02%)</title><rect x="86.7315%" y="325" width="0.0186%" height="15" fill="rgb(245,132,34)" fg:x="158657" fg:w="34"/><text x="86.9815%" y="335.50"></text></g><g><title>libsystem_kernel.dylib`madvise (164 samples, 0.09%)</title><rect x="86.7692%" y="277" width="0.0897%" height="15" fill="rgb(236,54,3)" fg:x="158726" fg:w="164"/><text x="87.0192%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff814780dbf (166 samples, 0.09%)</title><rect x="86.7692%" y="293" width="0.0907%" height="15" fill="rgb(241,173,43)" fg:x="158726" fg:w="166"/><text x="87.0192%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff8147700c9 (169 samples, 0.09%)</title><rect x="86.7692%" y="309" width="0.0924%" height="15" fill="rgb(215,190,9)" fg:x="158726" fg:w="169"/><text x="87.0192%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff8147806fe (21 samples, 0.01%)</title><rect x="86.8621%" y="309" width="0.0115%" height="15" fill="rgb(242,101,16)" fg:x="158896" fg:w="21"/><text x="87.1121%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81478070f (23 samples, 0.01%)</title><rect x="86.8856%" y="309" width="0.0126%" height="15" fill="rgb(223,190,21)" fg:x="158939" fg:w="23"/><text x="87.1356%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff8147807e0 (28 samples, 0.02%)</title><rect x="86.9206%" y="309" width="0.0153%" height="15" fill="rgb(215,228,25)" fg:x="159003" fg:w="28"/><text x="87.1706%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff814780826 (19 samples, 0.01%)</title><rect x="86.9676%" y="309" width="0.0104%" height="15" fill="rgb(225,36,22)" fg:x="159089" fg:w="19"/><text x="87.2176%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff814780835 (25 samples, 0.01%)</title><rect x="86.9824%" y="309" width="0.0137%" height="15" fill="rgb(251,106,46)" fg:x="159116" fg:w="25"/><text x="87.2324%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81478086d (30 samples, 0.02%)</title><rect x="87.0064%" y="309" width="0.0164%" height="15" fill="rgb(208,90,1)" fg:x="159160" fg:w="30"/><text x="87.2564%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff814780887 (25 samples, 0.01%)</title><rect x="87.0316%" y="309" width="0.0137%" height="15" fill="rgb(243,10,4)" fg:x="159206" fg:w="25"/><text x="87.2816%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff814780891 (314 samples, 0.17%)</title><rect x="87.0458%" y="309" width="0.1717%" height="15" fill="rgb(212,137,27)" fg:x="159232" fg:w="314"/><text x="87.2958%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff8147808c6 (22 samples, 0.01%)</title><rect x="87.2267%" y="309" width="0.0120%" height="15" fill="rgb(231,220,49)" fg:x="159563" fg:w="22"/><text x="87.4767%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff814780901 (124 samples, 0.07%)</title><rect x="87.2748%" y="309" width="0.0678%" height="15" fill="rgb(237,96,20)" fg:x="159651" fg:w="124"/><text x="87.5248%" y="319.50"></text></g><g><title>libsystem_platform.dylib`_platform_bzero$VARIANT$Haswell (101 samples, 0.06%)</title><rect x="87.2874%" y="293" width="0.0552%" height="15" fill="rgb(239,229,30)" fg:x="159674" fg:w="101"/><text x="87.5374%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff814780912 (20 samples, 0.01%)</title><rect x="87.3437%" y="309" width="0.0109%" height="15" fill="rgb(219,65,33)" fg:x="159777" fg:w="20"/><text x="87.5937%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff814780934 (21 samples, 0.01%)</title><rect x="87.3667%" y="309" width="0.0115%" height="15" fill="rgb(243,134,7)" fg:x="159819" fg:w="21"/><text x="87.6167%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff814780947 (23 samples, 0.01%)</title><rect x="87.3798%" y="309" width="0.0126%" height="15" fill="rgb(216,177,54)" fg:x="159843" fg:w="23"/><text x="87.6298%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81478095b (21 samples, 0.01%)</title><rect x="87.3935%" y="309" width="0.0115%" height="15" fill="rgb(211,160,20)" fg:x="159868" fg:w="21"/><text x="87.6435%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81478096c (24 samples, 0.01%)</title><rect x="87.4060%" y="309" width="0.0131%" height="15" fill="rgb(239,85,39)" fg:x="159891" fg:w="24"/><text x="87.6560%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81478099e (202 samples, 0.11%)</title><rect x="87.4312%" y="309" width="0.1104%" height="15" fill="rgb(232,125,22)" fg:x="159937" fg:w="202"/><text x="87.6812%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff8147809aa (21 samples, 0.01%)</title><rect x="87.5547%" y="309" width="0.0115%" height="15" fill="rgb(244,57,34)" fg:x="160163" fg:w="21"/><text x="87.8047%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff8147809b7 (403 samples, 0.22%)</title><rect x="87.5673%" y="309" width="0.2203%" height="15" fill="rgb(214,203,32)" fg:x="160186" fg:w="403"/><text x="87.8173%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff8147809f6 (22 samples, 0.01%)</title><rect x="87.7876%" y="309" width="0.0120%" height="15" fill="rgb(207,58,43)" fg:x="160589" fg:w="22"/><text x="88.0376%" y="319.50"></text></g><g><title>libsystem_platform.dylib`DYLD-STUB$$_platform_bzero (20 samples, 0.01%)</title><rect x="87.8412%" y="309" width="0.0109%" height="15" fill="rgb(215,193,15)" fg:x="160687" fg:w="20"/><text x="88.0912%" y="319.50"></text></g><g><title>libsystem_platform.dylib`_platform_bzero$VARIANT$Haswell (25 samples, 0.01%)</title><rect x="87.8521%" y="309" width="0.0137%" height="15" fill="rgb(232,15,44)" fg:x="160707" fg:w="25"/><text x="88.1021%" y="319.50"></text></g><g><title>simple_producer`core::ptr::drop_in_place&lt;kafka_protocol::records::Record&gt; (2,587 samples, 1.41%)</title><rect x="86.5008%" y="341" width="1.4142%" height="15" fill="rgb(212,3,48)" fg:x="158235" fg:w="2587"/><text x="86.7508%" y="351.50"></text></g><g><title>simple_producer`bytes::bytes::promotable_even_drop (2,131 samples, 1.16%)</title><rect x="86.7501%" y="325" width="1.1649%" height="15" fill="rgb(218,128,7)" fg:x="158691" fg:w="2131"/><text x="87.0001%" y="335.50"></text></g><g><title>simple_producer`&lt;core::sync::atomic::AtomicPtr&lt;T&gt; as bytes::loom::sync::atomic::AtomicMut&lt;T&gt;&gt;::with_mut (90 samples, 0.05%)</title><rect x="87.8658%" y="309" width="0.0492%" height="15" fill="rgb(226,216,39)" fg:x="160732" fg:w="90"/><text x="88.1158%" y="319.50"></text></g><g><title>simple_producer`&lt;string::String&lt;T&gt; as core::hash::Hash&gt;::hash (32 samples, 0.02%)</title><rect x="88.0347%" y="325" width="0.0175%" height="15" fill="rgb(243,47,51)" fg:x="161041" fg:w="32"/><text x="88.2847%" y="335.50"></text></g><g><title>simple_producer`dashmap::DashMap&lt;K,V,S&gt;::get_mut (270 samples, 0.15%)</title><rect x="87.9265%" y="341" width="0.1476%" height="15" fill="rgb(241,183,40)" fg:x="160843" fg:w="270"/><text x="88.1765%" y="351.50"></text></g><g><title>simple_producer`dashmap::lock::RawRwLock::lock_exclusive_slow (40 samples, 0.02%)</title><rect x="88.0522%" y="325" width="0.0219%" height="15" fill="rgb(231,217,32)" fg:x="161073" fg:w="40"/><text x="88.3022%" y="335.50"></text></g><g><title>libsystem_kernel.dylib`__psynch_cvsignal (1,734 samples, 0.95%)</title><rect x="88.1172%" y="325" width="0.9479%" height="15" fill="rgb(229,61,38)" fg:x="161192" fg:w="1734"/><text x="88.3672%" y="335.50"></text></g><g><title>libsystem_pthread.dylib`pthread_cond_signal (51 samples, 0.03%)</title><rect x="89.0695%" y="325" width="0.0279%" height="15" fill="rgb(225,210,5)" fg:x="162934" fg:w="51"/><text x="89.3195%" y="335.50"></text></g><g><title>libsystem_pthread.dylib`pthread_mutex_lock (48 samples, 0.03%)</title><rect x="89.0974%" y="325" width="0.0262%" height="15" fill="rgb(231,79,45)" fg:x="162985" fg:w="48"/><text x="89.3474%" y="335.50"></text></g><g><title>simple_producer`dashmap::lock::RawRwLock::unlock_exclusive_slow (1,930 samples, 1.06%)</title><rect x="88.0757%" y="341" width="1.0551%" height="15" fill="rgb(224,100,7)" fg:x="161116" fg:w="1930"/><text x="88.3257%" y="351.50"></text></g><g><title>simple_producer`futures_channel::oneshot::Sender&lt;T&gt;::send (24 samples, 0.01%)</title><rect x="89.1308%" y="341" width="0.0131%" height="15" fill="rgb(241,198,18)" fg:x="163046" fg:w="24"/><text x="89.3808%" y="351.50"></text></g><g><title>simple_producer`indexmap::map::IndexMap&lt;K,V,S&gt;::get_mut (70 samples, 0.04%)</title><rect x="89.1461%" y="341" width="0.0383%" height="15" fill="rgb(252,97,53)" fg:x="163074" fg:w="70"/><text x="89.3961%" y="351.50"></text></g><g><title>simple_producer`hashbrown::raw::inner::RawTable&lt;T,A&gt;::insert (21 samples, 0.01%)</title><rect x="89.2056%" y="325" width="0.0115%" height="15" fill="rgb(220,88,7)" fg:x="163183" fg:w="21"/><text x="89.4556%" y="335.50"></text></g><g><title>simple_producer`indexmap::map::core::IndexMapCore&lt;K,V&gt;::insert_full (64 samples, 0.03%)</title><rect x="89.1887%" y="341" width="0.0350%" height="15" fill="rgb(213,176,14)" fg:x="163152" fg:w="64"/><text x="89.4387%" y="351.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (37 samples, 0.02%)</title><rect x="89.8496%" y="309" width="0.0202%" height="15" fill="rgb(246,73,7)" fg:x="164361" fg:w="37"/><text x="90.0996%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff814767004 (23 samples, 0.01%)</title><rect x="89.9415%" y="261" width="0.0126%" height="15" fill="rgb(245,64,36)" fg:x="164529" fg:w="23"/><text x="90.1915%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff8147664ef (50 samples, 0.03%)</title><rect x="90.0125%" y="213" width="0.0273%" height="15" fill="rgb(245,80,10)" fg:x="164659" fg:w="50"/><text x="90.2625%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff814766509 (26 samples, 0.01%)</title><rect x="90.0415%" y="213" width="0.0142%" height="15" fill="rgb(232,107,50)" fg:x="164712" fg:w="26"/><text x="90.2915%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff814769852 (135 samples, 0.07%)</title><rect x="89.9830%" y="229" width="0.0738%" height="15" fill="rgb(253,3,0)" fg:x="164605" fg:w="135"/><text x="90.2330%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81476987c (49 samples, 0.03%)</title><rect x="90.0628%" y="229" width="0.0268%" height="15" fill="rgb(212,99,53)" fg:x="164751" fg:w="49"/><text x="90.3128%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff814769698 (241 samples, 0.13%)</title><rect x="89.9622%" y="245" width="0.1317%" height="15" fill="rgb(249,111,54)" fg:x="164567" fg:w="241"/><text x="90.2122%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff814768235 (254 samples, 0.14%)</title><rect x="89.9595%" y="261" width="0.1389%" height="15" fill="rgb(249,55,30)" fg:x="164562" fg:w="254"/><text x="90.2095%" y="271.50"></text></g><g><title>simple_producer`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (393 samples, 0.21%)</title><rect x="89.8862%" y="293" width="0.2148%" height="15" fill="rgb(237,47,42)" fg:x="164428" fg:w="393"/><text x="90.1362%" y="303.50"></text></g><g><title>simple_producer`alloc::raw_vec::finish_grow (371 samples, 0.20%)</title><rect x="89.8983%" y="277" width="0.2028%" height="15" fill="rgb(211,20,18)" fg:x="164450" fg:w="371"/><text x="90.1483%" y="287.50"></text></g><g><title>simple_producer`&lt;bytes::bytes_mut::BytesMut as bytes::buf::buf_mut::BufMut&gt;::put_slice (759 samples, 0.41%)</title><rect x="89.6889%" y="325" width="0.4149%" height="15" fill="rgb(231,203,46)" fg:x="164067" fg:w="759"/><text x="89.9389%" y="335.50"></text></g><g><title>simple_producer`bytes::bytes_mut::BytesMut::reserve_inner (426 samples, 0.23%)</title><rect x="89.8709%" y="309" width="0.2329%" height="15" fill="rgb(237,142,3)" fg:x="164400" fg:w="426"/><text x="90.1209%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff814768235 (23 samples, 0.01%)</title><rect x="90.1557%" y="261" width="0.0126%" height="15" fill="rgb(241,107,1)" fg:x="164921" fg:w="23"/><text x="90.4057%" y="271.50"></text></g><g><title>simple_producer`bytes::bytes_mut::BytesMut::resize (94 samples, 0.05%)</title><rect x="90.1208%" y="325" width="0.0514%" height="15" fill="rgb(229,83,13)" fg:x="164857" fg:w="94"/><text x="90.3708%" y="335.50"></text></g><g><title>simple_producer`bytes::bytes_mut::BytesMut::reserve_inner (81 samples, 0.04%)</title><rect x="90.1279%" y="309" width="0.0443%" height="15" fill="rgb(241,91,40)" fg:x="164870" fg:w="81"/><text x="90.3779%" y="319.50"></text></g><g><title>simple_producer`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (72 samples, 0.04%)</title><rect x="90.1328%" y="293" width="0.0394%" height="15" fill="rgb(225,3,45)" fg:x="164879" fg:w="72"/><text x="90.3828%" y="303.50"></text></g><g><title>simple_producer`alloc::raw_vec::finish_grow (59 samples, 0.03%)</title><rect x="90.1399%" y="277" width="0.0323%" height="15" fill="rgb(244,223,14)" fg:x="164892" fg:w="59"/><text x="90.3899%" y="287.50"></text></g><g><title>simple_producer`crc::crc32::_&lt;impl crc::Crc&lt;u32&gt;&gt;::checksum (4,762 samples, 2.60%)</title><rect x="90.1721%" y="325" width="2.6032%" height="15" fill="rgb(224,124,37)" fg:x="164951" fg:w="4762"/><text x="90.4221%" y="335.50">si..</text></g><g><title>simple_producer`kafka_protocol::records::Record::compute_size_new (21 samples, 0.01%)</title><rect x="92.7781%" y="325" width="0.0115%" height="15" fill="rgb(251,171,30)" fg:x="169718" fg:w="21"/><text x="93.0281%" y="335.50"></text></g><g><title>libsystem_platform.dylib`DYLD-STUB$$_platform_memmove (153 samples, 0.08%)</title><rect x="93.1596%" y="309" width="0.0836%" height="15" fill="rgb(236,46,54)" fg:x="170416" fg:w="153"/><text x="93.4096%" y="319.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (176 samples, 0.10%)</title><rect x="93.2433%" y="309" width="0.0962%" height="15" fill="rgb(245,213,5)" fg:x="170569" fg:w="176"/><text x="93.4933%" y="319.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (1,029 samples, 0.56%)</title><rect x="94.0950%" y="293" width="0.5625%" height="15" fill="rgb(230,144,27)" fg:x="172127" fg:w="1029"/><text x="94.3450%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff814766f7b (22 samples, 0.01%)</title><rect x="94.7094%" y="245" width="0.0120%" height="15" fill="rgb(220,86,6)" fg:x="173251" fg:w="22"/><text x="94.9594%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff814767004 (27 samples, 0.01%)</title><rect x="94.7280%" y="245" width="0.0148%" height="15" fill="rgb(240,20,13)" fg:x="173285" fg:w="27"/><text x="94.9780%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff8147698d5 (49 samples, 0.03%)</title><rect x="94.7668%" y="229" width="0.0268%" height="15" fill="rgb(217,89,34)" fg:x="173356" fg:w="49"/><text x="95.0168%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff814768184 (79 samples, 0.04%)</title><rect x="94.7619%" y="245" width="0.0432%" height="15" fill="rgb(229,13,5)" fg:x="173347" fg:w="79"/><text x="95.0119%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff8147671cb (20 samples, 0.01%)</title><rect x="94.8330%" y="213" width="0.0109%" height="15" fill="rgb(244,67,35)" fg:x="173477" fg:w="20"/><text x="95.0830%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff8147687de (54 samples, 0.03%)</title><rect x="94.8838%" y="181" width="0.0295%" height="15" fill="rgb(221,40,2)" fg:x="173570" fg:w="54"/><text x="95.1338%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff814767464 (103 samples, 0.06%)</title><rect x="94.8625%" y="197" width="0.0563%" height="15" fill="rgb(237,157,21)" fg:x="173531" fg:w="103"/><text x="95.1125%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff8147697a0 (111 samples, 0.06%)</title><rect x="94.8614%" y="213" width="0.0607%" height="15" fill="rgb(222,94,11)" fg:x="173529" fg:w="111"/><text x="95.1114%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff814766407 (22 samples, 0.01%)</title><rect x="94.9346%" y="197" width="0.0120%" height="15" fill="rgb(249,113,6)" fg:x="173663" fg:w="22"/><text x="95.1846%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff8147664ef (34 samples, 0.02%)</title><rect x="94.9592%" y="197" width="0.0186%" height="15" fill="rgb(238,137,36)" fg:x="173708" fg:w="34"/><text x="95.2092%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff814769852 (123 samples, 0.07%)</title><rect x="94.9243%" y="213" width="0.0672%" height="15" fill="rgb(210,102,26)" fg:x="173644" fg:w="123"/><text x="95.1743%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81476986f (44 samples, 0.02%)</title><rect x="94.9920%" y="213" width="0.0241%" height="15" fill="rgb(218,30,30)" fg:x="173768" fg:w="44"/><text x="95.2420%" y="223.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (44 samples, 0.02%)</title><rect x="94.9920%" y="197" width="0.0241%" height="15" fill="rgb(214,67,26)" fg:x="173768" fg:w="44"/><text x="95.2420%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff814780891 (23 samples, 0.01%)</title><rect x="95.0303%" y="197" width="0.0126%" height="15" fill="rgb(251,9,53)" fg:x="173838" fg:w="23"/><text x="95.2803%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff8147809b7 (21 samples, 0.01%)</title><rect x="95.0626%" y="197" width="0.0115%" height="15" fill="rgb(228,204,25)" fg:x="173897" fg:w="21"/><text x="95.3126%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81476987c (102 samples, 0.06%)</title><rect x="95.0194%" y="213" width="0.0558%" height="15" fill="rgb(207,153,8)" fg:x="173818" fg:w="102"/><text x="95.2694%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81476a469 (22 samples, 0.01%)</title><rect x="95.0795%" y="213" width="0.0120%" height="15" fill="rgb(242,9,16)" fg:x="173928" fg:w="22"/><text x="95.3295%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81476c4a6 (22 samples, 0.01%)</title><rect x="95.1183%" y="197" width="0.0120%" height="15" fill="rgb(217,211,10)" fg:x="173999" fg:w="22"/><text x="95.3683%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81476a587 (76 samples, 0.04%)</title><rect x="95.0965%" y="213" width="0.0415%" height="15" fill="rgb(219,228,52)" fg:x="173959" fg:w="76"/><text x="95.3465%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff8147675f5 (22 samples, 0.01%)</title><rect x="95.1500%" y="181" width="0.0120%" height="15" fill="rgb(231,92,29)" fg:x="174057" fg:w="22"/><text x="95.4000%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff814767669 (69 samples, 0.04%)</title><rect x="95.1648%" y="181" width="0.0377%" height="15" fill="rgb(232,8,23)" fg:x="174084" fg:w="69"/><text x="95.4148%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff814767a48 (19 samples, 0.01%)</title><rect x="95.2031%" y="181" width="0.0104%" height="15" fill="rgb(216,211,34)" fg:x="174154" fg:w="19"/><text x="95.4531%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81476748f (137 samples, 0.07%)</title><rect x="95.1407%" y="197" width="0.0749%" height="15" fill="rgb(236,151,0)" fg:x="174040" fg:w="137"/><text x="95.3907%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81476a765 (140 samples, 0.08%)</title><rect x="95.1407%" y="213" width="0.0765%" height="15" fill="rgb(209,168,3)" fg:x="174040" fg:w="140"/><text x="95.3907%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81476a7a6 (52 samples, 0.03%)</title><rect x="95.2173%" y="213" width="0.0284%" height="15" fill="rgb(208,129,28)" fg:x="174180" fg:w="52"/><text x="95.4673%" y="223.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (52 samples, 0.03%)</title><rect x="95.2173%" y="197" width="0.0284%" height="15" fill="rgb(229,78,22)" fg:x="174180" fg:w="52"/><text x="95.4673%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81476b006 (39 samples, 0.02%)</title><rect x="95.2665%" y="197" width="0.0213%" height="15" fill="rgb(228,187,13)" fg:x="174270" fg:w="39"/><text x="95.5165%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81476a7b3 (100 samples, 0.05%)</title><rect x="95.2462%" y="213" width="0.0547%" height="15" fill="rgb(240,119,24)" fg:x="174233" fg:w="100"/><text x="95.4962%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff814769698 (902 samples, 0.49%)</title><rect x="94.8182%" y="229" width="0.4931%" height="15" fill="rgb(209,194,42)" fg:x="173450" fg:w="902"/><text x="95.0682%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff814768235 (938 samples, 0.51%)</title><rect x="94.8106%" y="245" width="0.5128%" height="15" fill="rgb(247,200,46)" fg:x="173436" fg:w="938"/><text x="95.0606%" y="255.50"></text></g><g><title>simple_producer`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1,205 samples, 0.66%)</title><rect x="94.6772%" y="277" width="0.6587%" height="15" fill="rgb(218,76,16)" fg:x="173192" fg:w="1205"/><text x="94.9272%" y="287.50"></text></g><g><title>simple_producer`alloc::raw_vec::finish_grow (1,179 samples, 0.64%)</title><rect x="94.6914%" y="261" width="0.6445%" height="15" fill="rgb(225,21,48)" fg:x="173218" fg:w="1179"/><text x="94.9414%" y="271.50"></text></g><g><title>simple_producer`&lt;bytes::bytes_mut::BytesMut as bytes::buf::buf_mut::BufMut&gt;::put_slice (3,653 samples, 2.00%)</title><rect x="93.3395%" y="309" width="1.9969%" height="15" fill="rgb(239,223,50)" fg:x="170745" fg:w="3653"/><text x="93.5895%" y="319.50">s..</text></g><g><title>simple_producer`bytes::bytes_mut::BytesMut::reserve_inner (1,239 samples, 0.68%)</title><rect x="94.6591%" y="293" width="0.6773%" height="15" fill="rgb(244,45,21)" fg:x="173159" fg:w="1239"/><text x="94.9091%" y="303.50"></text></g><g><title>simple_producer`DYLD-STUB$$memcpy (91 samples, 0.05%)</title><rect x="95.3364%" y="309" width="0.0497%" height="15" fill="rgb(232,33,43)" fg:x="174398" fg:w="91"/><text x="95.5864%" y="319.50"></text></g><g><title>simple_producer`kafka_protocol::records::RecordBatchEncoder::encode (11,650 samples, 6.37%)</title><rect x="89.2253%" y="341" width="6.3686%" height="15" fill="rgb(209,8,3)" fg:x="163219" fg:w="11650"/><text x="89.4753%" y="351.50">simple_p..</text></g><g><title>simple_producer`kafka_protocol::records::RecordBatchEncoder::encode_new_records (5,130 samples, 2.80%)</title><rect x="92.7896%" y="325" width="2.8044%" height="15" fill="rgb(214,25,53)" fg:x="169739" fg:w="5130"/><text x="93.0396%" y="335.50">si..</text></g><g><title>simple_producer`kafka_protocol::records::Record::compute_size_new (376 samples, 0.21%)</title><rect x="95.3884%" y="309" width="0.2055%" height="15" fill="rgb(254,186,54)" fg:x="174493" fg:w="376"/><text x="95.6384%" y="319.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (25 samples, 0.01%)</title><rect x="95.6344%" y="325" width="0.0137%" height="15" fill="rgb(208,174,49)" fg:x="174943" fg:w="25"/><text x="95.8844%" y="335.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (29 samples, 0.02%)</title><rect x="95.7065%" y="309" width="0.0159%" height="15" fill="rgb(233,191,51)" fg:x="175075" fg:w="29"/><text x="95.9565%" y="319.50"></text></g><g><title>simple_producer`&lt;kafkas::executor::TokioExecutor as kafkas::executor::Executor&gt;::delay (43 samples, 0.02%)</title><rect x="95.7344%" y="309" width="0.0235%" height="15" fill="rgb(222,134,10)" fg:x="175126" fg:w="43"/><text x="95.9844%" y="319.50"></text></g><g><title>simple_producer`tokio::time::sleep::sleep (39 samples, 0.02%)</title><rect x="95.7366%" y="293" width="0.0213%" height="15" fill="rgb(230,226,20)" fg:x="175130" fg:w="39"/><text x="95.9866%" y="303.50"></text></g><g><title>simple_producer`tokio::time::sleep::Sleep::new_timeout (30 samples, 0.02%)</title><rect x="95.7415%" y="277" width="0.0164%" height="15" fill="rgb(251,111,25)" fg:x="175139" fg:w="30"/><text x="95.9915%" y="287.50"></text></g><g><title>simple_producer`tokio::runtime::time::entry::TimerEntry::reset (28 samples, 0.02%)</title><rect x="95.7623%" y="293" width="0.0153%" height="15" fill="rgb(224,40,46)" fg:x="175177" fg:w="28"/><text x="96.0123%" y="303.50"></text></g><g><title>simple_producer`tokio::runtime::time::_&lt;impl tokio::runtime::time::handle::Handle&gt;::reregister (22 samples, 0.01%)</title><rect x="95.7656%" y="277" width="0.0120%" height="15" fill="rgb(236,108,47)" fg:x="175183" fg:w="22"/><text x="96.0156%" y="287.50"></text></g><g><title>simple_producer`&lt;tokio::time::sleep::Sleep as core::future::future::Future&gt;::poll (43 samples, 0.02%)</title><rect x="95.7590%" y="309" width="0.0235%" height="15" fill="rgb(234,93,0)" fg:x="175171" fg:w="43"/><text x="96.0090%" y="319.50"></text></g><g><title>libsystem_kernel.dylib`__psynch_cvsignal (176 samples, 0.10%)</title><rect x="95.8765%" y="245" width="0.0962%" height="15" fill="rgb(224,213,32)" fg:x="175386" fg:w="176"/><text x="96.1265%" y="255.50"></text></g><g><title>simple_producer`parking_lot::condvar::Condvar::notify_one_slow (227 samples, 0.12%)</title><rect x="95.8601%" y="261" width="0.1241%" height="15" fill="rgb(251,11,48)" fg:x="175356" fg:w="227"/><text x="96.1101%" y="271.50"></text></g><g><title>simple_producer`tokio::runtime::driver::Handle::unpark (60 samples, 0.03%)</title><rect x="95.9859%" y="261" width="0.0328%" height="15" fill="rgb(236,173,5)" fg:x="175586" fg:w="60"/><text x="96.2359%" y="271.50"></text></g><g><title>libsystem_kernel.dylib`kevent (58 samples, 0.03%)</title><rect x="95.9870%" y="245" width="0.0317%" height="15" fill="rgb(230,95,12)" fg:x="175588" fg:w="58"/><text x="96.2370%" y="255.50"></text></g><g><title>simple_producer`tokio::runtime::scheduler::multi_thread::worker::_&lt;impl tokio::runtime::scheduler::multi_thread::handle::Handle&gt;::schedule_task (354 samples, 0.19%)</title><rect x="95.8361%" y="277" width="0.1935%" height="15" fill="rgb(232,209,1)" fg:x="175312" fg:w="354"/><text x="96.0861%" y="287.50"></text></g><g><title>simple_producer`futures_channel::mpsc::UnboundedSender&lt;T&gt;::unbounded_send (438 samples, 0.24%)</title><rect x="95.7934%" y="309" width="0.2394%" height="15" fill="rgb(232,6,1)" fg:x="175234" fg:w="438"/><text x="96.0434%" y="319.50"></text></g><g><title>simple_producer`tokio::runtime::task::waker::wake_by_val (370 samples, 0.20%)</title><rect x="95.8306%" y="293" width="0.2023%" height="15" fill="rgb(210,224,50)" fg:x="175302" fg:w="370"/><text x="96.0806%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81476b006 (20 samples, 0.01%)</title><rect x="96.0493%" y="293" width="0.0109%" height="15" fill="rgb(228,127,35)" fg:x="175702" fg:w="20"/><text x="96.2993%" y="303.50"></text></g><g><title>simple_producer`&lt;futures_channel::oneshot::Receiver&lt;T&gt; as core::future::future::Future&gt;::poll (26 samples, 0.01%)</title><rect x="96.0706%" y="293" width="0.0142%" height="15" fill="rgb(245,102,45)" fg:x="175741" fg:w="26"/><text x="96.3206%" y="303.50"></text></g><g><title>simple_producer`futures_util::future::future::FutureExt::poll_unpin (96 samples, 0.05%)</title><rect x="96.0340%" y="309" width="0.0525%" height="15" fill="rgb(214,1,49)" fg:x="175674" fg:w="96"/><text x="96.2840%" y="319.50"></text></g><g><title>simple_producer`kafkas::connection::ConnectionSender&lt;Exe&gt;::send::_{{closure}} (789 samples, 0.43%)</title><rect x="95.6672%" y="325" width="0.4313%" height="15" fill="rgb(226,163,40)" fg:x="175003" fg:w="789"/><text x="95.9172%" y="335.50"></text></g><g><title>simple_producer`kafkas::connection_manager::ConnectionManager&lt;Exe&gt;::invoke::_{{closure}} (920 samples, 0.50%)</title><rect x="95.6016%" y="341" width="0.5029%" height="15" fill="rgb(239,212,28)" fg:x="174883" fg:w="920"/><text x="95.8516%" y="351.50"></text></g><g><title>simple_producer`kafkas::metadata::Cluster::drain_node (24 samples, 0.01%)</title><rect x="96.1056%" y="341" width="0.0131%" height="15" fill="rgb(220,20,13)" fg:x="175805" fg:w="24"/><text x="96.3556%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff814771166 (33 samples, 0.02%)</title><rect x="96.1690%" y="309" width="0.0180%" height="15" fill="rgb(210,164,35)" fg:x="175921" fg:w="33"/><text x="96.4190%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff8147711bb (19 samples, 0.01%)</title><rect x="96.1892%" y="309" width="0.0104%" height="15" fill="rgb(248,109,41)" fg:x="175958" fg:w="19"/><text x="96.4392%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff814767517 (135 samples, 0.07%)</title><rect x="96.1373%" y="325" width="0.0738%" height="15" fill="rgb(238,23,50)" fg:x="175863" fg:w="135"/><text x="96.3873%" y="335.50"></text></g><g><title>simple_producer`kafkas::producer::batch::ProducerBatch::flush (173 samples, 0.09%)</title><rect x="96.1187%" y="341" width="0.0946%" height="15" fill="rgb(211,48,49)" fg:x="175829" fg:w="173"/><text x="96.3687%" y="351.50"></text></g><g><title>libsystem_platform.dylib`DYLD-STUB$$_platform_memmove (40 samples, 0.02%)</title><rect x="96.3603%" y="325" width="0.0219%" height="15" fill="rgb(223,36,21)" fg:x="176271" fg:w="40"/><text x="96.6103%" y="335.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (84 samples, 0.05%)</title><rect x="96.3822%" y="325" width="0.0459%" height="15" fill="rgb(207,123,46)" fg:x="176311" fg:w="84"/><text x="96.6322%" y="335.50"></text></g><g><title>simple_producer`&lt;i16 as kafka_protocol::error::ParseResponseErrorCode&gt;::is_ok (22 samples, 0.01%)</title><rect x="96.4281%" y="325" width="0.0120%" height="15" fill="rgb(240,218,32)" fg:x="176395" fg:w="22"/><text x="96.6781%" y="335.50"></text></g><g><title>simple_producer`DYLD-STUB$$memcpy (20 samples, 0.01%)</title><rect x="96.4401%" y="325" width="0.0109%" height="15" fill="rgb(252,5,43)" fg:x="176417" fg:w="20"/><text x="96.6901%" y="335.50"></text></g><g><title>simple_producer`core::ptr::drop_in_place&lt;futures_channel::oneshot::Sender&lt;core::result::Result&lt;kafkas::producer::RecordMetadata,kafkas::error::Error&gt;&gt;&gt; (42 samples, 0.02%)</title><rect x="96.4511%" y="325" width="0.0230%" height="15" fill="rgb(252,84,19)" fg:x="176437" fg:w="42"/><text x="96.7011%" y="335.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (588 samples, 0.32%)</title><rect x="97.8227%" y="309" width="0.3214%" height="15" fill="rgb(243,152,39)" fg:x="178946" fg:w="588"/><text x="98.0727%" y="319.50"></text></g><g><title>simple_producer`kafkas::producer::batch::Thunk::done (6,696 samples, 3.66%)</title><rect x="96.2133%" y="341" width="3.6604%" height="15" fill="rgb(234,160,15)" fg:x="176002" fg:w="6696"/><text x="96.4633%" y="351.50">simp..</text></g><g><title>simple_producer`futures_channel::oneshot::Sender&lt;T&gt;::send (6,219 samples, 3.40%)</title><rect x="96.4740%" y="325" width="3.3997%" height="15" fill="rgb(237,34,20)" fg:x="176479" fg:w="6219"/><text x="96.7240%" y="335.50">sim..</text></g><g><title>simple_producer`core::ptr::drop_in_place&lt;futures_channel::oneshot::Sender&lt;core::result::Result&lt;kafkas::producer::RecordMetadata,kafkas::error::Error&gt;&gt;&gt; (3,164 samples, 1.73%)</title><rect x="98.1441%" y="309" width="1.7296%" height="15" fill="rgb(229,97,13)" fg:x="179534" fg:w="3164"/><text x="98.3941%" y="319.50"></text></g><g><title>simple_producer`kafkas::producer::Producer&lt;Exe&gt;::send_raw::_{{closure}} (29,712 samples, 16.24%)</title><rect x="83.6324%" y="357" width="16.2424%" height="15" fill="rgb(234,71,50)" fg:x="152988" fg:w="29712"/><text x="83.8824%" y="367.50">simple_producer`kafkas::p..</text></g><g><title>simple_producer`kafkas::producer::batch::Thunk::done (21 samples, 0.01%)</title><rect x="99.8754%" y="357" width="0.0115%" height="15" fill="rgb(253,155,4)" fg:x="182701" fg:w="21"/><text x="100.1254%" y="367.50"></text></g><g><title>simple_producer`kafkas::producer::Producer&lt;Exe&gt;::new::_{{closure}}::_{{closure}} (29,983 samples, 16.39%)</title><rect x="83.4980%" y="373" width="16.3905%" height="15" fill="rgb(222,185,37)" fg:x="152742" fg:w="29983"/><text x="83.7480%" y="383.50">simple_producer`kafkas::p..</text></g><g><title>simple_producer`&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (71,858 samples, 39.28%)</title><rect x="60.6088%" y="389" width="39.2819%" height="15" fill="rgb(251,177,13)" fg:x="110871" fg:w="71858"/><text x="60.8588%" y="399.50">simple_producer`&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; a..</text></g><g><title>simple_producer`tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll (72,014 samples, 39.37%)</title><rect x="60.5885%" y="405" width="39.3672%" height="15" fill="rgb(250,179,40)" fg:x="110834" fg:w="72014"/><text x="60.8385%" y="415.50">simple_producer`tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll</text></g><g><title>simple_producer`tokio::runtime::scheduler::multi_thread::worker::Context::run_task (72,791 samples, 39.79%)</title><rect x="60.1764%" y="421" width="39.7919%" height="15" fill="rgb(242,44,2)" fg:x="110080" fg:w="72791"/><text x="60.4264%" y="431.50">simple_producer`tokio::runtime::scheduler::multi_thread::worker::..</text></g><g><title>simple_producer`tokio::runtime::scheduler::multi_thread::worker::Context::run (77,648 samples, 42.45%)</title><rect x="57.5518%" y="437" width="42.4471%" height="15" fill="rgb(216,177,13)" fg:x="105279" fg:w="77648"/><text x="57.8018%" y="447.50">simple_producer`tokio::runtime::scheduler::multi_thread::worker::Cont..</text></g><g><title>simple_producer`tokio::runtime::task::raw::poll (22 samples, 0.01%)</title><rect x="99.9869%" y="421" width="0.0120%" height="15" fill="rgb(216,106,43)" fg:x="182905" fg:w="22"/><text x="100.2369%" y="431.50"></text></g><g><title>all (182,929 samples, 100%)</title><rect x="0.0000%" y="629" width="100.0000%" height="15" fill="rgb(216,183,2)" fg:x="0" fg:w="182929"/><text x="0.2500%" y="639.50"></text></g><g><title>libsystem_pthread.dylib`thread_start (77,685 samples, 42.47%)</title><rect x="57.5327%" y="613" width="42.4673%" height="15" fill="rgb(249,75,3)" fg:x="105244" fg:w="77685"/><text x="57.7827%" y="623.50">libsystem_pthread.dylib`thread_start</text></g><g><title>libsystem_pthread.dylib`_pthread_start (77,685 samples, 42.47%)</title><rect x="57.5327%" y="597" width="42.4673%" height="15" fill="rgb(219,67,39)" fg:x="105244" fg:w="77685"/><text x="57.7827%" y="607.50">libsystem_pthread.dylib`_pthread_start</text></g><g><title>simple_producer`std::sys::unix::thread::Thread::new::thread_start (77,683 samples, 42.47%)</title><rect x="57.5338%" y="581" width="42.4662%" height="15" fill="rgb(253,228,2)" fg:x="105246" fg:w="77683"/><text x="57.7838%" y="591.50">simple_producer`std::sys::unix::thread::Thread::new::thread_start</text></g><g><title>simple_producer`core::ops::function::FnOnce::call_once{{vtable.shim}} (77,682 samples, 42.47%)</title><rect x="57.5343%" y="565" width="42.4657%" height="15" fill="rgb(235,138,27)" fg:x="105247" fg:w="77682"/><text x="57.7843%" y="575.50">simple_producer`core::ops::function::FnOnce::call_once{{vtable.shim}}</text></g><g><title>simple_producer`std::sys_common::backtrace::__rust_begin_short_backtrace (77,682 samples, 42.47%)</title><rect x="57.5343%" y="549" width="42.4657%" height="15" fill="rgb(236,97,51)" fg:x="105247" fg:w="77682"/><text x="57.7843%" y="559.50">simple_producer`std::sys_common::backtrace::__rust_begin_short_backtr..</text></g><g><title>simple_producer`tokio::runtime::blocking::pool::Inner::run (77,682 samples, 42.47%)</title><rect x="57.5343%" y="533" width="42.4657%" height="15" fill="rgb(240,80,30)" fg:x="105247" fg:w="77682"/><text x="57.7843%" y="543.50">simple_producer`tokio::runtime::blocking::pool::Inner::run</text></g><g><title>simple_producer`tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll (77,682 samples, 42.47%)</title><rect x="57.5343%" y="517" width="42.4657%" height="15" fill="rgb(230,178,19)" fg:x="105247" fg:w="77682"/><text x="57.7843%" y="527.50">simple_producer`tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll</text></g><g><title>simple_producer`tokio::runtime::task::core::Core&lt;T,S&gt;::poll (77,682 samples, 42.47%)</title><rect x="57.5343%" y="501" width="42.4657%" height="15" fill="rgb(210,190,27)" fg:x="105247" fg:w="77682"/><text x="57.7843%" y="511.50">simple_producer`tokio::runtime::task::core::Core&lt;T,S&gt;::poll</text></g><g><title>simple_producer`tokio::loom::std::unsafe_cell::UnsafeCell&lt;T&gt;::with_mut (77,682 samples, 42.47%)</title><rect x="57.5343%" y="485" width="42.4657%" height="15" fill="rgb(222,107,31)" fg:x="105247" fg:w="77682"/><text x="57.7843%" y="495.50">simple_producer`tokio::loom::std::unsafe_cell::UnsafeCell&lt;T&gt;::with_mut</text></g><g><title>simple_producer`tokio::runtime::scheduler::multi_thread::worker::run (77,681 samples, 42.47%)</title><rect x="57.5349%" y="469" width="42.4651%" height="15" fill="rgb(216,127,34)" fg:x="105248" fg:w="77681"/><text x="57.7849%" y="479.50">simple_producer`tokio::runtime::scheduler::multi_thread::worker::run</text></g><g><title>simple_producer`tokio::macros::scoped_tls::ScopedKey&lt;T&gt;::set (77,681 samples, 42.47%)</title><rect x="57.5349%" y="453" width="42.4651%" height="15" fill="rgb(234,116,52)" fg:x="105248" fg:w="77681"/><text x="57.7849%" y="463.50">simple_producer`tokio::macros::scoped_tls::ScopedKey&lt;T&gt;::set</text></g></svg></svg>